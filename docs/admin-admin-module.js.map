{"version":3,"sources":["./src/app/admin/admin-routing.module.ts","./src/app/common/model/role/role.ts","./src/app/admin/admin-home/admin-home.component.ts","./src/app/admin/admin-home/admin-home.component.html","./src/app/common/service/team_service/team.service.ts","./src/app/admin/CRUD/recharge/recharge.component.ts","./src/app/admin/CRUD/recharge/recharge.component.html","./src/app/admin/CRUD/assign-role/assign-role.component.ts","./src/app/admin/CRUD/assign-role/assign-role.component.html","./src/app/admin/CRUD/team/team.component.ts","./src/app/admin/CRUD/team/team.component.html","./src/app/common/model/team/team-model.ts","./src/app/common/service/tournament/tournament.service.ts","./src/app/admin/CRUD/match-crud/match-crud.component.ts","./src/app/admin/CRUD/match-crud/match-crud.component.html","./src/app/admin/admin-manage-recharge/admin-manage-recharge.component.ts","./src/app/admin/admin-manage-recharge/admin-manage-recharge.component.html","./src/app/admin/CRUD/update-match-result/update-match-result.component.ts","./src/app/admin/CRUD/update-match-result/update-match-result.component.html","./src/app/admin/CRUD/venue/venue.component.ts","./src/app/admin/CRUD/venue/venue.component.html","./src/app/admin/admin-manage-matches/admin-manage-matches.component.ts","./src/app/admin/admin-manage-matches/admin-manage-matches.component.html","./src/app/admin/admin-manage-team/admin-manage-team.component.ts","./src/app/admin/admin-manage-team/admin-manage-team.component.html","./src/app/common/model/match/match-model.ts","./src/app/admin/admin-manage-venue/admin-manage-venue.component.ts","./src/app/admin/admin-manage-venue/admin-manage-venue.component.html","./src/app/admin/admin-manage-old-matches/admin-manage-old-matches.component.ts","./src/app/admin/admin-manage-old-matches/admin-manage-old-matches.component.html","./src/app/admin/admin-manage-user/admin-manage-user.component.ts","./src/app/admin/admin-manage-user/admin-manage-user.component.html","./src/app/admin/admin.module.ts","./src/app/common/service/venue/venue.service.ts","./src/app/common/model/match/update-winner-team.ts","./src/app/common/model/venue/venue.ts","./src/app/common/service/recharge_service/recharge.service.ts","./src/app/common/model/recharge/recharge-model.ts","./src/app/admin/CRUD/user-insert/user-insert.component.ts","./src/app/admin/CRUD/user-insert/user-insert.component.html"],"names":[],"mappings":"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","file":"admin-admin-module.js","sourcesContent":["import { ViewOldMatchesComponent } from './../user/my-matches/view-old-matches/view-old-matches.component';\r\nimport { ViewLiveMatchesComponent } from './../user/my-matches/view-live-matches/view-live-matches.component';\r\nimport { MyMatchesComponent } from './../user/my-matches/my-matches.component';\r\nimport { BettingPageComponent } from './../user/betting-page/betting-page.component';\r\nimport { ViewOthersUserProfileComponent } from './../user/user-profile/view-others-user-profile/view-others-user-profile.component';\r\nimport { ViewUserProfileComponent } from './../user/user-profile/view-user-profile/view-user-profile.component';\r\nimport { LeaderBoardComponent } from './../user/leader-board/leader-board.component';\r\nimport { MatchListComponent } from './../user/match-list/match-list.component';\r\nimport { RulesComponent } from './../common/components/footer/rules/rules.component';\r\nimport { ContactUsComponent } from './../common/components/footer/contact-us/contact-us.component';\r\nimport { AboutUsComponent } from './../common/components/footer/about-us/about-us.component';\r\nimport { AdminManageUserComponent } from './admin-manage-user/admin-manage-user.component';\r\nimport { AdminManageTeamComponent } from './admin-manage-team/admin-manage-team.component';\r\nimport { AdminManageRechargeComponent } from './admin-manage-recharge/admin-manage-recharge.component';\r\nimport { AuthGuard } from './../common/guard/auth.guard';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\r\nimport { AdminManageMatchesComponent } from './admin-manage-matches/admin-manage-matches.component';\r\nimport { AdminManageOldMatchesComponent } from './admin-manage-old-matches/admin-manage-old-matches.component';\r\n// import { ChatComponent } from '../user/chat/chat.component';\r\nimport { UserDashboardComponent } from '../user/user-dashboard/user-dashboard.component';\r\nimport { AdminManageVenueComponent } from './admin-manage-venue/admin-manage-venue.component';\r\n\r\nconst routes: Routes = [\r\n\r\n  { path: 'home', component: UserDashboardComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'manage-matches', component: AdminManageMatchesComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'manage-old-matches', component: AdminManageOldMatchesComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'manage-recharge', component: AdminManageRechargeComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'manage-team', component: AdminManageTeamComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'manage-user', component: AdminManageUserComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] } },\r\n  { path: 'about-us', component: AboutUsComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  { path: 'contact-us', component: ContactUsComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  { path: 'rules', component: RulesComponent, canActivate: [AuthGuard]  , data: { roles: ['Admin'] }},\r\n  { path: 'match-list', component: MatchListComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  { path: 'leader-board', component: LeaderBoardComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  { path: 'view-your-profile', component: ViewUserProfileComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  { path: 'view-users-profile/:id', component: ViewOthersUserProfileComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  { path: 'match-list/betting-page/:id', component: BettingPageComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }},\r\n  { path: 'my-matches', component: MyMatchesComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  { path: 'my-matches/view-live-match/:id', component: ViewLiveMatchesComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  { path: 'my-matches/view-old-match/:id', component: ViewOldMatchesComponent, canActivate: [AuthGuard], data: { roles: ['Admin'] }  },\r\n  // { path: 'chat', component: ChatComponent, canActivate: [AuthGuard]  , data: { roles: ['Admin'] }},\r\n  { path: 'manage-venue', component: AdminManageVenueComponent, canActivate: [AuthGuard]  , data: { roles: ['Admin'] }},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AdminRoutingModule { }\r\n","export class RoleModel{\r\n    userId!:number;\r\n    roleId!:number;\r\n}","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { OldMatchesModel } from 'src/app/common/model/match/oldMatchesModel';\r\nimport { UpcomingMatch } from 'src/app/common/model/match/upcomingMatches';\r\nimport { TeamModel } from 'src/app/common/model/team/team-model';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { VenueModel } from 'src/app/common/model/venue/venue';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { TeamService } from 'src/app/common/service/team_service/team.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\nimport { VenueService } from 'src/app/common/service/venue/venue.service';\r\nimport { GetMatch } from 'src/app/common/store/actions/match/matches.action';\r\nimport { GetOldMatch } from 'src/app/common/store/actions/match/oldmatch.action';\r\nimport { GetUpcomingMatch } from 'src/app/common/store/actions/match/upcomingmatch.action';\r\nimport { GetUser } from 'src/app/common/store/actions/user/user.action';\r\nimport { MatchState } from 'src/app/common/store/state/match/matches.state';\r\nimport { OldMatchState } from 'src/app/common/store/state/match/oldMatches.state';\r\nimport { UpcomingMatchState } from 'src/app/common/store/state/match/upcomingMatches.state';\r\nimport { UserState } from 'src/app/common/store/state/user/user.state';\r\n\r\n@Component({\r\n  selector: 'app-admin-home',\r\n  templateUrl: './admin-home.component.html',\r\n  styleUrls: ['./admin-home.component.css']\r\n})\r\nexport class AdminHomeComponent implements OnInit, OnDestroy{\r\n\r\n  teamData: TeamModel[] = [];\r\n  venueData: VenueModel[] = [];\r\n\r\n  upcomingMatches: UpcomingMatch[] = [];\r\n  @Select(UpcomingMatchState.getUpcomingMatchData)\r\n  upcomingMatches$!: Observable<UpcomingMatch[]>;\r\n  @Select(UpcomingMatchState.upcomingMatchLoaded)\r\n  upcomingmatchLoaded$!: Observable<boolean>;\r\n  upcomingmatchLoadedSub!: Subscription;\r\n\r\n  allMatch: MatchModel[] = [];\r\n  @Select(MatchState.getMatchData)\r\n  allMatch$!: Observable<MatchModel[]>;\r\n  @Select(MatchState.MatchLoaded)\r\n  allMatchLoaded$!: Observable<boolean>;\r\n  allMatchLoadedSub!:Subscription;\r\n\r\n  oldMatch: MatchModel[] = [];\r\n  @Select(OldMatchState.getOldMatchData)\r\n  oldMatch$!: Observable<MatchModel[]>;\r\n  @Select(OldMatchState.OldMatchLoaded)\r\n  oldMatchLoaded$!: Observable<boolean>;\r\n  oldMatchLoadedSub!:Subscription;\r\n\r\n  userData: UserModel[] = [];\r\n  @Select(UserState.getUserData)\r\n  userData$!: Observable<UserModel[]>;\r\n  @Select(UserState.UserLoaded)\r\n  userDataLoaded$!: Observable<boolean>;\r\n  userDataLoadedSub!:Subscription;\r\n\r\n  constructor(\r\n    private teamservice: TeamService,\r\n    private userservice: UserService,\r\n    private venueservice: VenueService,\r\n    private matchservice: MatchesService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private store: Store\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    this.userData = await this.getUsers();\r\n    // console.log(this.userData);\r\n    this.userData$.subscribe((res) => {\r\n      this.userData = res;\r\n    });\r\n\r\n    this.allMatch = await this.getMatches();\r\n    // console.log(this.allMatch);\r\n    this.allMatch$.subscribe((res) => {\r\n      this.allMatch = res;\r\n    });\r\n\r\n    this.oldMatch = await this.getOldMatches();\r\n    // console.log(this.oldMatch);\r\n    this.oldMatch$.subscribe((res) => {\r\n      this.oldMatch = res;\r\n    });\r\n\r\n    this.upcomingMatches = await this.getUpcomingMatchDetails();\r\n    // console.log(this.upcomingMatches);\r\n    this.upcomingMatches$.subscribe((res) => {\r\n      this.upcomingMatches = res;\r\n    });\r\n\r\n    this.teamData = await this.getTeams();\r\n    // console.log(this.teamData);\r\n\r\n    this.venueData = await this.getVenue();\r\n    // console.log(this.venueData);\r\n\r\n  }\r\n\r\n  activeStatusCounter(inputs:any) {\r\n    let counter = 0;\r\n    for (const input of inputs) {\r\n      if (input.status === true) counter += 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  inactiveStatusCounter(inputs:any) {\r\n    let counter = 0;\r\n    for (const input of inputs) {\r\n      if (input.status === false) counter += 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  async getUsers(): Promise<any> {\r\n    this.userDataLoadedSub = this.userDataLoaded$.subscribe(async(loadeduserdata) => {\r\n      if (!loadeduserdata) {\r\n        await this.store.dispatch(new GetUser());\r\n      }\r\n    });\r\n  }\r\n\r\n  // async getUsers(): Promise<any> {\r\n  //   let panelClass = 'green';\r\n  //   let snackbarMsg = '';\r\n  //   let snackbarRef = null;\r\n  //   const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n  //   let userModel: UserModel[] = [];\r\n  //   let resp = null;\r\n  //   try {\r\n  //     resp = await this.userservice.getAllUser();\r\n  //     userModel = resp.body;\r\n  //     if (userModel) {\r\n  //       dialogRef.close();\r\n  //       return userModel;\r\n  //     } else {\r\n  //       snackbarMsg = NO_RESP;\r\n  //       panelClass = 'red';\r\n  //     }\r\n  //   } catch (ex) {\r\n  //     snackbarMsg = getErrorMessage(ex);\r\n  //     panelClass = 'red';\r\n  //   } finally {\r\n  //     dialogRef.close();\r\n  //   }\r\n  //   if (snackbarMsg) {\r\n  //     snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n  //       getSnackbarProperties(snackbarMsg, panelClass));\r\n  //   }\r\n  //   return [];\r\n  // }\r\n\r\n  async getMatches(): Promise<any> {\r\n    this.allMatchLoadedSub = this.allMatchLoaded$.subscribe(async(loadedmatchdata) => {\r\n      if (!loadedmatchdata) {\r\n        await this.store.dispatch(new GetMatch());\r\n      }\r\n    });\r\n  }\r\n\r\n  // async getMatches(): Promise<any> {\r\n  //   let panelClass = 'green';\r\n  //   let snackbarMsg = '';\r\n  //   let snackbarRef = null;\r\n  //   const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n  //   let matchModel: MatchModel[] = [];\r\n  //   let resp = null;\r\n  //   try {\r\n  //     resp = await this.matchservice.getAllMatches();\r\n  //     matchModel = resp.body;\r\n  //     if (matchModel) {\r\n  //       dialogRef.close();\r\n  //       return matchModel;\r\n  //     } else {\r\n  //       snackbarMsg = NO_RESP;\r\n  //       panelClass = 'red';\r\n  //     }\r\n  //   } catch (ex) {\r\n  //     snackbarMsg = getErrorMessage(ex);\r\n  //     panelClass = 'red';\r\n  //   } finally {\r\n  //     dialogRef.close();\r\n  //   }\r\n  //   if (snackbarMsg) {\r\n  //     snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n  //       getSnackbarProperties(snackbarMsg, panelClass));\r\n  //   }\r\n  //   return [];\r\n  // }\r\n\r\n  async getOldMatches(): Promise<any> {\r\n    this.oldMatchLoadedSub = this.oldMatchLoaded$.subscribe(async(loadedmatchdata) => {\r\n      if (!loadedmatchdata) {\r\n        await this.store.dispatch(new GetOldMatch());\r\n      }\r\n    });\r\n  }\r\n\r\n  // async getOldMatches(): Promise<any> {\r\n  //   let panelClass = 'green';\r\n  //   let snackbarMsg = '';\r\n  //   let snackbarRef = null;\r\n  //   const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n  //   let matchModel: MatchModel[] = [];\r\n  //   let resp = null;\r\n  //   try {\r\n  //     resp = await this.matchservice.getAllOldMatches();\r\n  //     matchModel = resp.body;\r\n  //     if (matchModel) {\r\n  //       dialogRef.close();\r\n  //       return matchModel;\r\n  //     } else {\r\n  //       snackbarMsg = NO_RESP;\r\n  //       panelClass = 'red';\r\n  //     }\r\n  //   } catch (ex) {\r\n  //     snackbarMsg = getErrorMessage(ex);\r\n  //     panelClass = 'red';\r\n  //   } finally {\r\n  //     dialogRef.close();\r\n  //   }\r\n  //   if (snackbarMsg) {\r\n  //     snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n  //       getSnackbarProperties(snackbarMsg, panelClass));\r\n  //   }\r\n  //   return [];\r\n  // }\r\n\r\n  async getUpcomingMatchDetails(): Promise<any> {\r\n    this.upcomingmatchLoadedSub = this.upcomingmatchLoaded$.subscribe(\r\n      async (loadedmatchdata) => {\r\n        if (!loadedmatchdata) {\r\n          await this.store.dispatch(new GetUpcomingMatch());\r\n        }});\r\n  }\r\n\r\n  // async getMatchDetails(): Promise<any> {\r\n  //   let panelClass = 'green';\r\n  //   let snackbarMsg = '';\r\n  //   let snackbarRef = null;\r\n  //   const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n  //   let matchModel: MatchModel[] = [];\r\n  //   let resp = null;\r\n  //   try {\r\n  //     resp = await this.matchservice.getAllUpcomingMatches();\r\n  //     matchModel = resp.body;\r\n  //     if (matchModel) {\r\n  //       dialogRef.close();\r\n  //       return matchModel;\r\n  //     } else {\r\n  //       snackbarMsg = NO_RESP;\r\n  //       panelClass = 'red';\r\n  //     }\r\n  //   } catch (ex) {\r\n  //     snackbarMsg = getErrorMessage(ex);\r\n  //     panelClass = 'red';\r\n  //   } finally {\r\n  //     dialogRef.close();\r\n  //   }\r\n  //   if (snackbarMsg) {\r\n  //     snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n  //       getSnackbarProperties(snackbarMsg, panelClass));\r\n  //   }\r\n  //   return [];\r\n  // }\r\n\r\n  async getTeams(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let teamModel: TeamModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.teamservice.getAllTeams();\r\n      teamModel = resp.body;\r\n      if (teamModel) {\r\n        dialogRef.close();\r\n        return teamModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async getVenue(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let venueModel: VenueModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.venueservice.getAllVenue();\r\n      venueModel = resp.body;\r\n      if (venueModel) {\r\n        dialogRef.close();\r\n        return venueModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async ngOnDestroy(): Promise<any>{\r\n    this.oldMatchLoadedSub.unsubscribe();\r\n    this.allMatchLoadedSub.unsubscribe();\r\n    this.upcomingmatchLoadedSub.unsubscribe();\r\n    this.userDataLoadedSub.unsubscribe();\r\n  }\r\n\r\n}\r\n","<body>\r\n    <div class=\"container\">\r\n        <h1 class=\"admin\"> <b> Admin Dashboard </b></h1>\r\n    </div>\r\n\r\n    <div class=\"container parent\">\r\n                <div class=\"baap\">\r\n                    <div class=\"inner-content \">\r\n                        <div>\r\n                            <h1>Total Users : {{userData?.length}}</h1>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"sub-data\">\r\n                        <div class=\"subdata-ka-beta\">\r\n                            <h1> Active Users: </h1>\r\n                            <h1 class=\"green\"> {{ activeStatusCounter(userData) }} </h1>\r\n                        </div>\r\n                        <span></span>\r\n                        <div  class=\"subdata-ka-beta\">\r\n                            <h1> InActive Users: </h1>\r\n                            <h1 class=\"red\"> {{ inactiveStatusCounter(userData) }} </h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n   \r\n                <div class=\"baap\">\r\n                    <div class=\"inner-content \">\r\n                        <div >\r\n                            <h1>Total Matches : {{allMatch?.length}}</h1>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div class=\"sub-data\">\r\n                        <div class=\"subdata-ka-beta\">\r\n                            <h1>Matches Left :</h1>\r\n                            <h1 class=\"green\"> {{upcomingMatches?.length}}\r\n                            </h1>\r\n                        </div>\r\n                        <span></span>\r\n                        <div class=\"subdata-ka-beta\">\r\n                            <h1>Matches Declaration Left :</h1>\r\n                            <h1 class=\"red\"> {{oldMatch?.length}} </h1>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            <!-- <mat-grid-tile>\r\n                <div class=\"inner-content\">\r\n                    <div>\r\n                        <h1>Total Bets Placed Till Now : </h1>\r\n                    </div>\r\n                    <div>\r\n                        <h2> 55</h2>\r\n                    </div>\r\n                </div>\r\n            </mat-grid-tile> -->\r\n\r\n                <div class=\"inner-content\">\r\n                    <div>\r\n                        <h1>Total Teams : {{teamData?.length}}</h1>\r\n                    </div>\r\n                </div>\r\n\r\n                \r\n                <div class=\"inner-content\">\r\n                    <div class=\"subdata-ka-beta\">\r\n                        <h1>Total Venues : {{venueData?.length}}</h1>\r\n                    </div>\r\n                </div>\r\n\r\n    </div>\r\n</body>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { teamBaseURL } from '../../constants/http-urls';\r\nimport { TeamModel } from '../../model/team/team-model';\r\nimport { UserModel } from '../../model/user/user-model';\r\n\r\n// let teamBaseUrl = 'http://localhost:8081/teams';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TeamService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  async getAllTeams(): Promise<any> {\r\n    return await this.http.get(teamBaseURL  , { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  // async addTeam(teamModel: TeamModel): Promise<any> {\r\n    async addTeam(formData:FormData):Promise<any>{\r\n    return await this.http.post(teamBaseURL, formData, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async updateTeam(teamId: number, model: TeamModel): Promise<any> {\r\n    return await this.http.put(teamBaseURL + '/' + teamId, model, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async deleteTeam(teamId: number): Promise<any> {\r\n    return await this.http.delete(teamBaseURL + '/' + teamId , { observe: 'response' }).toPromise();\r\n  }\r\n}\r\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { RechargeModel } from 'src/app/common/model/recharge/recharge-model';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { RechargeService } from 'src/app/common/service/recharge_service/recharge.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-recharge',\r\n  templateUrl: './recharge.component.html',\r\n  styleUrls: ['./recharge.component.css']\r\n})\r\nexport class RechargeComponent implements OnInit {\r\n\r\n  rechargeForm!: FormGroup;\r\n  rechargeData!: RechargeModel;\r\n  userData: UserModel[] = [];\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userservice:UserService,\r\n    private rechargeservice: RechargeService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private matDialogRef: MatDialogRef<RechargeComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: RechargeModel\r\n  ) {\r\n    this.rechargeData = data;\r\n    if (data) {\r\n      this.rechargeForm = this.fb.group({\r\n        rechargeId: [{ value: this.data.rechargeId, disabled: true }],\r\n\r\n        // userId: [this.data.userId, [Validators.required, Validators.minLength(1), Validators.maxLength(3), Validators.pattern('[0-9 ]+')]],\r\n        userId: [{value:this.data.userId, disabled: true}],\r\n        points: [this.data.points, [Validators.required, Validators.minLength(3), Validators.maxLength(4), Validators.pattern('[0-9]+')]],\r\n        // rechargeDate: [this.data.rechargeDate, [Validators.required]]\r\n\r\n      });\r\n    } else {\r\n      this.rechargeForm = this.fb.group({\r\n\r\n        rechargeId: [{ disabled: true }],\r\n        userId: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(3), Validators.pattern('[0-9]+')]],\r\n        points: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(4), Validators.pattern('[0-9]+')]],\r\n        // rechargeDate: ['', [Validators.required]]\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  reload()\r\n  {\r\n    location.reload();\r\n  }\r\n\r\n\r\n  async ngOnInit(){\r\n    this.userData = await this.getUsers();\r\n    // console.log(this.userData);\r\n  }\r\n\r\n  async getUsers(): Promise<any> {\r\n    let userModel: UserModel[] = [];\r\n    let resp = null;\r\n      resp = await this.userservice.getAllUser();\r\n      userModel = resp.body;\r\n      if (userModel) {\r\n        return userModel;\r\n      }\r\n          return [];\r\n  }\r\n\r\n\r\n  get form() {\r\n    return this.rechargeForm.controls;\r\n  }\r\n\r\n  reset(field: string) {\r\n    this.form[field].setValue('');\r\n  }\r\n\r\n\r\n  async addRecharge() {\r\n    if (this.rechargeForm.valid) {\r\n      if (!this.rechargeData) {\r\n        this.rechargeData = new RechargeModel();\r\n        this.rechargeData.rechargeId = 0;\r\n        this.rechargeData.userId = this.form.userId.value;\r\n        this.rechargeData.points = this.form.points.value;\r\n        // this.rechargeData.rechargeDate = this.form.rechargeDate.value;\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.rechargeservice.addRecharge(this.rechargeData);\r\n          this.rechargeData = resp.body;\r\n          if (this.rechargeData != null && this.rechargeData.rechargeId > 0) {\r\n            snackbarMsg = 'Recharge successfully Done!';\r\n            this.matDialogRef.close(this.rechargeData);\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      } else {\r\n        this.rechargeData.userId = this.form.userId.value;\r\n        this.rechargeData.points = this.form.points.value;\r\n        // this.rechargeData.rechargeDate = this.form.rechargeDate.value;\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.rechargeservice.updateRecharge(this.rechargeData.rechargeId, this.rechargeData);\r\n          this.rechargeData = resp.body\r\n          if (this.rechargeData != null) {\r\n            snackbarMsg = 'Recharge successfully updated!';\r\n            this.matDialogRef.close(this.rechargeData);\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n}\r\n","<div class=\"sub-container-1-inner\">\r\n    <form [formGroup]=\"rechargeForm\" (ngSubmit)=\"addRecharge()\">\r\n        <div class=\"title\">\r\n            <span>{{rechargeData === null ? 'Add Recharge' : 'Update Recharge'}}</span>\r\n        </div>\r\n        <div class=\"signup-container\">\r\n            <div class=\"first\">\r\n                <div class=\"field-container\" *ngIf=\"rechargeData\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>ID</mat-label>\r\n                        <input matInput formControlName=\"rechargeId\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>User</mat-label>\r\n                        <!-- <input matInput formControlName=\"userId\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"userId\">\r\n                            <mat-option *ngFor=\"let user of userData\" [value]=\"user.userId\"> {{user.username}} </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.userId.errors?.required\">userId is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.userId.errors?.minlength\">userId must have atleast 3 digits\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.userId.errors?.maxlength\">userId must have less than 5 digits\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Points</mat-label>\r\n                        <input matInput formControlName=\"points\" autocomplete=\"off\">\r\n\r\n                        <mat-error *ngIf=\"form.points.errors?.required\">points is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.points.errors?.minlength\">points must have atleast 3 digits\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.points.errors?.maxlength\">points must have less than 4 digits\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <!-- <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Recharge Date</mat-label>\r\n                        <input [owlDateTime]=\"dt2\" [owlDateTimeTrigger]=\"dt2\" matInput formControlName=\"rechargeDate\"\r\n                            autocomplete=\"off\">\r\n                        <owl-date-time #dt2></owl-date-time>\r\n                        <mat-error *ngIf=\"form.rechargeDate.errors?.required\">rechargeDate is reqiured</mat-error>\r\n\r\n                    </mat-form-field>\r\n                </div> -->\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"action-container\">\r\n            <button mat-raised-button *ngIf=\"rechargeData\" color=\"accent\" type=\"submit\">Update</button>\r\n            <button mat-raised-button *ngIf=\"!rechargeData\" color=\"accent\" type=\"submit\">Add</button>\r\n            <span (click)=\"closeDialogBox()\" class=\"cancel-btn\">Cancel</span>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { RoleModel } from 'src/app/common/model/role/role';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-assign-role',\r\n  templateUrl: './assign-role.component.html',\r\n  styleUrls: ['./assign-role.component.css']\r\n})\r\nexport class AssignRoleComponent implements OnInit {\r\n\r\n  assignRole!:FormGroup;\r\n  userData: UserModel[] = [];\r\n  roleData!:RoleModel;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userservice: UserService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private matDialogRef: MatDialogRef<AssignRoleComponent>\r\n  )\r\n  {\r\n    this.assignRole = this.fb.group({\r\n\r\n      userId: ['', [Validators.required]],\r\n\r\n      roleId: ['',[Validators.required]],\r\n\r\n    });\r\n   }\r\n\r\n   reload()\r\n  {\r\n    location.reload();\r\n  }\r\n\r\n  get form() {\r\n    return this.assignRole.controls;\r\n  }\r\n\r\n  roles:any[]=[{roleId:1,name:\"Admin\"},{roleId:2,name:\"User\"}];\r\n\r\n  async ngOnInit(){\r\n    this.userData = await this.getUsers();\r\n    // console.log(this.userData);\r\n  }\r\n\r\n  async getUsers(): Promise<any> {\r\n\r\n    let userModel: UserModel[] = [];\r\n    let resp = null;\r\n      resp = await this.userservice.getAllUser();\r\n      userModel = resp.body;\r\n      if (userModel) {\r\n        return userModel;\r\n      }\r\n    return [];\r\n  }\r\n\r\n  async updateRole() {\r\n    // console.log(this.form.validators);\r\n\r\n    if (this.assignRole.valid) {\r\n      // console.log(this.form.validators);\r\n      if (!this.roleData) {\r\n\r\n        this.roleData = new RoleModel();\r\n        this.roleData.userId = this.form.userId.value;\r\n        this.roleData.roleId = this.form.roleId.value;\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          // resp = await this.matchservice.addMatches(this.roleData);\r\n          resp = await this.userservice.updateRole(this.roleData.userId,this.roleData.roleId);\r\n          const msg = resp.message;\r\n          if (msg != null && this.roleData.userId > 0)\r\n          // && this.roleData.matchId > 0\r\n          {\r\n            snackbarMsg = msg;\r\n            this.matDialogRef.close(this.roleData);\r\n            this.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'green';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"sub-container-1-inner\">\r\n    <form [formGroup]=\"assignRole\" (ngSubmit)=\"updateRole()\">\r\n        <div class=\"title\">\r\n            <span>Assign Role</span>\r\n        </div>\r\n        <div class=\"signup-container\">\r\n            <div class=\"first\">\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Username</mat-label>\r\n                        <!-- <input matInput formControlName=\"resultStatus\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"userId\">\r\n                            <mat-option *ngFor=\"let userdata of userData\" [value]=\"userdata.userId\"> {{userdata?.username}} </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.userId.errors?.required\">resultStatus is reqiured </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Role</mat-label>\r\n                        <!-- <input matInput formControlName=\"winnerTeamId\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"roleId\">\r\n                            <mat-option *ngFor=\"let role of roles\" [value]=\"role.roleId\"> {{role.name}} </mat-option>\r\n                            <!-- <mat-option value=\"2\"> Female </mat-option> -->\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.roleId.errors?.required\">Role is reqiured\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"action-container\">\r\n            <!-- <button mat-raised-button *ngIf=\"matchData\" color=\"accent\" type=\"submit\">Update</button> -->\r\n            <button mat-raised-button color=\"accent\" type=\"submit\" (click)=\"$event.stopPropagation()\">Update</button>\r\n            <!-- *ngIf=\"!matchResultData\" -->\r\n            <span (click)=\"closeDialogBox()\" class=\"cancel-btn\">Cancel</span>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { TeamModel } from 'src/app/common/model/team/team-model';\r\nimport { TeamService } from 'src/app/common/service/team_service/team.service';\r\n\r\n@Component({\r\n  selector: 'app-team',\r\n  templateUrl: './team.component.html',\r\n  styleUrls: ['./team.component.css']\r\n})\r\nexport class TeamComponent implements OnInit {\r\n\r\n  teamForm!: FormGroup;\r\n  teamData!: TeamModel;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private teamservice: TeamService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private matDialogRef: MatDialogRef<TeamComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: TeamModel\r\n  ) {\r\n    this.teamData = data;\r\n    if (data) {\r\n      this.teamForm = this.fb.group({\r\n        teamId: [{ value: this.data.teamId, disabled: true }],\r\n\r\n        name: [this.data.name, [Validators.required, Validators.minLength(5), Validators.maxLength(50), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n        shortName: [this.data.shortName, [Validators.required, Validators.minLength(2)]],\r\n\r\n        teamLogo: [this.data.teamLogo],\r\n        // , [Validators.required, Validators.minLength(6), Validators.maxLength(200)]\r\n\r\n        // createdOn: [this.data.createdOn, [Validators.required]],\r\n\r\n      });\r\n    } else {\r\n      this.teamForm = this.fb.group({\r\n\r\n        teamId: [{ value: '', disabled: true }],\r\n\r\n        name: ['', [Validators.required, Validators.minLength(5) , Validators.maxLength(50), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n        shortName: ['', [Validators.required, Validators.minLength(2)]],\r\n\r\n        teamLogo: [''],\r\n        // , [Validators.required, Validators.minLength(6), Validators.maxLength(200)]\r\n\r\n        // createdOn: ['', [Validators.required]],\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  reload() {\r\n    location.reload();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get form() {\r\n    return this.teamForm.controls;\r\n  }\r\n\r\n  reset(field: string) {\r\n    this.form[field].setValue('');\r\n  }\r\n\r\n  async addTeam() {\r\n    // console.log(this.form.validators);\r\n\r\n    if (this.teamForm.valid) {\r\n      // console.log(this.form.validators);\r\n      if (!this.teamData) {\r\n        this.teamData = new TeamModel();\r\n        // this.teamData.teamId = 0;\r\n        // this.teamData.name = this.form.name.value;\r\n        // this.teamData.shortName = this.form.shortName.value;\r\n        // this.teamData.teamLogo = this.form.teamLogo.value;\r\n\r\n        var formData: any = new FormData();\r\n        formData.append(\"name\", this.form.name.value);\r\n        formData.append(\"shortName\", this.form.shortName.value);\r\n        formData.append(\"teamLogo\", this.form.teamLogo.value);\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.teamservice.addTeam(formData);\r\n          this.teamData = resp.body;\r\n          if (this.teamData != null && this.teamData.teamId > 0) {\r\n            snackbarMsg = 'Team successfully added!';\r\n            this.matDialogRef.close(this.teamData);\r\n            // this.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        // this.teamData.name = this.form.name.value;\r\n        // this.teamData.shortName = this.form.shortName.value;\r\n        // this.teamData.teamLogo = this.form.teamLogo.value;\r\n\r\n        var formData: any = new FormData();\r\n        formData.append(\"name\", this.form.name.value);\r\n        formData.append(\"shortName\", this.form.shortName.value);\r\n        formData.append(\"teamLogo\", this.form.teamLogo.value);\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.teamservice.updateTeam(this.teamData.teamId,formData);\r\n          this.teamData = resp.body;\r\n          if (this.teamData != null) {\r\n            snackbarMsg = 'Team successfully updated!';\r\n            this.matDialogRef.close(this.teamData);\r\n            // this.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"sub-container-1-inner\">\r\n    <form [formGroup]=\"teamForm\" (ngSubmit)=\"addTeam()\">\r\n        <div class=\"title\">\r\n            <span>  {{teamData === null ? 'Add Team' : 'Update Team'}} </span>\r\n        </div>\r\n        <div class=\"signup-container\">\r\n            <div class=\"first\">\r\n                <div class=\"field-container\" *ngIf=\"teamData\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>ID</mat-label>\r\n                        <input matInput formControlName=\"teamId\">\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput formControlName=\"name\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.name.errors?.required\">name is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.name.errors?.minlength\">name must have atleast 5 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.name.errors?.maxlength\"> name must have less than 50 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.name.errors?.pattern\">name is invalid</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label> Short Name</mat-label>\r\n                        <input matInput formControlName=\"shortName\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.shortName.errors?.required\">team1Short is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.shortName.errors?.minlength\">team1Short must have atleast 2 characters</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Team Logo</mat-label>\r\n                        <!-- <input matInput formControlName=\"teamLogo\" autocomplete=\"off\"> -->\r\n                        <ngx-mat-file-input formControlName=\"teamLogo\">\r\n                            <mat-icon ngxMatFileInputIcon>folder</mat-icon>\r\n                        </ngx-mat-file-input>\r\n                        <!-- <mat-error *ngIf=\"form.teamLogo.errors?.required\"> teamLogo is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.teamLogo.errors?.minlength\"> teamLogo must have atleast 6 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.teamLogo.errors?.maxlength\"> teamLogo must have less than 100 characters</mat-error> -->\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"action-container\">\r\n            <button mat-raised-button *ngIf=\"teamData\" color=\"accent\" type=\"submit\">Update</button>\r\n            <button mat-raised-button *ngIf=\"!teamData\" color=\"accent\" type=\"submit\">Add</button>\r\n            <span (click)=\"closeDialogBox()\" class=\"cancel-btn\">Cancel</span>\r\n        </div>\r\n    </form>\r\n</div>","export class TeamModel {\r\n    teamId!:number;\r\n    name!:string;\r\n    shortName!:string;\r\n    teamLogo!:any;\r\n    createdOn!:any;\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { TournamentModel } from '../../model/tournament/tournament';\r\nimport { tournamentBaseURL } from '../../constants/http-urls';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TournamentService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  async getAllTournament(): Promise<any> {\r\n    return await this.http.get(tournamentBaseURL, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n}\r\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { TeamModel } from 'src/app/common/model/team/team-model';\r\nimport { TournamentModel } from 'src/app/common/model/tournament/tournament';\r\nimport { VenueModel } from 'src/app/common/model/venue/venue';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { TeamService } from 'src/app/common/service/team_service/team.service';\r\nimport { TournamentService } from 'src/app/common/service/tournament/tournament.service';\r\nimport { VenueService } from 'src/app/common/service/venue/venue.service';\r\n\r\n@Component({\r\n  selector: 'app-match-crud',\r\n  templateUrl: './match-crud.component.html',\r\n  styleUrls: ['./match-crud.component.css']\r\n})\r\nexport class MatchCRUDComponent implements OnInit {\r\n\r\n  matchForm!: FormGroup;\r\n  matchData!: MatchModel;\r\n  teamData: TeamModel[] = [];\r\n  venueData: VenueModel[]=[];\r\n  tournamentData:TournamentModel[]=[];\r\n\r\n  constructor(\r\n    private teamservice: TeamService,\r\n    private tournamentservice: TournamentService,\r\n    private venueservice:VenueService,\r\n    private fb: FormBuilder,\r\n    private matchservice: MatchesService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private matDialogRef: MatDialogRef<MatchCRUDComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: MatchModel\r\n  ) {\r\n    this.matchData = data;\r\n    if (data) {\r\n      this.matchForm = this.fb.group({\r\n\r\n        matchId: [{value:this.data.matchId,disabled: true} ],\r\n\r\n        minimumPoints: [ this.data.minimumPoints ,[Validators.required, Validators.minLength(2)\r\n        , Validators.maxLength(3), Validators.pattern('[0-9]+') ]],\r\n\r\n        name: [this.data.name, [Validators.required, Validators.minLength(5)\r\n          , Validators.maxLength(50), Validators.pattern('[a-zA-Z0-9 ]+')]],\r\n\r\n        startDatetime: [this.data.startDatetime, [Validators.required]],\r\n\r\n        team1: [this.data.team1Id,[Validators.required, Validators.minLength(1), Validators.maxLength(3), Validators.pattern('[1-9]+')]],\r\n\r\n        team2: [this.data.team2Id,[Validators.required, Validators.minLength(1), Validators.maxLength(3), Validators.pattern('[1-9]+')]],\r\n\r\n        tournamentId: [this.data.tournamentId ,[Validators.required, Validators.pattern('[1-9]+')]],\r\n\r\n        venueId: [this.data.venueId ,[Validators.required, Validators.pattern('[1-9]+')]],\r\n\r\n        // winnerTeamId: [this.data.winnerTeamId ,[Validators.required, Validators.pattern('[1-9]+')]]\r\n\r\n      });\r\n    } else {\r\n      this.matchForm = this.fb.group({\r\n\r\n\r\n        matchId: [ '', [Validators.required,Validators.pattern('[0-9]+')] ],\r\n\r\n        minimumPoints: [ '' ,[Validators.required, Validators.minLength(2)\r\n        , Validators.maxLength(3)]],\r\n\r\n        name: ['', [Validators.required, Validators.minLength(5)\r\n          , Validators.maxLength(50), Validators.pattern('[a-zA-Z0-9 ]+')]],\r\n\r\n        startDatetime: ['', [Validators.required]],\r\n\r\n        team1: ['',[Validators.required, Validators.minLength(1), Validators.maxLength(3), Validators.pattern('[1-9]+')]],\r\n\r\n        team2: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(3), Validators.pattern('[1-9]+')]],\r\n\r\n        tournamentId: ['' ,[Validators.required, Validators.pattern('[1-9]+')]],\r\n\r\n        venueId: ['',[Validators.required, Validators.pattern('[1-9]+')]],\r\n\r\n        // winnerTeamId: ['',[Validators.required, Validators.pattern('[0-9]+')]]\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n\r\n  async ngOnInit() {\r\n    this.teamData = await this.getTeams();\r\n    // console.log(this.teamData);\r\n\r\n    this.venueData = await this.getVenue();\r\n    // console.log(this.venueData);\r\n\r\n    this.tournamentData = await this.getTournament();\r\n    // console.log(this.tournamentData);\r\n\r\n\r\n  }\r\n\r\n  // get Tournament to fill mat-select\r\n\r\n  async getTournament(): Promise<any> {\r\n\r\n    let tournamentModel: TournamentModel[] = [];\r\n    let resp = null;\r\n      resp = await this.tournamentservice.getAllTournament();\r\n      tournamentModel = resp.body;\r\n      if (tournamentModel) {\r\n        return tournamentModel;\r\n      }\r\n    return [];\r\n  }\r\n\r\n   // get Venue to fill mat-select\r\n\r\n   async getVenue(): Promise<any> {\r\n\r\n    let venueModel: VenueModel[] = [];\r\n    let resp = null;\r\n      resp = await this.venueservice.getAllVenue();\r\n      venueModel = resp.body;\r\n      if (venueModel) {\r\n        return venueModel;\r\n      }\r\n    return [];\r\n  }\r\n\r\n  // get teams to fill mat-select\r\n\r\n  async getTeams(): Promise<any> {\r\n\r\n    let teamModel: TeamModel[] = [];\r\n    let resp = null;\r\n      resp = await this.teamservice.getAllTeams();\r\n      teamModel = resp.body;\r\n      if (teamModel) {\r\n        return teamModel;\r\n      }\r\n    return [];\r\n  }\r\n\r\n  reload()\r\n  {\r\n    location.reload();\r\n  }\r\n\r\n  get form() {\r\n    return this.matchForm.controls;\r\n  }\r\n\r\n  reset(field: string) {\r\n    this.form[field].setValue('');\r\n  }\r\n\r\n\r\n  async addMatch() {\r\n    // console.log(this.form.validators);\r\n\r\n    if (this.matchForm.valid) {\r\n      // console.log(this.form.validators);\r\n      if (!this.matchData) {\r\n        this.matchData = new MatchModel();\r\n        this.matchData.matchId = this.form.matchId.value;\r\n        this.matchData.minimumPoints = this.form.minimumPoints.value;\r\n        this.matchData.name = this.form.name.value;\r\n        this.matchData.startDatetime = this.form.startDatetime.value;\r\n        // this.matchData.startDatetime =\"2021-07-21T19:30:00\";\r\n        this.matchData.team1 = this.form.team1.value;\r\n        this.matchData.team2 = this.form.team2.value;\r\n        this.matchData.tournamentId =this.form.tournamentId.value;\r\n        this.matchData.venueId = this.form.venueId.value;\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.matchservice.addMatches(this.matchData);\r\n          this.matchData = resp.body;\r\n          if (this.matchData != null)\r\n          // && this.matchData.matchId > 0\r\n          {\r\n            snackbarMsg = 'Match successfully added!';\r\n            this.matDialogRef.close(this.matchData);\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n      else {\r\n        this.matchData.matchId = this.form.matchId.value;\r\n        this.matchData.minimumPoints = this.form.minimumPoints.value;\r\n        this.matchData.name = this.form.name.value;\r\n        // this.matchData.startDatetime = \"2021-07-21T19:30:00\";\r\n        this.matchData.startDatetime = this.form.startDatetime.value;\r\n\r\n\r\n        this.matchData.team1 = this.form.team1.value;\r\n\r\n\r\n        this.matchData.team2 = this.form.team2.value;\r\n\r\n        this.matchData.tournamentId =this.form.tournamentId.value;\r\n        this.matchData.venueId = this.form.venueId.value;\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.matchservice.updateMatches(this.matchData.matchId, this.matchData);\r\n          this.matchData = resp.body;\r\n          if (this.matchData != null) {\r\n            snackbarMsg = 'Match successfully updated!';\r\n            this.matDialogRef.close(this.matchData);\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"sub-container-1-inner\">\r\n    <form [formGroup]=\"matchForm\" (ngSubmit)=\"addMatch()\">\r\n        <div class=\"title\">\r\n            <span>{{matchData === null ? 'Add Match' : 'Update Match'}}</span>\r\n        </div>\r\n        <div class=\"signup-container\">\r\n            <div class=\"first\">\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>ID</mat-label>\r\n                        <input matInput formControlName=\"matchId\" autocomplete=\"off\" type=\"number\">\r\n                        <mat-error *ngIf=\"form.matchId.errors?.required\">matchId is reqiured\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Tournament</mat-label>\r\n                        <!-- <input matInput formControlName=\"tournamentId\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"tournamentId\">\r\n                            <mat-option *ngFor=\"let tournament of tournamentData\" [value]=\"tournament.tournamentId\"> {{tournament.name}} </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.tournamentId.errors?.required\">tournament name is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.tournamentId.errors?.maxlength\">tournament name must have less than 50 characters</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Name</mat-label>\r\n                        <input matInput formControlName=\"name\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.name.errors?.required\">name is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.name.errors?.minlength\">name must have atleast 5 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.name.errors?.maxlength\"> name must have less than 50 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.name.errors?.pattern\">name is invalid</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Start Date time</mat-label>\r\n                        <input [owlDateTime]=\"dt1\" [owlDateTimeTrigger]=\"dt1\" matInput formControlName=\"startDatetime\" autocomplete=\"off\">\r\n                        <owl-date-time #dt1></owl-date-time>\r\n                        <mat-error *ngIf=\"form.startDatetime.errors?.required\"> startDatetime is reqiured\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n            <div class=\"second\">\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Venue</mat-label>\r\n                        <!-- <input matInput formControlName=\"venueId\" type=\"number\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"venueId\">\r\n                            <mat-option *ngFor=\"let venue of venueData\" [value]=\"venue.venueId\"> {{venue.name}} </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.venueId.errors?.required\">venueId is reqiured\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Team 1</mat-label>\r\n                        <!-- <input matInput formControlName=\"team1\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"team1\">\r\n                            <mat-option *ngFor=\"let team of teamData\" [value]=\"team.teamId\"> {{team.name}} </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.team1.errors?.required\">team1 is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.team1.errors?.minlength || form.team1.errors?.maxlength ||form.team1.errors?.pattern\">\r\n                            team1 no. is invalid\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Team2</mat-label>\r\n                        <!-- <input matInput formControlName=\"team2\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"team2\">\r\n                            <mat-option *ngFor=\"let team of teamData\" [value]=\"team.teamId\"> {{team.name}} </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.team2.errors?.required\">team2 is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.team2.errors?.minlength || form.team2.errors?.maxlength || form.team2.errors?.pattern\">\r\n                            team2 is invalid\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Min Bet</mat-label>\r\n                        <input matInput formControlName=\"minimumPoints\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.minimumPoints.errors?.required\">minimum bet is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.minimumPoints.errors?.minlength\">minimum bet must have atleast 2 digit\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.minimumPoints.errors?.maxlength\">minimum bet must have less than 3 digit\r\n                        </mat-error>\r\n                        <!-- <mat-error *ngIf=\"form.minimumPoints.errors?.pattern\">only digits allowed</mat-error> -->\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"action-container\">\r\n            <button mat-raised-button *ngIf=\"matchData\" color=\"accent\" type=\"submit\">Update</button>\r\n            <button mat-raised-button *ngIf=\"!matchData\" color=\"accent\" type=\"submit\" (click)=\"$event.stopPropagation()\">Add</button>\r\n            <span (click)=\"closeDialogBox()\" class=\"cancel-btn\">Cancel</span>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmBoxComponent } from 'src/app/common/components/confirm-box/confirm-box.component';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { RechargeModel } from 'src/app/common/model/recharge/recharge-model';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { RechargeService } from 'src/app/common/service/recharge_service/recharge.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\nimport { RechargeComponent } from '../CRUD/recharge/recharge.component';\r\n\r\n@Component({\r\n  selector: 'app-admin-manage-recharge',\r\n  templateUrl: './admin-manage-recharge.component.html',\r\n  styleUrls: ['./admin-manage-recharge.component.css']\r\n})\r\nexport class AdminManageRechargeComponent implements OnInit {\r\n\r\n  rechargeData: RechargeModel[] = [];\r\n  userData: UserModel[] = [];\r\n\r\n  displayedColumns: string[] = ['rechargeId', 'userId', 'userName', 'points', 'rechargeDate', 'delete'];\r\n\r\n  dataSource: MatTableDataSource<RechargeModel> = new MatTableDataSource();\r\n  // dataSource = new MatTableDataSource<RechargeModel>(this.rechargeData);\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  constructor(private rechargeservice: RechargeService,\r\n    private dialog: MatDialog,\r\n    private userservice: UserService,\r\n    private snackbar: MatSnackBar\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    this.userData = await this.getUsers();\r\n    // console.log(this.userData);\r\n\r\n    this.rechargeData = await this.getRecharge();\r\n    // console.log(this.rechargeData);\r\n\r\n    this.dataSource.data = this.rechargeData;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  async getUsers(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userModel: UserModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userservice.getAllUser();\r\n      userModel = resp.body;\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async deleteRecharge(rechargeData: RechargeModel): Promise<any> {\r\n    if (this.dialog.openDialogs.length == 0) {\r\n      const dialogRef1 = this.dialog.open(ConfirmBoxComponent, {\r\n        panelClass: 'no-padding-dialog',\r\n        data: 'Think Twice Before Deleting'\r\n      });\r\n      const closeResp = await dialogRef1.afterClosed().toPromise();\r\n      if (closeResp) {\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        // let recharegeModel: RechargeModel[] = [];\r\n        let msg;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.rechargeservice.deleteRecharge(rechargeData.rechargeId);\r\n          msg = resp.body.message;\r\n          if (msg) {\r\n            dialogRef.close();\r\n            snackbarMsg = msg;\r\n            location.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n        }\r\n        if (snackbarMsg) {\r\n          snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n            getSnackbarProperties(snackbarMsg, panelClass));\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  async getRecharge(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let rechargeModel: RechargeModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.rechargeservice.getAllRecharge();\r\n      rechargeModel = resp.body;\r\n      if (rechargeModel) {\r\n        dialogRef.close();\r\n        return rechargeModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n\r\n  openRechargeForm() {\r\n    const dialogRef = this.dialog.open(RechargeComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n\r\n        let tempUserData = this.userData;\r\n        let indexOfTempUserData = tempUserData.findIndex(i=> i.userId == data.userId);\r\n\r\n        this.rechargeData.push(data);\r\n          let volume = this.rechargeData.map((d) =>\r\n            d.userId == data.userId ? {\r\n              ...d,\r\n              username: tempUserData[indexOfTempUserData].username,\r\n              rechargeDate: new Date(),\r\n            } : d\r\n          );\r\n\r\n          this.dataSource.data = volume;\r\n        // this.dataSource.data = this.rechargeData;\r\n        // location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  updateRechargeForm(data: any) {\r\n    const dialogRef = this.dialog.open(RechargeComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true, data });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        // this.rechargeData.push(data);\r\n          let volume = this.rechargeData.map((d) =>\r\n            d.userId == data.userId ? {\r\n              ...d,\r\n              username: data.username,\r\n              rechargeDate: data.rechargeDate,\r\n            } : d\r\n          );\r\n\r\n          this.dataSource.data = volume;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"parent-container container-fluid\">\r\n    <div class=\"mat-elevation-z20 container main-container\">\r\n        <div class=\"conatiner-header\"> Recharge Details </div>\r\n        <div class=\"inner-conatiner\">\r\n            <div class=\"inner-container-actions\">\r\n                <mat-form-field appearance=\"outline\" color=\"accent\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput placeholder=\"Type something here\" type=\"search\" style=\"color:white\" (keyup)=\"applyFilter($event)\">\r\n\r\n                    <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n                <button mat-fab color=\"accent\" class=\"add-button\" (click)=\"openRechargeForm(); $event.stopPropagation()\" title=\"Do Recharge\">\r\n            <mat-icon>person_add</mat-icon>\r\n          </button>\r\n            </div>\r\n\r\n            <table mat-table class=\"mat-elevation-z21\" [dataSource]=\"dataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"rechargeId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Recharge ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.rechargeId}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"userId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> User ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.userId}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"userName\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Username </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.username}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"points\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Points </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.points}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"rechargeDate\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Recharge Date </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.rechargeDate | date:'medium'}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Delete </th>\r\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation(); deleteRecharge(element);\">\r\n                        <button mat-fab>\r\n                        <mat-icon> delete </mat-icon>\r\n                    </button>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row [ngClass]=\"{'evenrow': index%2 == 1}\" *matRowDef=\"let row; columns: displayedColumns; let index=index\" (click)=\"updateRechargeForm(row)\"></tr>\r\n            </table>\r\n            <mat-paginator color=\"accent\" [pageSizeOptions]=\"[10,20]\" showFirstLastButtons></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","import { Optional } from '@angular/core';\r\nimport { Inject } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { MatchResult } from 'src/app/common/model/match/update-winner-team';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\n\r\n@Component({\r\n  selector: 'app-update-match-result',\r\n  templateUrl: './update-match-result.component.html',\r\n  styleUrls: ['./update-match-result.component.css']\r\n})\r\nexport class UpdateMatchResultComponent implements OnInit {\r\n\r\n  matchResultForm!: FormGroup;\r\n  matchResultData!: MatchResult;\r\n  matchById!: MatchModel;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private matchservice: MatchesService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private matDialogRef: MatDialogRef<UpdateMatchResultComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: MatchResult\r\n  ) {\r\n    this.matchResultData = data;\r\n    if (data) {\r\n      this.matchResultForm = this.fb.group({\r\n\r\n        // matchId: [ this.matchResultData.matchId, [Validators.required,Validators.pattern('[0-9]+')] ],\r\n\r\n        resultStatus: [ this.data.resultStatus ,[Validators.required, Validators.pattern('[0-2]+') ]],\r\n\r\n        winnerTeamId: [this.data.winnerTeamId,[Validators.required, Validators.pattern('[0-9]+')]],\r\n\r\n      });\r\n    }\r\n    // else {\r\n    //   this.matchResultForm = this.fb.group({\r\n\r\n\r\n    //     matchId: ['', [Validators.required,Validators.pattern('[0-9]+')] ],\r\n\r\n    //     resultStatus: ['' ,[Validators.required, Validators.pattern('[0-2]+') ]],\r\n\r\n\r\n    //     winnerTeamId: ['',[Validators.required, Validators.pattern('[0-9]+')]],\r\n\r\n    //   });\r\n    // }\r\n  }\r\n  async ngOnInit() {\r\n    // this.matchResultData = await this.updateResult();\r\n    this.matchById = await this.getMatchById();\r\n    // console.log(this.matchById);\r\n  }\r\n\r\n  // GET MATCH BY ID\r\n\r\n  async getMatchById(): Promise<any> {\r\n\r\n    let matchById: MatchModel[] = [];\r\n    let resp = null;\r\n      resp = await this.matchservice.viewMatchById(this.data.matchId);\r\n      matchById = resp.body;\r\n      if (matchById) {\r\n        return matchById;\r\n      }\r\n    return [];\r\n  }\r\n\r\n  reload()\r\n  {\r\n    location.reload();\r\n  }\r\n\r\n  get form() {\r\n    return this.matchResultForm?.controls;\r\n  }\r\n\r\n  reset(field: string) {\r\n    this.form[field].setValue('');\r\n  }\r\n\r\n\r\n  async updateResult() {\r\n    // console.log(this.form.validators);\r\n\r\n    if (this.matchResultForm.valid) {\r\n      // console.log(this.form.validators);\r\n      if (this.matchResultData) {\r\n\r\n        this.matchResultData = new MatchResult();\r\n        this.matchResultData.matchId = this.data.matchId;\r\n        this.matchResultData.resultStatus = this.form.resultStatus.value;\r\n        this.matchResultData.winnerTeamId = this.form.winnerTeamId.value;\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          // resp = await this.matchservice.addMatches(this.matchResultData);\r\n          resp = await this.matchservice.updateMatchResult(this.matchResultData.matchId,this.matchResultData.resultStatus,this.matchResultData.winnerTeamId);\r\n          const msg = resp.body.message;\r\n          if (msg != null && this.matchResultData.matchId > 0)\r\n          // && this.matchResultData.matchId > 0\r\n          {\r\n            snackbarMsg = msg;\r\n            this.matDialogRef.close(this.matchResultData);\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'green';\r\n        } finally {\r\n          dialogRef.close();\r\n          this.matDialogRef.close(this.matchResultData);\r\n          // snackbarMsg = \"Match Result Updated\";\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n      // else {\r\n\r\n      //    }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n\r\n}\r\n","<div class=\"sub-container-1-inner\">\r\n    <form [formGroup]=\"matchResultForm\" (ngSubmit)=\"updateResult()\">\r\n        <div class=\"title\">\r\n            <span>Update Result</span>\r\n        </div>\r\n        <div class=\"signup-container\">\r\n            <div class=\"first\">\r\n\r\n                <!-- <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Match ID</mat-label>\r\n                        <input matInput formControlName=\"matchId\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.matchId.errors?.required\">matchId is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.matchId.errors?.pattern\">matchId should be digits</mat-error>\r\n                    </mat-form-field>\r\n                </div> -->\r\n\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Result </mat-label>\r\n                        <!-- <input matInput formControlName=\"resultStatus\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"resultStatus\">\r\n                            <mat-option value=\"0\"> Draw </mat-option>\r\n                            <mat-option value=\"1\"> Declared </mat-option>\r\n                            <mat-option value=\"2\"> Canceled </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.resultStatus.errors?.required\">resultStatus is reqiured\r\n                        </mat-error>\r\n                        <!-- <mat-error *ngIf=\"form.resultStatus.errors?.minlength\">resultStatus must have atleast 1 digit</mat-error>\r\n                        <mat-error *ngIf=\"form.resultStatus.errors?.maxlength\">resultStatus must have 1 digits</mat-error> -->\r\n                        <mat-error *ngIf=\"form.resultStatus.errors?.pattern\">resultStatus should be digits</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Winner Team </mat-label>\r\n                        <!-- <input matInput formControlName=\"winnerTeamId\" autocomplete=\"off\"> -->\r\n                        <mat-select *ngIf=\"form.resultStatus.value == 0\" [disabled]=\"true\" formControlName=\"winnerTeamId\">\r\n                            <mat-option value=\"0\"> None </mat-option>\r\n                        </mat-select>\r\n                        <mat-select *ngIf=\"form.resultStatus.value != 0 && form.resultStatus.value != 2\" formControlName=\"winnerTeamId\">\r\n                            <!-- <mat-option *ngIf=\"form.resultStatus.value == 0\" value=\"0\"> None </mat-option> -->\r\n                            <mat-option [value]=\"matchById?.team1Id\"> {{matchById?.team1}} </mat-option>\r\n                            <mat-option [value]=\"matchById?.team2Id\"> {{matchById?.team2}} </mat-option>\r\n                        </mat-select>\r\n                        <mat-select *ngIf=\"form.resultStatus.value == 2\" [disabled]=\"true\" formControlName=\"winnerTeamId\">\r\n                            <mat-option value=\"2\"> None </mat-option>\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.winnerTeamId.errors?.required\">winnerTeamId is reqiured\r\n                        </mat-error>\r\n                        <!-- <mat-error *ngIf=\"form.resultStatus.errors?.minlength\">winnerTeamIdmust must have atmost 1 digit</mat-error>\r\n                        <mat-error *ngIf=\"form.winnerTeamId.errors?.maxlength\">winnerTeamIdmust have 1 digit</mat-error> -->\r\n                        <mat-error *ngIf=\"form.winnerTeamId.errors?.pattern\">winnerTeamId should be digits</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"action-container\">\r\n            <!-- <button mat-raised-button *ngIf=\"matchData\" color=\"accent\" type=\"submit\">Update</button> -->\r\n            <button mat-raised-button color=\"accent\" type=\"submit\" (click)=\"$event.stopPropagation()\">Update</button>\r\n            <!-- *ngIf=\"!matchResultData\" -->\r\n            <span (click)=\"closeDialogBox()\" class=\"cancel-btn\">Cancel</span>\r\n        </div>\r\n    </form>\r\n</div>\r\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { VenueModel } from 'src/app/common/model/venue/venue';\r\nimport { VenueService } from 'src/app/common/service/venue/venue.service';\r\n\r\n@Component({\r\n  selector: 'app-venue',\r\n  templateUrl: './venue.component.html',\r\n  styleUrls: ['./venue.component.css']\r\n})\r\nexport class VenueComponent implements OnInit {\r\n\r\n  venueForm!: FormGroup;\r\n  venueData!: VenueModel;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private venueservice: VenueService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private matDialogRef: MatDialogRef<VenueComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: VenueModel\r\n  ) {\r\n    this.venueData = data;\r\n    if (data) {\r\n      this.venueForm = this.fb.group({\r\n        venueId: [{ value: this.data.venueId, disabled: true }],\r\n\r\n        name: [this.data.name, [Validators.required, Validators.minLength(5), Validators.maxLength(50), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n      });\r\n    } else {\r\n      this.venueForm = this.fb.group({\r\n\r\n        venueId: [{ value: '', disabled: true }],\r\n\r\n        name: ['', [Validators.required, Validators.minLength(5) , Validators.maxLength(50), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  reload() {\r\n    location.reload();\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n\r\n  get form() {\r\n    return this.venueForm.controls;\r\n  }\r\n\r\n  reset(field: string) {\r\n    this.form[field].setValue('');\r\n  }\r\n\r\n  async addVenue() {\r\n    // console.log(this.form.validators);\r\n\r\n    if (this.venueForm.valid) {\r\n      if (!this.venueData) {\r\n        this.venueData = new VenueModel();\r\n\r\n        var formData: any = new FormData();\r\n        formData.append(\"name\", this.form.name.value);\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.venueservice.addVenue(formData);\r\n          this.venueData = resp.body;\r\n          if (this.venueData != null && this.venueData.venueId > 0) {\r\n            snackbarMsg = 'Venue successfully added!';\r\n            this.matDialogRef.close(this.venueData);\r\n            // this.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n      else {\r\n\r\n        var formData: any = new FormData();\r\n        formData.append(\"name\", this.form.name.value);\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.venueservice.updateVenue(this.venueData.venueId,formData);\r\n          this.venueData = resp.body;\r\n          if (this.venueData != null) {\r\n            snackbarMsg = 'Venue successfully updated!';\r\n            this.matDialogRef.close(this.venueData);\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"sub-container-1-inner\">\r\n  <form [formGroup]=\"venueForm\" (ngSubmit)=\"addVenue()\">\r\n      <div class=\"title\">\r\n          <span>  {{venueData === null ? 'Add Venue' : 'Update Venue'}} </span>\r\n      </div>\r\n      <div class=\"signup-container\">\r\n          <div class=\"first\">\r\n              <div class=\"field-container\" *ngIf=\"venueData\">\r\n                  <mat-form-field appearance=\"fill\">\r\n                      <mat-label>ID</mat-label>\r\n                      <input matInput formControlName=\"venueId\">\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n              <div class=\"field-container\">\r\n                  <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                      <mat-label>Name</mat-label>\r\n                      <input matInput formControlName=\"name\" autocomplete=\"off\">\r\n                      <mat-error *ngIf=\"form.name.errors?.required\">name is reqiured\r\n                      </mat-error>\r\n                      <mat-error *ngIf=\"form.name.errors?.minlength\">name must have atleast 5 characters</mat-error>\r\n                      <mat-error *ngIf=\"form.name.errors?.maxlength\"> name must have less than 50 characters</mat-error>\r\n                      <mat-error *ngIf=\"form.name.errors?.pattern\">name is invalid</mat-error>\r\n                  </mat-form-field>\r\n              </div>\r\n\r\n          </div>\r\n      </div>\r\n      <div class=\"action-container\">\r\n          <button mat-raised-button *ngIf=\"venueData\" color=\"accent\" type=\"submit\">Update</button>\r\n          <button mat-raised-button *ngIf=\"!venueData\" color=\"accent\" type=\"submit\">Add</button>\r\n          <span (click)=\"closeDialogBox()\" class=\"cancel-btn\">Cancel</span>\r\n      </div>\r\n  </form>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmBoxComponent } from 'src/app/common/components/confirm-box/confirm-box.component';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { TeamModel } from 'src/app/common/model/team/team-model';\r\nimport { VenueModel } from 'src/app/common/model/venue/venue';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { TeamService } from 'src/app/common/service/team_service/team.service';\r\nimport { VenueService } from 'src/app/common/service/venue/venue.service';\r\nimport { MatchCRUDComponent } from '../CRUD/match-crud/match-crud.component';\r\n\r\n@Component({\r\n  selector: 'app-admin-manage-matches',\r\n  templateUrl: './admin-manage-matches.component.html',\r\n  styleUrls: ['./admin-manage-matches.component.css']\r\n})\r\nexport class AdminManageMatchesComponent implements OnInit {\r\n\r\n  matchData: MatchModel[] = [];\r\n  teamData: TeamModel[] = [];\r\n  venueData: VenueModel[] = [];\r\n\r\n  displayedColumns: string[] = ['matchId','name', 'startDatetime', 'team1Logo', 'team1Short', 'team2Logo', 'team2Short', 'venue', 'minimumPoints', 'resultStatus', 'winnerTeamId', 'delete'];\r\n\r\n  // 'team1','team1Id', 'team2', 'team2Id',\r\n\r\n  dataSource: MatTableDataSource<MatchModel> = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  constructor(\r\n    private matchservice: MatchesService,\r\n    private teamservice: TeamService,\r\n    private venueservice:VenueService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    this.matchData = await this.getMatches();\r\n    // console.log(this.matchData);\r\n\r\n    this.teamData = await this.getTeams();\r\n    // console.log(this.teamData);\r\n\r\n    this.venueData = await this.getVenue();\r\n    // console.log(this.venueData);\r\n\r\n    this.dataSource.data = this.matchData;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getResultStatus(matchId: any) {\r\n    return this.matchData.find(obj => obj.matchId === matchId)?.resultStatus;\r\n  }\r\n\r\n  async getVenue(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let venueModel: VenueModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.venueservice.getAllVenue();\r\n      venueModel = resp.body;\r\n      if (venueModel) {\r\n        return venueModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async getTeams(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let teamModel: TeamModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.teamservice.getAllTeams();\r\n      teamModel = resp.body;\r\n      if (teamModel) {\r\n        return teamModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async getMatches(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.getAllMatches();\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async deleteMatch(matchData: MatchModel): Promise<any> {\r\n    if (this.dialog.openDialogs.length == 0) {\r\n      const dialogRef1 = this.dialog.open(ConfirmBoxComponent, {\r\n        panelClass: 'no-padding-dialog',\r\n        data: 'Think Twice Before Deleting'\r\n      });\r\n      const closeResp = await dialogRef1.afterClosed().toPromise();\r\n      if (closeResp) {\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        // let matchModel: MatchModel[] = [];\r\n        let msg;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.matchservice.deleteMatch(matchData.matchId);\r\n          msg = resp.message;\r\n          if (msg) {\r\n            dialogRef.close();\r\n            snackbarMsg = msg;\r\n            let deletedId = this.matchData.findIndex(md => md.matchId == matchData.matchId);\r\n            this.matchData.splice(deletedId,1);\r\n            this.dataSource.data = this.matchData;\r\n            // location.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n        }\r\n        if (snackbarMsg) {\r\n          snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n            getSnackbarProperties(snackbarMsg, panelClass));\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  openMatchForm() {\r\n    const dialogRef = this.dialog.open(MatchCRUDComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        // this.matchData.push(data);\r\n        // this.dataSource.data = this.matchData;\r\n        // location.reload();\r\n\r\n        let tempTeamData = this.teamData;\r\n        let tempVenueData = this.venueData;\r\n        let indexOfTempTeam1Data = tempTeamData.findIndex(i=> i.teamId == data.team1);\r\n        let indexOfTempTeam2Data = tempTeamData.findIndex(i=> i.teamId == data.team2);\r\n        let indexOfTempVenueData = tempVenueData.findIndex(i=> i.venueId == data.venueId);\r\n\r\n        this.matchData.push(data);\r\n          let volume = this.matchData.map((d) =>\r\n            d.matchId == data.matchId ? {\r\n              ...d,\r\n              team1Id: data.team1,\r\n              team1: tempTeamData[indexOfTempTeam1Data].name,\r\n              team1Logo: tempTeamData[indexOfTempTeam1Data].teamLogo,\r\n              team1Short: tempTeamData[indexOfTempTeam1Data].shortName,\r\n              team2Id: data.team2,\r\n              team2: tempTeamData[indexOfTempTeam2Data].name,\r\n              team2Logo: tempTeamData[indexOfTempTeam2Data].teamLogo,\r\n              team2Short: tempTeamData[indexOfTempTeam2Data].shortName,\r\n              venue: tempVenueData[indexOfTempVenueData].name,\r\n            } : d\r\n          );\r\n\r\n          this.dataSource.data = volume;\r\n      }\r\n    });\r\n  }\r\n  updateMatchForm(data: any) {\r\n    const dialogRef = this.dialog.open(MatchCRUDComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true, data });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        // this.matchData.push(data);\r\n        // this.dataSource.data = this.matchData;\r\n\r\n        let tempTeamData = this.teamData;\r\n        let tempVenueData = this.venueData;\r\n        let indexOfTempTeam1Data = tempTeamData.findIndex(i=> i.teamId == data.team1);\r\n        let indexOfTempTeam2Data = tempTeamData.findIndex(i=> i.teamId == data.team2);\r\n        let indexOfTempVenueData = tempVenueData.findIndex(i=> i.venueId == data.venueId);\r\n\r\n          let volume = this.matchData.map((d) =>\r\n            d.matchId == data.matchId ? {\r\n              ...d,\r\n              team1Id: data.team1,\r\n              team1: tempTeamData[indexOfTempTeam1Data].name,\r\n              team1Logo: tempTeamData[indexOfTempTeam1Data].teamLogo,\r\n              team1Short: tempTeamData[indexOfTempTeam1Data].shortName,\r\n              team2Id: data.team2,\r\n              team2: tempTeamData[indexOfTempTeam2Data].name,\r\n              team2Logo: tempTeamData[indexOfTempTeam2Data].teamLogo,\r\n              team2Short: tempTeamData[indexOfTempTeam2Data].shortName,\r\n              venue: tempVenueData[indexOfTempVenueData].name,\r\n              minimumPoints: data.minimumPoints,\r\n              startDatetime: data.startDatetime,\r\n            } : d\r\n          );\r\n\r\n          this.dataSource.data = volume;\r\n        // location.reload();\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"parent-container container-fluid\">\r\n    <div class=\"mat-elevation-z20 container main-container\">\r\n        <div class=\"conatiner-header\"> Match Details </div>\r\n        <!-- <button class=\"right\" mat-raised-button color=\"primary\" (click)=\"openResultForm()\">Update Result</button> -->\r\n        <div class=\"inner-conatiner\">\r\n            <div class=\"inner-container-actions\">\r\n                <mat-form-field appearance=\"outline\" color=\"accent\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput placeholder=\"Type something here\" type=\"search\" style=\"color:white\" (keyup)=\"applyFilter($event)\">\r\n\r\n                    <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n                <button mat-fab color=\"accent\" class=\"add-button\" (click)=\"openMatchForm()\" matTooltip=\"Add Match\">\r\n            <mat-icon>sports_cricket</mat-icon>\r\n          </button>\r\n            </div>\r\n\r\n            <table mat-table class=\"mat-elevation-z21\" [dataSource]=\"dataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"minimumPoints\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Min Bet </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.minimumPoints}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"matchId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.matchId}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Name </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"resultStatus\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Result </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.resultStatus}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"startDatetime\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Start Date Time </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.startDatetime | date:'short'}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"team1\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team 1 </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team1}} </td>\r\n                </ng-container> -->\r\n\r\n                <!-- <ng-container matColumnDef=\"team1Id\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team1 ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team1Id}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"team1Logo\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team1 Logo </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; width: 50px; height: 50px;\" src=\"{{element.team1Logo}}\" /> </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"team1Short\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team 1 </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team1Short}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"team2\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team 2 </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team2}} </td>\r\n                </ng-container> -->\r\n\r\n                <!-- <ng-container matColumnDef=\"team2Id\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team2 ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team2Id}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"team2Logo\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team2 Logo </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; width: 50px; height: 50px;\" src=\"{{element.team2Logo}}\" /> </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"team2Short\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team 2 </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team2Short}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"tournamentId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Tournament ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.tournamentId}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"venue\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Venue </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.venue}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"winnerTeamId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Winner Team ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.winnerTeamId}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Delete </th>\r\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation(); deleteMatch(element);\">\r\n                        <button mat-fab>\r\n                <mat-icon> delete </mat-icon>\r\n              </button>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row [ngClass]=\"{'evenrow': index%2 == 1}\" *matRowDef=\"let row; columns: displayedColumns; let index=index\" (click)=\"updateMatchForm(row)\"></tr>\r\n\r\n            </table>\r\n            <mat-paginator color=\"accent\" [pageSizeOptions]=\"[10,20]\" showFirstLastButtons></mat-paginator>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmBoxComponent } from 'src/app/common/components/confirm-box/confirm-box.component';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { TeamModel } from 'src/app/common/model/team/team-model';\r\nimport { TeamService } from 'src/app/common/service/team_service/team.service';\r\nimport { TeamComponent } from '../CRUD/team/team.component';\r\n\r\n@Component({\r\n  selector: 'app-admin-manage-team',\r\n  templateUrl: './admin-manage-team.component.html',\r\n  styleUrls: ['./admin-manage-team.component.css']\r\n})\r\nexport class AdminManageTeamComponent implements OnInit {\r\n\r\n  teamData: TeamModel[] = [];\r\n\r\n  displayedColumns: string[] = ['teamId', 'name', 'shortName', 'teamLogo', 'delete'];\r\n\r\n  dataSource: MatTableDataSource<TeamModel> = new MatTableDataSource();\r\n  // dataSource = new MatTableDataSource<RechargeModel>(this.teamData);\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  constructor(\r\n    private teamservice: TeamService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    this.teamData = await this.getTeams();\r\n    // console.log(this.teamData);\r\n\r\n    this.dataSource.data = this.teamData;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  async deleteTeam(teamData: TeamModel): Promise<any> {\r\n    if (this.dialog.openDialogs.length == 0) {\r\n      const dialogRef1 = this.dialog.open(ConfirmBoxComponent, {\r\n        panelClass: 'no-padding-dialog',\r\n        data: 'Think Twice Before Deleting'\r\n      });\r\n      const closeResp = await dialogRef1.afterClosed().toPromise();\r\n      if (closeResp) {\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        // let recharegeModel: RechargeModel[] = [];\r\n        let msg;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.teamservice.deleteTeam(teamData.teamId);\r\n          msg = resp.body.message;\r\n          if (msg) {\r\n            dialogRef.close();\r\n            snackbarMsg = msg;\r\n            // location.reload();\r\n            let deletedId = this.teamData.findIndex(md => md.teamId == teamData.teamId);\r\n            this.teamData.splice(deletedId,1);\r\n            this.dataSource.data = this.teamData;\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n        }\r\n        if (snackbarMsg) {\r\n          snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n            getSnackbarProperties(snackbarMsg, panelClass));\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  async getTeams(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let teamModel: TeamModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.teamservice.getAllTeams();\r\n      teamModel = resp.body;\r\n      if (teamModel) {\r\n        dialogRef.close();\r\n        return teamModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n\r\n  openTeamForm() {\r\n    const dialogRef = this.dialog.open(TeamComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        this.teamData.push(data);\r\n        this.dataSource.data = this.teamData;\r\n      }\r\n    });\r\n  }\r\n  updateTeamForm(data: any) {\r\n    const dialogRef = this.dialog.open(TeamComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true, data });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        let volume = this.teamData.map((d) =>\r\n            d.teamId == data.teamId ? {\r\n              ...d,\r\n              name: data.name,\r\n              shortName: data.shortName,\r\n              teamLogo: data.teamLogo,\r\n            } : d\r\n          );\r\n\r\n          this.dataSource.data = volume;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"parent-container container-fluid\">\r\n    <div class=\"mat-elevation-z20 container main-container\">\r\n        <div class=\"conatiner-header\"> Team Details </div>\r\n        <div class=\"inner-conatiner\">\r\n            <div class=\"inner-container-actions\">\r\n                <mat-form-field appearance=\"outline\" color=\"accent\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput placeholder=\"Type something here\" type=\"search\" style=\"color:white\" (keyup)=\"applyFilter($event)\">\r\n                    <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n                <button mat-fab color=\"accent\" class=\"add-button\" (click)=\"openTeamForm()\" title=\"Add Team\">\r\n            <mat-icon>person_add</mat-icon>\r\n          </button>\r\n            </div>\r\n\r\n            <table mat-table class=\"mat-elevation-z21\" [dataSource]=\"dataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"teamId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.teamId}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> name </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"shortName\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> shortName </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.shortName}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"teamLogo\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> teamLogo </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> <img loading=\"lazy\" src=\"{{element.teamLogo}}\" style=\"border-radius: 50%; width: 50px; height: 50px;\" /></td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Delete </th>\r\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation(); deleteTeam(element);\">\r\n                        <button mat-fab>\r\n                        <mat-icon> delete </mat-icon>\r\n                    </button>\r\n                    </td>\r\n                </ng-container>\r\n\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row [ngClass]=\"{'evenrow': index%2 == 1}\" *matRowDef=\"let row; columns: displayedColumns; let index=index\" (click)=\"updateTeamForm(row)\"></tr>\r\n            </table>\r\n            <mat-paginator color=\"accent\" [pageSizeOptions]=\"[10,20]\" showFirstLastButtons></mat-paginator>\r\n        </div>\r\n    </div>\r\n</div>","export class MatchModel \r\n{\r\n    matchId!:any;\r\n    minimumPoints!:number;\r\n    name!:string;\r\n    resultStatus!: boolean;\r\n    // startDatetime!: any;\r\n    team1!: string;\r\n    team1Id!: number;\r\n    team1Logo!: any;\r\n    team1Short!: string;\r\n    team2!: string;\r\n    team2Id!: number;\r\n    team2Logo!: any;\r\n    team2Short!: string;\r\n    tournamentId!: number;\r\n    venue!: string;\r\n    winnerTeamId!: number;\r\n    startDatetime!:Date;\r\n    venueId!:number;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmBoxComponent } from 'src/app/common/components/confirm-box/confirm-box.component';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { VenueModel } from 'src/app/common/model/venue/venue';\r\nimport { VenueService } from 'src/app/common/service/venue/venue.service';\r\nimport { VenueComponent } from '../CRUD/venue/venue.component';\r\n\r\n@Component({\r\n  selector: 'app-admin-manage-venue',\r\n  templateUrl: './admin-manage-venue.component.html',\r\n  styleUrls: ['./admin-manage-venue.component.css']\r\n})\r\nexport class AdminManageVenueComponent implements OnInit {\r\n\r\n  venueData: VenueModel[] = [];\r\n\r\n  displayedColumns: string[] = ['venueId', 'name', 'delete'];\r\n\r\n  dataSource: MatTableDataSource<VenueModel> = new MatTableDataSource();\r\n  // dataSource = new MatTableDataSource<RechargeModel>(this.venueData);\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  constructor(\r\n    private venueService: VenueService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    this.venueData = await this.getVenue();\r\n    console.log(this.venueData);\r\n\r\n    this.dataSource.data = this.venueData;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  async deleteVenue(venueData: VenueModel): Promise<any> {\r\n    if (this.dialog.openDialogs.length == 0) {\r\n      const dialogRef1 = this.dialog.open(ConfirmBoxComponent, {\r\n        panelClass: 'no-padding-dialog',\r\n        data: 'Think Twice Before Deleting'\r\n      });\r\n      const closeResp = await dialogRef1.afterClosed().toPromise();\r\n      if (closeResp) {\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        // let recharegeModel: RechargeModel[] = [];\r\n        let msg;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.venueService.deleteVenue(venueData.venueId);\r\n          msg = resp.body.message;\r\n          if (msg) {\r\n            dialogRef.close();\r\n            snackbarMsg = msg;\r\n            // location.reload();\r\n            let deletedId = this.venueData.findIndex(md => md.venueId == venueData.venueId);\r\n            this.venueData.splice(deletedId,1);\r\n            this.dataSource.data = this.venueData;\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n        }\r\n        if (snackbarMsg) {\r\n          snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n            getSnackbarProperties(snackbarMsg, panelClass));\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  async getVenue(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let VenueModel: VenueModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.venueService.getAllVenue();\r\n      VenueModel = resp.body;\r\n      if (VenueModel) {\r\n        dialogRef.close();\r\n        return VenueModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n\r\n  openVenueForm() {\r\n    const dialogRef = this.dialog.open(VenueComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        this.venueData.push(data);\r\n        this.dataSource.data = this.venueData;\r\n      }\r\n    });\r\n  }\r\n  updateVenueForm(data: any) {\r\n    const dialogRef = this.dialog.open(VenueComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true, data });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        // let volume = this.venueData.map((d) =>\r\n        //     d.teamId == data.teamId ? {\r\n        //       ...d,\r\n        //       name: data.name,\r\n        //       shortName: data.shortName,\r\n        //       teamLogo: data.teamLogo,\r\n        //     } : d\r\n        //   );\r\n\r\n          this.dataSource.data = data;\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"parent-container container-fluid\">\r\n  <div class=\"mat-elevation-z20 container main-container\">\r\n      <div class=\"conatiner-header\"> Venue Details </div>\r\n      <div class=\"inner-conatiner\">\r\n          <div class=\"inner-container-actions\">\r\n              <mat-form-field appearance=\"outline\" color=\"accent\">\r\n                  <mat-label>Search</mat-label>\r\n                  <input matInput placeholder=\"Type something here\" type=\"search\" style=\"color:white\" (keyup)=\"applyFilter($event)\">\r\n                  <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n              </mat-form-field>\r\n\r\n              <button mat-fab color=\"accent\" class=\"add-button\" (click)=\"openVenueForm()\" title=\"Add Venue\">\r\n          <mat-icon>person_add</mat-icon>\r\n        </button>\r\n          </div>\r\n\r\n          <table mat-table class=\"mat-elevation-z21\" [dataSource]=\"dataSource\" matSort>\r\n\r\n              <ng-container matColumnDef=\"venueId\">\r\n                  <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Venue ID </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.venueId}} </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"name\">\r\n                  <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Venue Name </th>\r\n                  <td mat-cell *matCellDef=\"let element\"> {{element.name}} </td>\r\n              </ng-container>\r\n\r\n              <ng-container matColumnDef=\"delete\">\r\n                  <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Delete </th>\r\n                  <td mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation(); deleteVenue(element);\">\r\n                      <button mat-fab>\r\n                      <mat-icon> delete </mat-icon>\r\n                  </button>\r\n                  </td>\r\n              </ng-container>\r\n\r\n\r\n              <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n              <tr mat-row [ngClass]=\"{'evenrow': index%2 == 1}\" *matRowDef=\"let row; columns: displayedColumns; let index=index\" (click)=\"updateVenueForm(row)\"></tr>\r\n          </table>\r\n          <mat-paginator color=\"accent\" [pageSizeOptions]=\"[10,20]\" showFirstLastButtons></mat-paginator>\r\n      </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmBoxComponent } from 'src/app/common/components/confirm-box/confirm-box.component';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { UpdateMatchResultComponent } from '../CRUD/update-match-result/update-match-result.component';\r\n\r\n@Component({\r\n  selector: 'app-admin-manage-old-matches',\r\n  templateUrl: './admin-manage-old-matches.component.html',\r\n  styleUrls: ['./admin-manage-old-matches.component.css']\r\n})\r\nexport class AdminManageOldMatchesComponent implements OnInit {\r\n\r\n  oldMatchData: MatchModel[] = [];\r\n\r\n  displayedColumns: string[] = ['matchId', 'startDatetime', 'team1Logo', 'team1Short', 'team2Logo', 'team2Short', 'venue', 'minimumPoints', 'resultStatus', 'winnerTeamId', 'delete'];\r\n\r\n  // 'team1','team1Id', 'team2', 'team2Id',\r\n\r\n  dataSource: MatTableDataSource<MatchModel> = new MatTableDataSource();\r\n  // dataSource = new MatTableDataSource<UserModel>(this.userData);\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  constructor(private matchservice: MatchesService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    this.oldMatchData = await this.getOldMatches();\r\n    // console.log(this.oldMatchData);\r\n\r\n    this.dataSource.data = this.oldMatchData;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getResultStatus(matchId: any) {\r\n    return this.oldMatchData.find(obj => obj.matchId === matchId)?.resultStatus;\r\n  }\r\n\r\n  async getOldMatches(): Promise<any> {\r\n\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.getAllOldMatches();\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n\r\n  async deleteMatch(oldMatchData: MatchModel): Promise<any> {\r\n    if (this.dialog.openDialogs.length == 0) {\r\n      const dialogRef1 = this.dialog.open(ConfirmBoxComponent, {\r\n        panelClass: 'no-padding-dialog',\r\n        data: 'Think Twice Before Deleting'\r\n      });\r\n      const closeResp = await dialogRef1.afterClosed().toPromise();\r\n      if (closeResp) {\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        // let matchModel: MatchModel[] = [];\r\n        let msg;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.matchservice.deleteMatch(oldMatchData.matchId);\r\n          msg = resp.message;\r\n          if (msg) {\r\n            dialogRef.close();\r\n            snackbarMsg = msg;\r\n            location.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n        }\r\n        if (snackbarMsg) {\r\n          snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n            getSnackbarProperties(snackbarMsg, panelClass));\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  updateMatchForm(data: any) {\r\n    const dialogRef = this.dialog.open(UpdateMatchResultComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true, data });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        // this.oldMatchData.push(data);\r\n        // this.dataSource.data = this.oldMatchData;\r\n\r\n        let deletedId = this.oldMatchData.findIndex(md => md.matchId == data.matchId);\r\n            this.oldMatchData.splice(deletedId,1);\r\n            this.dataSource.data = this.oldMatchData;\r\n\r\n        // location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"parent-container container-fluid\">\r\n    <div class=\"mat-elevation-z20 container main-container\">\r\n        <div class=\"conatiner-header\"> Update Match Result </div>\r\n        <!-- <button class=\"right\" mat-raised-button color=\"primary\" (click)=\"openResultForm()\">Update Result</button> -->\r\n        <div class=\"inner-conatiner\">\r\n            <div class=\"inner-container-actions\">\r\n                <mat-form-field appearance=\"outline\" color=\"accent\">\r\n                    <mat-label>Search</mat-label>\r\n                    <input matInput placeholder=\"Type something here\" type=\"search\" style=\"color:white\" (keyup)=\"applyFilter($event)\">\r\n\r\n                    <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n                </mat-form-field>\r\n\r\n                <!-- <button mat-fab color=\"accent\" class=\"add-button\" (click)=\"openMatchForm()\">\r\n            <mat-icon>sports_cricket</mat-icon>\r\n          </button> -->\r\n            </div>\r\n\r\n            <table mat-table class=\"mat-elevation-z21\" [dataSource]=\"dataSource\" matSort>\r\n\r\n                <ng-container matColumnDef=\"minimumPoints\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Min Bet </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.minimumPoints}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"matchId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.matchId}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"name\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Name </th>\r\n                    <td mat-cell *matCellDef=\"let element\" class=\"highlight\"> {{element.name}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"resultStatus\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Result </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.resultStatus}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"startDatetime\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Start Date Time </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.startDatetime | date:'short'}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"team1\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team 1 </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team1}} </td>\r\n                </ng-container> -->\r\n\r\n                <!-- <ng-container matColumnDef=\"team1Id\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team1 ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team1Id}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"team1Logo\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team1 Logo </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; width: 50px; height: 50px;\" src=\"{{element.team1Logo}}\" /> </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"team1Short\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team1 Short </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team1Short}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"team2\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team 2 </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team2}} </td>\r\n                </ng-container> -->\r\n\r\n                <!-- <ng-container matColumnDef=\"team2Id\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team2 ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team2Id}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"team2Logo\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team2 Logo </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; width: 50px; height: 50px;\" src=\"{{element.team2Logo}}\" /> </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"team2Short\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Team2 Short </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.team2Short}} </td>\r\n                </ng-container>\r\n\r\n                <!-- <ng-container matColumnDef=\"tournamentId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Tournament ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.tournamentId}} </td>\r\n                </ng-container> -->\r\n\r\n                <ng-container matColumnDef=\"venue\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Venue </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.venue}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"winnerTeamId\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Winner Team ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> {{element.winnerTeamId}} </td>\r\n                </ng-container>\r\n\r\n                <ng-container matColumnDef=\"delete\">\r\n                    <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Delete </th>\r\n                    <td mat-cell *matCellDef=\"let element\" (click)=\"$event.stopPropagation(); deleteMatch(element);\">\r\n                        <button mat-fab>\r\n                <mat-icon> delete </mat-icon>\r\n              </button>\r\n                    </td>\r\n                </ng-container>\r\n\r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                <tr mat-row [ngClass]=\"{'evenrow': index%2 == 1}\" *matRowDef=\"let row; columns: displayedColumns; let index=index\" (click)=\"updateMatchForm(row)\"></tr>\r\n\r\n            </table>\r\n            <mat-paginator color=\"accent\" [pageSizeOptions]=\"[10,20]\" showFirstLastButtons></mat-paginator>\r\n        </div>\r\n\r\n    </div>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ConfirmBoxComponent } from 'src/app/common/components/confirm-box/confirm-box.component';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\nimport { AssignRoleComponent } from '../CRUD/assign-role/assign-role.component';\r\nimport { UserInsertComponent } from '../CRUD/user-insert/user-insert.component';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-admin-manage-user',\r\n  templateUrl: './admin-manage-user.component.html',\r\n  styleUrls: ['./admin-manage-user.component.css']\r\n})\r\nexport class AdminManageUserComponent implements OnInit {\r\n\r\n  userData: UserModel[] = [];\r\n\r\n  displayedColumns: string[] = ['userId', 'firstName', 'genderName', 'roleName', 'username', 'availablePoints', 'email', 'mobileNumber', 'status', 'delete'];\r\n\r\n  dataSource: MatTableDataSource<UserModel> = new MatTableDataSource();\r\n  // dataSource = new MatTableDataSource<UserModel>(this.userData);\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  constructor(private userservice: UserService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    this.userData = await this.getUsers();\r\n    // console.log(this.userData);\r\n\r\n    this.dataSource.data = this.userData;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  getActiveStatus(userId: any) {\r\n    return this.userData.find(obj => obj.userId === userId)?.status;\r\n  }\r\n\r\n  async changeActiveStatus(userId: number, isActive: boolean) {\r\n\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let msg;\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userservice.updateActiveStatus(userId, isActive);\r\n      msg = resp.message;\r\n      if (msg) {\r\n        dialogRef.close();\r\n        const i = this.userData.findIndex(obj => obj.userId === userId);\r\n        this.userData[i].status = isActive;\r\n        snackbarMsg = msg;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n  }\r\n\r\n  async getUsers(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userModel: UserModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userservice.getAllUser();\r\n      userModel = resp.body;\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async deleteUser(userData: UserModel): Promise<any> {\r\n    if (this.dialog.openDialogs.length == 0) {\r\n      const dialogRef1 = this.dialog.open(ConfirmBoxComponent, {\r\n        panelClass: 'no-padding-dialog',\r\n        data: 'Think Twice Before Deleting'\r\n      });\r\n      const closeResp = await dialogRef1.afterClosed().toPromise();\r\n      if (closeResp) {\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        // let userModel: UserModel[] = [];\r\n        let msg;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.userservice.deleteUser(userData.userId);\r\n          msg = resp.body.message;\r\n          if (msg) {\r\n            snackbarMsg = msg;\r\n            dialogRef.close();\r\n            // location.reload();\r\n            let deletedId = this.userData.findIndex(md => md.userId == userData.userId);\r\n            this.userData.splice(deletedId,1);\r\n            this.dataSource.data = this.userData;\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n        }\r\n        if (snackbarMsg) {\r\n          snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n            getSnackbarProperties(snackbarMsg, panelClass));\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  roleName: any = {\r\n    1:\"Admin\",\r\n    2:\"User\"\r\n  }\r\n\r\n  gender: any = {\r\n    1:\"Male\",\r\n    2:\"Female\"\r\n  }\r\n\r\n  openUserForm() {\r\n    const dialogRef = this.dialog.open(UserInsertComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        // this.userData.push(data);\r\n        // this.dataSource.data = this.userData;\r\n\r\n        this.userData.push(data);\r\n          let volume = this.userData.map((d) =>\r\n            d.userId == data.userId ? {\r\n              ...d,\r\n              roleId: data.roleId,\r\n              roleName: this.roleName[data.roleId],\r\n              genderId: data.genderId,\r\n              genderName: this.gender[data.genderId]\r\n            } : d\r\n          );\r\n\r\n          this.dataSource.data = volume;\r\n      }\r\n    });\r\n  }\r\n  updateUserForm(data: any) {\r\n    const dialogRef = this.dialog.open(UserInsertComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true, data });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        // this.userData.push(data);\r\n        // this.dataSource.data = this.userData;\r\n\r\n        // let tempUserData = this.userData;\r\n        // let indexOfTempUserData = tempUserData.findIndex(i=> i.userId == data.userId);\r\n\r\n          let volume = this.userData.map((d) =>\r\n            d.userId == data.userId ? {\r\n              ...d,\r\n              firstName: data.firstName,\r\n              lastName: data.lastName,\r\n              email: data.email,\r\n              mobileNumber: data.mobileNumber,\r\n              genderId: data.genderId,\r\n              // roleId: data.roleId,\r\n              // roleName: this.roleName[data.roleId],\r\n              genderName: this.gender[data.genderId]\r\n            } : d\r\n          );\r\n\r\n          this.dataSource.data = volume;\r\n      }\r\n    });\r\n  }\r\n\r\n  openAssignForm() {\r\n    const dialogRef = this.dialog.open(AssignRoleComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        this.userData.push(data);\r\n        this.dataSource.data = this.userData;\r\n      }\r\n    });\r\n  }\r\n}\r\n","<div class=\"parent-container container-fluid\">\r\n  <div class=\"mat-elevation-z20 container main-container\">\r\n    <div class=\"conatiner-header\">\r\n      User Details\r\n      <button\r\n        class=\"right\"\r\n        mat-raised-button\r\n        color=\"primary\"\r\n        (click)=\"openAssignForm()\"\r\n      >\r\n        Assign Role\r\n      </button>\r\n    </div>\r\n    <div class=\"inner-conatiner\">\r\n      <div class=\"inner-container-actions\">\r\n        <mat-form-field appearance=\"outline\" color=\"accent\">\r\n          <mat-label>Search</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Type something here\"\r\n            type=\"search\"\r\n            style=\"color: white\"\r\n            (keyup)=\"applyFilter($event)\"\r\n          />\r\n\r\n          <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n\r\n        <button\r\n          mat-fab\r\n          color=\"accent\"\r\n          class=\"add-button\"\r\n          (click)=\"openUserForm(); $event.stopPropagation()\"\r\n          matTooltip=\"Add User\"\r\n        >\r\n          <mat-icon>person_add</mat-icon>\r\n        </button>\r\n      </div>\r\n\r\n      <table\r\n        mat-table\r\n        class=\"mat-elevation-z21\"\r\n        [dataSource]=\"dataSource\"\r\n        matSort\r\n      >\r\n        <ng-container matColumnDef=\"userId\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            ID\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.userId }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"firstName\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Name\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.firstName }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"genderName\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Gender\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.genderName }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"roleName\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Role\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.roleName }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"username\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Username\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.username }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"availablePoints\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Points\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            {{ element.availablePoints }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"email\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Email\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.email }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"mobileNumber\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Phone No.\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">{{ element.mobileNumber }}</td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"delete\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Delete\r\n          </th>\r\n          <td\r\n            mat-cell\r\n            *matCellDef=\"let element\"\r\n            (click)=\"$event.stopPropagation(); deleteUser(element)\"\r\n          >\r\n            <button mat-fab>\r\n              <mat-icon> delete </mat-icon>\r\n            </button>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <ng-container matColumnDef=\"status\">\r\n          <th\r\n            mat-header-cell\r\n            mat-sort-header\r\n            *matHeaderCellDef\r\n            class=\"highlight\"\r\n          >\r\n            Status\r\n          </th>\r\n          <td mat-cell *matCellDef=\"let element\">\r\n            <mat-slide-toggle\r\n              (change)=\"changeActiveStatus(element.userId, !element.status)\"\r\n              (click)=\"$event.stopPropagation()\"\r\n              [checked]=\"getActiveStatus(element.userId)\"\r\n            >\r\n            </mat-slide-toggle>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr\r\n          mat-row\r\n          [ngClass]=\"{ evenrow: index % 2 == 1 }\"\r\n          *matRowDef=\"let row; columns: displayedColumns; let index = index\"\r\n          (click)=\"updateUserForm(row)\"\r\n        ></tr>\r\n      </table>\r\n      <mat-paginator\r\n        color=\"accent\"\r\n        [pageSizeOptions]=\"[10, 20]\"\r\n        showFirstLastButtons\r\n      ></mat-paginator>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { MatRippleModule } from '@angular/material/core';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { NgxMatFileInputModule } from '@angular-material-components/file-input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { MatTableFilterModule } from 'mat-table-filter';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from './../app-routing.module';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { AdminRoutingModule } from './admin-routing.module';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AdminManageUserComponent } from './admin-manage-user/admin-manage-user.component';\r\nimport { AdminManageRechargeComponent } from './admin-manage-recharge/admin-manage-recharge.component';\r\nimport { AdminManageTeamComponent } from './admin-manage-team/admin-manage-team.component';\r\nimport { AdminManageMatchesComponent } from './admin-manage-matches/admin-manage-matches.component';\r\nimport { AdminHomeComponent } from './admin-home/admin-home.component';\r\nimport { UserInsertComponent } from './CRUD/user-insert/user-insert.component';\r\nimport { MatchCRUDComponent } from './CRUD/match-crud/match-crud.component';\r\nimport { RechargeComponent } from './CRUD/recharge/recharge.component';\r\nimport { TeamComponent } from './CRUD/team/team.component';\r\nimport { UpdateMatchResultComponent } from './CRUD/update-match-result/update-match-result.component';\r\nimport { AssignRoleComponent } from './CRUD/assign-role/assign-role.component';\r\nimport { AdminManageOldMatchesComponent } from './admin-manage-old-matches/admin-manage-old-matches.component';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { AdminManageVenueComponent } from './admin-manage-venue/admin-manage-venue.component';\r\nimport { VenueComponent } from './CRUD/venue/venue.component';\r\n\r\n// console.log(\"admin module loaded\");\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AdminManageUserComponent,\r\n    AdminManageRechargeComponent,\r\n    AdminManageTeamComponent,\r\n    AdminManageMatchesComponent,\r\n    AdminHomeComponent,\r\n    UserInsertComponent,\r\n    MatchCRUDComponent,\r\n    RechargeComponent,\r\n    TeamComponent,\r\n    UpdateMatchResultComponent,\r\n    AdminManageOldMatchesComponent,\r\n    AssignRoleComponent,\r\n    AdminManageVenueComponent,\r\n    VenueComponent,\r\n\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AdminRoutingModule,\r\n    // BrowserModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    // BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    NgbModule,\r\n    FlexLayoutModule,\r\n    MatTableFilterModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatRadioModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatSelectModule,\r\n    NgxMatFileInputModule,\r\n    MatAutocompleteModule,\r\n    MatRippleModule,\r\n    MatTooltipModule,\r\n    MatDialogModule,\r\n  ]\r\n})\r\nexport class AdminModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { venueBaseURL } from '../../constants/http-urls';\r\nimport { VenueModel } from '../../model/venue/venue';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class VenueService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  async getAllVenue(): Promise<any> {\r\n    return await this.http.get(venueBaseURL, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async addVenue(formData:FormData): Promise<any> {\r\n    return await this.http.post(venueBaseURL, formData, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async updateVenue(venueId: number, model:VenueModel): Promise<any> {\r\n    return await this.http.put(venueBaseURL + '/' + venueId, model, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async deleteVenue(venueId: number): Promise<any> {\r\n    return await this.http.delete(venueBaseURL + '/' + venueId , { observe: 'response' }).toPromise();\r\n  }\r\n}\r\n","export class MatchResult{\r\n    matchId!:number;\r\n    resultStatus!:number;\r\n    winnerTeamId!:number;\r\n}","export class VenueModel{\r\n    venueId!:number;\r\n    name!:string;\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { rechargeBaseURL } from '../../constants/http-urls';\r\nimport { RechargeModel } from '../../model/recharge/recharge-model';\r\n\r\n// let rechargeBaseURL = 'http://localhost:8081/recharge';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RechargeService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  async getAllRecharge(): Promise<any> {\r\n    return await this.http.get(rechargeBaseURL, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async addRecharge(userModel: RechargeModel): Promise<any> {\r\n    return await this.http.post(rechargeBaseURL, userModel, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async updateRecharge(rechargeId: number, model: RechargeModel): Promise<any> {\r\n    return await this.http.put(rechargeBaseURL + '/' + rechargeId, model, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async deleteRecharge(rechargeId: number): Promise<any> {\r\n    return await this.http.delete(rechargeBaseURL + '/' + rechargeId , { observe: 'response' }).toPromise();\r\n  }\r\n\r\n}\r\n","export class RechargeModel {\r\n\r\n    rechargeId!:number;\r\n    userId!:number;\r\n    username!:string;\r\n    points!:number;\r\n    rechargeDate!:any;\r\n}\r\n","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-insert',\r\n  templateUrl: './user-insert.component.html',\r\n  styleUrls: ['./user-insert.component.css']\r\n})\r\nexport class UserInsertComponent implements OnInit {\r\n\r\n  userForm!: FormGroup;\r\n  userData!: UserModel;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userservice: UserService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private matDialogRef: MatDialogRef<UserInsertComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: UserModel\r\n  ) {\r\n    this.userData = data;\r\n    if (data) {\r\n      this.userForm = this.fb.group({\r\n        userId: [{ value: this.data.userId, disabled: true }],\r\n\r\n        // username: [ this.data.username,[Validators.required, Validators.minLength(4), Validators.maxLength(15), Validators.pattern('[a-zA-Z ]+')]],\r\n        username: [{value:this.data.username, disabled:true}],\r\n        \r\n        firstName: [this.data.firstName, [Validators.required, Validators.minLength(4)\r\n          , Validators.maxLength(10), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n        lastName: [this.data.lastName, [Validators.required, Validators.minLength(3)\r\n            , Validators.maxLength(10), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n        mobileNumber: [this.data.mobileNumber, [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[1-9][0-9]{9}')]],\r\n\r\n        email: [this.data.email, [Validators.required, Validators.email,\r\n        Validators.maxLength(100)]],\r\n\r\n        genderId: [this.data.genderId, [Validators.required, Validators.minLength(1), Validators.maxLength(1), Validators.pattern('[1-2]+')]],\r\n\r\n        roleId: [{value:this.data.roleId, disabled:true}],\r\n        // [Validators.required, Validators.minLength(1), Validators.maxLength(1), Validators.pattern('[1-2]+')]\r\n\r\n        availablePoints: [{value:this.data.availablePoints,disabled:true}],\r\n        // [Validators.required, Validators.minLength(2), Validators.maxLength(4), Validators.pattern('[0-9]+')]\r\n\r\n        profilePicture: [this.data.profilePicture]\r\n        // , [Validators.required, Validators.minLength(4), Validators.maxLength(500)]\r\n\r\n      });\r\n    } else {\r\n      this.userForm = this.fb.group({\r\n\r\n        userId: [{  disabled: true }],\r\n\r\n        username: [ '', [Validators.required, Validators.minLength(4), Validators.maxLength(10), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n        firstName: ['', [Validators.required, Validators.minLength(4)\r\n          , Validators.maxLength(10), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n        lastName: ['', [Validators.required, Validators.minLength(3)\r\n            , Validators.maxLength(10), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n        mobileNumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[1-9][0-9]{9}')]],\r\n\r\n        email: ['', [Validators.required, Validators.email,\r\n        Validators.maxLength(100)]],\r\n\r\n        genderId: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(1), Validators.pattern('[1-2]+')]],\r\n\r\n        roleId: ['', [Validators.required, Validators.minLength(1), Validators.maxLength(1), Validators.pattern('[1-2]+')]],\r\n\r\n        availablePoints: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(4), Validators.pattern('[0-9]+')]],\r\n        profilePicture: ['']\r\n        // , [Validators.required, Validators.minLength(4), Validators.maxLength(500)]\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  reload() {\r\n    location.reload();\r\n  }\r\n\r\n\r\n  ngOnInit(): void { }\r\n\r\n  get form() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  reset(field: string) {\r\n    this.form[field].setValue('');\r\n  }\r\n\r\n  genderId:any[]=[{genderId:1,name:\"Male\"},{genderId:2,name:\"Female\"}];\r\n\r\n  roleId:any[]=[{roleId:1,name:\"Admin\"},{roleId:2,name:\"User\"}];\r\n\r\n  async addEmployee() {\r\n    if (this.userForm.valid) {\r\n      if (!this.userData) {\r\n        this.userData = new UserModel();\r\n        // this.userData.userId = 0;\r\n        // this.userData.username = this.form.username.value;\r\n        // this.userData.password = '12345';\r\n        // this.userData.firstName = this.form.firstName.value;\r\n        // this.userData.lastName = this.form.lastName.value;\r\n        // this.userData.mobileNumber = this.form.mobileNumber.value;\r\n        // this.userData.email = this.form.email.value;\r\n        // this.userData.genderId = this.form.genderId.value;\r\n        // this.userData.roleId = this.form.roleId.value;\r\n        // this.userData.availablePoints = this.form.availablePoints.value;\r\n        // this.userData.status = true;\r\n\r\n        var formData: any = new FormData();\r\n        formData.append(\"username\", this.form.username.value);\r\n        formData.append(\"password\", 123456789);\r\n        formData.append(\"firstName\", this.form.firstName.value);\r\n        formData.append(\"lastName\", this.form.lastName.value);\r\n        formData.append(\"email\", this.form.email.value);\r\n        formData.append(\"mobileNumber\", this.form.mobileNumber.value);\r\n        formData.append(\"genderId\", this.form.genderId.value);\r\n        formData.append(\"roleId\", 2);\r\n        formData.append(\"availablePoints\", this.form.availablePoints.value);\r\n        formData.append(\"profilePicture\", this.form.profilePicture.value);\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.userservice.signup(formData);\r\n          this.userData = resp.body;\r\n          if (this.userData != null && this.userData.userId > 0)\r\n          {\r\n            // location.reload();\r\n            snackbarMsg = 'User successfully added!';\r\n            this.matDialogRef.close(this.userData);\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      } else {\r\n\r\n        // this.userData.username = this.form.username.value;\r\n\r\n        // this.userData.firstName = this.form.firstName.value;\r\n        // this.userData.lastName = this.form.lastName.value;\r\n        // this.userData.mobileNumber = this.form.mobileNumber.value;\r\n        // this.userData.email = this.form.email.value;\r\n        // this.userData.genderId = this.form.genderId.value;\r\n\r\n        // this.userData.roleId = this.form.roleId.value;\r\n        // this.userData.availablePoints = this.form.availablePoints.value;\r\n\r\n        var formData: any = new FormData();\r\n        formData.append(\"username\", this.form.username.value);\r\n        formData.append(\"firstName\", this.form.firstName.value);\r\n        formData.append(\"lastName\", this.form.lastName.value);\r\n        formData.append(\"email\", this.form.email.value);\r\n        formData.append(\"mobileNumber\", this.form.mobileNumber.value);\r\n        formData.append(\"genderId\", this.form.genderId.value);\r\n        formData.append(\"profilePicture\", this.form.profilePicture.value);\r\n\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        let resp = null;\r\n        try {\r\n          resp = await this.userservice.updateUser(this.userData.userId, formData);\r\n          this.userData = resp.body;\r\n          if (this.userData != null) {\r\n            this.matDialogRef.close(this.userData);\r\n            snackbarMsg = 'User successfully updated!';\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n}\r\n","<div class=\"sub-container-1-inner\">\r\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"addEmployee()\">\r\n        <div class=\"title\">\r\n            <span>{{userData === null ? 'Add User' : 'Update User'}}</span>\r\n        </div>\r\n        <div class=\"signup-container\">\r\n            <div class=\"first\">\r\n                <div class=\"field-container\" *ngIf=\"userData\">\r\n                    <mat-form-field appearance=\"fill\">\r\n                        <mat-label>ID</mat-label>\r\n                        <input matInput formControlName=\"userId\">\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Username</mat-label>\r\n                        <input matInput formControlName=\"username\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.username.errors?.required\">username is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.username.errors?.minlength\">username must have atleast 4 characters\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.username.errors?.maxlength\">username must have less than 15 characters\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <!-- <div class=\"field-container\" *ngIf=\"!userData\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Password</mat-label>\r\n                        <input matInput formControlName=\"password\" type=\"password\">\r\n                        <mat-error *ngIf=\"form.password.errors?.required\">password is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.password.errors?.minlength\">password must have atleast 6\r\n                            characters</mat-error>\r\n                        <mat-error *ngIf=\"form.password.errors?.maxlength\">password must have less than 40\r\n                            characters</mat-error>\r\n                    </mat-form-field>\r\n                </div> -->\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>First Name</mat-label>\r\n                        <input matInput formControlName=\"firstName\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.firstName.errors?.required\">First name is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.firstName.errors?.minlength\"> name must have atleast 4 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.firstName.errors?.maxlength\"> name must have less than 10 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.firstName.errors?.pattern\"> name is invalid</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Last Name</mat-label>\r\n                        <input matInput formControlName=\"lastName\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.lastName.errors?.required\">lastName is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.lastName.errors?.minlength\">lastName must have atleast 3 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.lastName.errors?.maxlength\">lastName must have less than 100 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.lastName.errors?.pattern\">lastName is invalid</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Gender</mat-label>\r\n                        <!-- <input matInput formControlName=\"genderId\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"genderId\">\r\n                            <mat-option *ngFor=\"let gender of genderId\" [value]=\"gender.genderId\"> {{gender.name}} </mat-option>\r\n                            <!-- <mat-option value=\"2\"> Female </mat-option> -->\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.genderId.errors?.required\">genderId is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.genderId.errors?.minlength\">genderId must have atleast 1 digit\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.genderId.errors?.maxlength\">genderId should not be more then 1 digit\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.genderId.errors?.pattern\">genderId must have contain digit\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Profile Pic</mat-label>\r\n                        <ngx-mat-file-input formControlName=\"profilePicture\">\r\n                            <i class=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i>\r\n                        </ngx-mat-file-input>\r\n                        <!-- <mat-error *ngIf=\"form.profilePicture.errors?.required\">\r\n                            is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.profilePicture.errors?.minlength\">\r\n                            must have atleast 4 characters\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.profilePicture.errors?.maxlength\">\r\n                            must have less than 500 characters\r\n                        </mat-error> -->\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"second\">\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Role</mat-label>\r\n                        <!-- <input matInput formControlName=\"roleId\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"roleId\">\r\n                            <mat-option *ngFor=\"let role of roleId\" [value]=\"role.roleId\"> {{role.name}} </mat-option>\r\n                            <!-- <mat-option value=\"2\"> User </mat-option> -->\r\n                        </mat-select>\r\n                        <mat-error *ngIf=\"form.roleId.errors?.required\">roleId is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.roleId.errors?.minlength\">roleId must have atleast 1 digit\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.roleId.errors?.maxlength\">roleId should not be more then 1 digit\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.roleId.errors?.pattern\">roleId must have contain digit\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Phone no.</mat-label>\r\n                        <input matInput formControlName=\"mobileNumber\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.mobileNumber.errors?.required\">mobileNumber no. is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.mobileNumber.errors?.minlength || form.mobileNumber.errors?.maxlength || form.mobileNumber.errors?.pattern\">\r\n                            mobileNumber no. is invalid\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Available Points</mat-label>\r\n                        <input matInput formControlName=\"availablePoints\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.availablePoints.errors?.required\">availablePoints is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.availablePoints.errors?.minlength\">availablePoints must have atleast 2 digit\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.availablePoints.errors?.maxlength\">availablePoints must have less than 4 digit\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput formControlName=\"email\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.email.errors?.required\">email is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.email.errors?.maxlength\">email must have less than 100 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.email.errors?.email\">email is invalid</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"action-container\">\r\n            <button mat-raised-button *ngIf=\"userData\" color=\"accent\" type=\"submit\">Update</button>\r\n            <button mat-raised-button *ngIf=\"!userData\" color=\"accent\" type=\"submit\">Add</button>\r\n            <span (click)=\"closeDialogBox()\" class=\"cancel-btn\">Cancel</span>\r\n        </div>\r\n    </form>\r\n</div>"],"sourceRoot":"webpack:///"}