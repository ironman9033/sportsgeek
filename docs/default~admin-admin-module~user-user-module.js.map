{"version":3,"sources":["./src/app/common/constants/utils.ts","./src/app/user/leader-board/leader-board.component.ts","./src/app/user/leader-board/leader-board.component.html","./src/app/user/my-matches/view-old-matches/view-old-matches.component.ts","./src/app/user/my-matches/view-old-matches/view-old-matches.component.html","./src/app/common/service/bot/bot.service.ts","./src/app/user/my-matches/my-matches.component.ts","./src/app/user/my-matches/my-matches.component.html","./src/app/user/user-profile/update-profile/update-profile.component.ts","./src/app/user/user-profile/update-profile/update-profile.component.html","./src/app/user/user-profile/view-others-user-profile/view-others-user-profile.component.ts","./src/app/user/user-profile/view-others-user-profile/view-others-user-profile.component.html","./src/app/user/betting-page/insert-update-contest/insert-update-contest.component.ts","./src/app/user/betting-page/insert-update-contest/insert-update-contest.component.html","./src/app/user/user-profile/view-user-profile/view-user-profile.component.ts","./src/app/user/user-profile/view-user-profile/view-user-profile.component.html","./src/app/common/model/bot/BotModel.ts","./src/app/user/my-matches/view-live-matches/view-live-matches.component.ts","./src/app/user/my-matches/view-live-matches/view-live-matches.component.html","./src/app/user/betting-page/betting-page.component.ts","./src/app/user/betting-page/betting-page.component.html","./src/app/user/user-dashboard/user-dashboard.component.ts","./src/app/user/user-dashboard/user-dashboard.component.html","./src/app/user/match-list/match-list.component.ts","./src/app/user/match-list/match-list.component.html"],"names":[],"mappings":"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","file":"default~admin-admin-module~user-user-module.js","sourcesContent":["\r\n  export function stringToColor(string:any) {\r\n    let hash = 0;\r\n    let i;\r\n\r\n    /* eslint-disable no-bitwise */\r\n    for (i = 0; i < string.length; i += 1) {\r\n      hash = string.charCodeAt(i) + ((hash << 5) - hash);\r\n    }\r\n\r\n    let color = '#';\r\n\r\n    for (i = 0; i < 3; i += 1) {\r\n      const value = (hash >> (i * 8)) & 0xff;\r\n      color += `00${value.toString(16)}`.substr(-2);\r\n    }\r\n    /* eslint-enable no-bitwise */\r\n\r\n    return color;\r\n  }\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort, Sort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { first, second, third, userbadge } from 'src/app/common/constants/links';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { stringToColor } from 'src/app/common/constants/utils';\r\nimport { UserFutureBets } from 'src/app/common/model/statistics/user-future-bets';\r\nimport { UserStats } from 'src/app/common/model/statistics/userstats';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { UserStaticticsService } from 'src/app/common/service/statistics/user-statictics.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\n\r\nexport interface rank1{ rank:number; }\r\n@Component({\r\n  selector: 'app-leader-board',\r\n  templateUrl: './leader-board.component.html',\r\n  styleUrls: ['./leader-board.component.css']\r\n})\r\nexport class LeaderBoardComponent implements OnInit {\r\n\r\n  first = first;\r\n  second = second;\r\n  third = third;\r\n  userBadge = userbadge;\r\n  userStats: UserStats[] = [];\r\n  userFutureBets:UserFutureBets[] = [];\r\n  displayedColumns: string[] = ['rank','firstName','availablePoints'];\r\n\r\n  dataSource: MatTableDataSource<UserStats> = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  constructor(private userservice: UserService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private loginStateService: LoginstateService,\r\n    private userstats: UserStaticticsService,\r\n    private router:Router\r\n  ) { }\r\n\r\n  loginState = this.loginStateService.getLoginState();\r\n  un = this.loginState.username;\r\n  role = this.loginState?.role;\r\n\r\n  async ngOnInit() {\r\n    this.userFutureBets = await this.getUsersFutureContest();\r\n    // console.log(this.userFutureBets);\r\n\r\n    this.userStats = await this.getUsers();\r\n    // console.log(this.userStats);\r\n\r\n    this.dataSource.data = this.userStats;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    this.sort1();\r\n  }\r\n\r\n  stringToColorFunction(color: any){\r\n    return stringToColor(color);\r\n  }\r\n\r\n  findsum(data:any){\r\n    data.forEach((element:any) => {\r\n      let obj = this.userFutureBets.find(o => o.userId == element.userId);\r\n      if(obj)\r\n      element.availablePoints += obj.contestPoints;\r\n    });\r\n    data.sort((obj1:any,obj2:any) =>{\r\n      if (obj1.availablePoints < obj2.availablePoints){\r\n        return 1;\r\n      }\r\n      else if(obj1.availablePoints > obj2.availablePoints){\r\n        return -1;\r\n      }\r\n      return 0;\r\n\r\n    });\r\n  }\r\n\r\n  sort1(){\r\n    this.userStats = this.userStats.sort(\r\n      (low:UserStats, high:UserStats) => +high.availablePoints - +low.availablePoints\r\n    );\r\n  }\r\n\r\n  sortData(sort: Sort) {\r\n    const data = this.userStats.slice();\r\n    if (!sort.active || sort.direction === '') {\r\n      this.userStats = data;\r\n      return;\r\n    }\r\n    this.userStats = data.sort((a, b) => {\r\n      const isDesc = sort.direction === 'desc';\r\n      switch (sort.active) {\r\n        case 'name': return this.compare(a.availablePoints, b.availablePoints, isDesc);\r\n        default: return 0;\r\n      }\r\n    });\r\n  }\r\n\r\n  compare(a:number , b:number, isDesc:boolean){\r\n    return (a<b ? -1 : 1) * (isDesc ? 1 : -1)\r\n  }\r\n\r\n  applyFilter(event:Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n  // GET USER DETAILS\r\n\r\n  async getUsers(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userModel: UserStats[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userstats.getUserStats();\r\n      userModel = resp.body;\r\n      this.findsum(userModel);\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // USERS FUTURE CONTEST\r\n\r\n  async getUsersFutureContest(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userFutureBets: UserFutureBets[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userstats.getUserFutureBets();\r\n      userFutureBets = resp.body;\r\n      if (userFutureBets) {\r\n        dialogRef.close();\r\n        return userFutureBets;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  gotoUserProfile(id:number){\r\n    // this.location.replaceState('');\r\n    this.router.navigate([this.role+`/view-users-profile/${id}`]);\r\n  }\r\n\r\n}\r\n","<div class=\"line\"></div>\r\n<div class=\"vl\"></div>\r\n<div class=\"container1\">\r\n  <div class=\"item1\">\r\n    <div class=\"innerr1\">\r\n      <img src=\"{{first}}\" class=\"card-image\" alt=\"\" />\r\n      <!-- <img src=\"assets/img/1.png\" alt=\"\" class=\"png-over\"> -->\r\n      <!-- alt=\"{{userStats[0].firstName.substr(0,1)+userStats[0].lastName.substr(0,1)}}\" -->\r\n      <!-- onerror=\"this.src='assets/img/user.png'\" -->\r\n      <p class=\"card-name txtbg\">{{ userStats[0]?.firstName + ' ' + userStats[0]?.lastName }} </p>\r\n      <img src=\"{{userStats[0]?.profilePicture}}\" loading=\"lazy\" class=\"card-image\"\r\n      onerror=\"this.src='https://firebasestorage.googleapis.com/v0/b/sportsgeek-74e1e.appspot.com/o/69bba4a0-c114-4379-9854-e4381a3130bc.png?alt=media'\">\r\n      <p class=\"txtbg\"> {{ userStats[0]?.availablePoints }}</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"item2\">\r\n    <div class=\"innerr2\">\r\n      <img src=\"{{second}}\" class=\"card-image2\" alt=\"\" />\r\n      <!-- <img src=\"assets/img/2.png\" alt=\"\" class=\"png-over\"> -->\r\n      <!-- alt=\"{{userStats[1].firstName.substr(0,1)+userStats[1].lastName.substr(0,1)}}\" -->\r\n      <!-- onerror=\"this.src='assets/img/user.png'\" -->\r\n      <p class=\"card-name txtbg\">{{ userStats[1]?.firstName + ' ' + userStats[1]?.lastName}} </p>\r\n      <img src=\"{{userStats[1]?.profilePicture}}\" loading=\"lazy\" class=\"card-image2 pp2\"\r\n      onerror=\"this.src='https://firebasestorage.googleapis.com/v0/b/sportsgeek-74e1e.appspot.com/o/69bba4a0-c114-4379-9854-e4381a3130bc.png?alt=media'\">\r\n      <p class=\"txtbg\"> {{ userStats[1]?.availablePoints }}</p>\r\n    </div>\r\n  </div>\r\n  <div class=\"item3\">\r\n    <div class=\"innerr3\">\r\n      <img src=\"{{third}}\" class=\"card-image3\" alt=\"\" />\r\n      <!-- <img src=\"assets/img/3.png\" alt=\"\" class=\"png-over\"> -->\r\n      <!-- alt=\"{{userStats[2].firstName.substr(0,1)+userStats[2].lastName.substr(0,1)}}\" -->\r\n      <!-- onerror=\"this.src='assets/img/user.png'\" -->\r\n      <p class=\"card-name txtbg\">{{ userStats[2]?.firstName + ' ' + userStats[2]?.lastName }} </p>\r\n      <img src=\"{{userStats[2]?.profilePicture}}\" loading=\"lazy\" class=\"card-image3 pp3\"\r\n      onerror=\"this.src='https://firebasestorage.googleapis.com/v0/b/sportsgeek-74e1e.appspot.com/o/69bba4a0-c114-4379-9854-e4381a3130bc.png?alt=media'\">\r\n      <p class=\"txtbg\"> {{ userStats[2]?.availablePoints }}</p>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\"vl1\"></div>\r\n<div class=\"line\"></div>\r\n\r\n<div class=\"parent-container container-fluid\">\r\n  <div class=\"mat-elevation-z20 container main-container\">\r\n    <div class=\"conatiner-header\">Leader Board</div>\r\n    <div class=\"inner-conatiner\">\r\n      <div class=\"inner-container-actions\">\r\n        <mat-form-field appearance=\"outline\" color=\"accent\">\r\n          <mat-label>Search</mat-label>\r\n          <input\r\n            matInput\r\n            placeholder=\"Type something here\"\r\n            type=\"search\"\r\n            style=\"color: white\"\r\n            (keyup)=\"applyFilter($event)\"\r\n          />\r\n\r\n          <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <table\r\n        mat-table\r\n        class=\"mat-elevation-z21\"\r\n        [dataSource]=\"dataSource\"\r\n        matSort\r\n        (matSortChange)=\"sortData($event)\"\r\n        matSortActive=\"availablePoints\"\r\n        matSortDirection=\"desc\"\r\n      >\r\n        <ng-container matColumnDef=\"rank\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"highlight\">RANK</th>\r\n          <td mat-cell *matCellDef=\"let element; let i = index\"\r\n          [ngStyle]=\"{'background-color':un == element.userName ? '#E4E6FF':'','color':un == element.userName ? 'black':''}\">\r\n            {{ this.paginator.pageIndex * this.paginator.pageSize + i + 1 }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- <ng-container matColumnDef=\"profilePicture\">\r\n                    <th mat-header-cell *matHeaderCellDef class=\"highlight\"> Pic </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> <img src=\"{{element.profilePicture }}\" class=\"profile-picture\" loading=\"lazy\" alt=\"lazy-user\"> </td>\r\n                </ng-container> -->\r\n\r\n        <ng-container matColumnDef=\"firstName\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"highlight\" >Users</th>\r\n\r\n          <td\r\n            mat-cell\r\n            class=\"pointer\"\r\n            *matCellDef=\"let element\"\r\n            (click)=\"gotoUserProfile(element.userId)\"\r\n            [ngStyle]=\"{'background-color':un == element.userName ? '#E4E6FF':'','color':un == element.userName ? 'black':''}\"\r\n          >\r\n            <div class='inside-td'>\r\n              <div>\r\n                <span\r\n                  [ngStyle]=\"{'padding':'10px', 'background-color':stringToColorFunction(element.firstName+element.lastName), 'border-radius':'50%'}\"\r\n                  *ngIf='!element.profilePicture'\r\n                  loading=\"lazy\"\r\n                >{{\r\n                  element.firstName.substr(0, 1).toUpperCase() +\r\n                  element.lastName.substr(0, 1).toUpperCase()\r\n                }}</span>\r\n                <img\r\n                  *ngIf='element.profilePicture'\r\n                  src=\"{{ element.profilePicture }}\"\r\n                  class=\"profile-picture thumbnail-image\"\r\n                  loading=\"lazy\"\r\n                  alt=\"{{\r\n                    element.firstName.substr(0, 1).toUpperCase() +\r\n                      element.lastName.substr(0, 1).toUpperCase()\r\n                  }}\"\r\n                />\r\n              </div>\r\n              <div [ngStyle]=\"{'margin-left': '5px'}\">\r\n                {{ element.firstName + \" \" + element.lastName }}\r\n              </div>\r\n            </div>\r\n          </td>\r\n        </ng-container>\r\n\r\n        <!-- onerror=\"this.src='assets/img/user.png'\" -->\r\n\r\n        <ng-container matColumnDef=\"availablePoints\">\r\n          <th mat-header-cell *matHeaderCellDef class=\"highlight\">Points</th>\r\n          <td mat-cell *matCellDef=\"let element\"\r\n          [ngStyle]=\"{'background-color':un == element.userName ? '#E4E6FF':'','color':un == element.userName ? 'black':''}\">\r\n            {{ element.availablePoints }}\r\n          </td>\r\n        </ng-container>\r\n\r\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n        <tr\r\n          mat-row\r\n          [ngClass]=\"{ evenrow: index % 2 == 1 }\"\r\n          *matRowDef=\"let row; columns: displayedColumns; let index = index;let element\"\r\n          [ngStyle]=\"{'background-color':un == element.userName ? '#E4E6FF':'','color':un == element.userName ? 'black':''}\"\r\n        ></tr>\r\n      </table>\r\n      <mat-paginator\r\n        color=\"accent\"\r\n        [pageSizeOptions]=\"[10,20,50]\"\r\n        showFirstLastButtons\r\n      ></mat-paginator>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { ViewChild } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { stringToColor } from 'src/app/common/constants/utils';\r\nimport { BotModel } from 'src/app/common/model/bot/BotModel';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { BotService } from 'src/app/common/service/bot/bot.service';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\n\r\n@Component({\r\n  selector: 'app-view-old-matches',\r\n  templateUrl: './view-old-matches.component.html',\r\n  styleUrls: ['./view-old-matches.component.css']\r\n})\r\nexport class ViewOldMatchesComponent implements OnInit {\r\n\r\n  teamColor:any = {\r\n    1: \"#ff0\", //csk\r\n    2: \"#2561ae\", //dc\r\n    3: \"#00416a\", //gt\r\n    4: \"#7300ab\", //kkr\r\n    5: \"#ace5ee\", //lsg\r\n    6: \"#004f91\", //mi\r\n    7: \"#ed1f27\", //pk\r\n    8: \"RGB(37 ,74 ,165)\", //rr\r\n    9: \"#d5152c\", //rcb\r\n    10: \"#f7a721\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n  teamFontColor:any = {\r\n    1: \"black\", //csk\r\n    2: \"#fff\", //dc\r\n    3: \"#fff\", //gt\r\n    4: \"#fff\", //kkr\r\n    5: \"black\", //lsg\r\n    6: \"#fff\", //mi\r\n    7: \"#fff\", //pk\r\n    8: \"white\", //rr\r\n    9: \"#fff\", //rcb\r\n    10: \"black\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'black', //\r\n    t2: 'black' //\r\n  }\r\n\r\n  borderTop:any = {\r\n    1: \"5px solid #ef9b0f\", //csk\r\n    2: \"5px solid #4B9CD3\", //dc\r\n    3: \"5px solid #1d2951\", //gt\r\n    4: \"5px solid #430064\", //kkr\r\n    5: \"5px solid #9bc4e2\", //lsg\r\n    6: \"5px solid blue\", //mi\r\n    7: \"5px solid #af002a\", //pk\r\n    8: \"5px solid #1877F2\", //rr\r\n    9: \"5px solid #800000\", //rcb\r\n    10: \"5px solid #F05E23\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n\r\n  fetchBotDetails: BotModel[] = [];\r\n  calc!: MatchModel;\r\n  displayedColumns: string[] = ['username', 'teamshortname', 'contestPoints', 'winningPoints'];\r\n\r\n  dataSource: MatTableDataSource<BotModel> = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  matchId!: number;\r\n  matchData!: MatchModel;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private botservice: BotService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private matchservice: MatchesService,\r\n    private loginStateService: LoginstateService,\r\n  ) { }\r\n\r\n  loginState = this.loginStateService.getLoginState();\r\n  // userId = this.loginState?.userId;\r\n  // role = this.loginState?.role;\r\n  un = this.loginState.username;\r\n\r\n  async ngOnInit() {\r\n    this.route.params.subscribe(data => {\r\n      this.matchId = data.id;\r\n    });\r\n    this.calc = await this.getAllPlayerBetsByMatchIdForCalculation(this.matchId);\r\n\r\n    this.fetchBotDetails = await this.getAllPlayerBetsByMatchId(this.matchId);\r\n    // console.log(this.fetchBotDetails);\r\n\r\n    this.dataSource.data = this.fetchBotDetails;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    this.matchData = await this.getMatchById(this.matchId);\r\n    // console.log(this.matchData);\r\n\r\n  }\r\n\r\n  stringToColorFunction(color: any){\r\n    return stringToColor(color);\r\n  }\r\n\r\n  Team1TotalUsers(inputs1:any,inputs2:any) {\r\n    let counter = 0;\r\n    for (const input1 of inputs1) {\r\n      if (input1.teamShortName === inputs2?.team1Short) counter += 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  Team2TotalUsers(inputs1:any,inputs2:any) {\r\n    let counter = 0;\r\n    for (const input1 of inputs1) {\r\n      if (input1.teamShortName === inputs2?.team2Short) counter += 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  async getMatchById(matchId: number): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.viewMatchById(matchId);\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // GET ALL PLAYER BETS ON TEAM\r\n\r\n  async getAllPlayerBetsByMatchId(matchId: number): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let botModel: BotModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.botservice.viewAllContestByMatchId(matchId);\r\n      botModel = resp.body;\r\n      this.findsum(botModel);\r\n      if (botModel) {\r\n        dialogRef.close();\r\n        return botModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // THIS IS FOR CALCULATION PURPOSE ONLY\r\n\r\n  team1points = 0;\r\n  team2points = 0;\r\n\r\n  findsum(data: any) {\r\n    data.forEach((element: any) => {\r\n      if (element.teamShortName == this.calc.team1Short) {\r\n        this.team1points += element.contestPoints;\r\n      } else if (element.teamShortName == this.calc.team2Short)\r\n        this.team2points += element.contestPoints;\r\n    });\r\n  }\r\n\r\n  async getAllPlayerBetsByMatchIdForCalculation(matchId: number): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.viewMatchById(matchId);\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getColorForTeam1(){\r\n    return this.matchData && this.matchData.team1Id ? this.teamColor[this.matchData.team1Id] : this.teamColor.t1;\r\n  }\r\n\r\n  getColorForTeam2(){\r\n    return this.matchData && this.matchData.team2Id ? this.teamColor[this.matchData.team2Id] : this.teamColor.t2;\r\n  }\r\n\r\n  getFontColorForTeam1(){\r\n    return this.matchData && this.matchData.team1Id ? this.teamFontColor[this.matchData.team1Id] : this.teamFontColor.t1;\r\n  }\r\n\r\n  getFontColorForTeam2(){\r\n    return this.matchData && this.matchData.team2Id ? this.teamFontColor[this.matchData.team2Id] : this.teamFontColor.t2;\r\n  }\r\n\r\n  getBorderColorForTeam1(){\r\n    return this.matchData && this.matchData.team1Id ? this.borderTop[this.matchData.team1Id] : this.borderTop.t1;\r\n  }\r\n\r\n  getBorderColorForTeam2(){\r\n    return this.matchData && this.matchData.team2Id ? this.borderTop[this.matchData.team2Id] : this.borderTop.t2;\r\n  }\r\n}\r\n","<body>\r\n\r\n    <div class=\"card \">\r\n\r\n        <div class=\"left\" [style.border-top]=\"getBorderColorForTeam1()\" [style.background-color]=\"getColorForTeam1()\"></div>\r\n        <div class=\"right\" [style.border-top]=\"getBorderColorForTeam2()\" [style.background-color]=\"getColorForTeam2()\"></div>\r\n\r\n        <!-- <h2>Match No. {{matchData?.matchId}}</h2> -->\r\n        <h2 *ngIf=\"matchData?.winnerTeamId==matchData?.team1Id\"> Winner : {{matchData?.team1Short}} </h2>\r\n        <h2 *ngIf=\"matchData?.winnerTeamId==matchData?.team2Id\"> Winner : {{matchData?.team2Short}} </h2>\r\n        <h2 *ngIf=\"!matchData?.winnerTeamId\"> Draw / Cancelled </h2>\r\n        <div class=\"match-details\" >\r\n            <div class=\"team1\" >\r\n                <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{matchData?.team1Logo}}\" />\r\n                <h3 class=\"team-name\" [style.color]=\"getFontColorForTeam1()\">{{matchData?.team1}} </h3>\r\n                <h3 class=\"team-points\" [style.color]=\"getFontColorForTeam1()\"> ({{Team1TotalUsers(fetchBotDetails,matchData)}} bets) {{team1points}}</h3>\r\n            </div>\r\n            <div class=\"details\">\r\n                <!-- <h3 class=\"date\">{{matchData?.startDatetime | date: 'medium': 'UTC'}} IST </h3> -->\r\n                <h3 class=\"date\">{{matchData?.startDatetime | date: 'medium'}} IST </h3>\r\n                <h1 class=\"versus\">VS</h1>\r\n                <h4 class=\"venue\">{{matchData?.venue}} </h4>\r\n            </div>\r\n            <div class=\"team2\">\r\n                <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{matchData?.team2Logo}}\" />\r\n                <h3 class=\"team-name\" [style.color]=\"getFontColorForTeam2()\">{{matchData?.team2}} </h3>\r\n                <h3 class=\"team-points\" [style.color]=\"getFontColorForTeam2()\">{{team2points}} ( {{Team2TotalUsers(fetchBotDetails,matchData)}} bets)</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <!-- VIEW NAMES OF PLAYERS WHO PLACED BET -->\r\n\r\n    <div class=\"parent-container container-fluid\">\r\n        <div class=\"mat-elevation-z20 container main-container\">\r\n            <div class=\"conatiner-header\"> Match Result </div>\r\n            <div class=\"inner-conatiner\">\r\n                <div class=\"inner-container-actions\">\r\n                    <mat-form-field appearance=\"outline\" color=\"accent\">\r\n                        <mat-label>Search</mat-label>\r\n                        <input matInput placeholder=\"Search Players\" type=\"search\" style=\"color:white\" (keyup)=\"applyFilter($event)\">\r\n                        <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n                    </mat-form-field>\r\n                </div>\r\n                <table mat-table class=\"mat-elevation-z21\" [dataSource]=\"dataSource\" matSort>\r\n\r\n                    <ng-container matColumnDef=\"username\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Username </th>\r\n                        <td mat-cell *matCellDef=\"let element\"\r\n                        [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\">\r\n                          <div class='inside-td'>\r\n                            <div>\r\n                              <span\r\n                                [ngStyle]=\"{'padding':'10px', 'background-color':stringToColorFunction(element.firstName+element.lastName), 'border-radius':'50%'}\"\r\n                                *ngIf='!element.profilePicture'\r\n                                loading=\"lazy\"\r\n                              >{{\r\n                                element.firstName.substr(0, 1).toUpperCase() +\r\n                                element.lastName.substr(0, 1).toUpperCase()\r\n                              }}</span>\r\n                              <img\r\n                                *ngIf='element.profilePicture'\r\n                                src=\"{{ element.profilePicture }}\"\r\n                                class=\"profile-picture thumbnail-image\"\r\n                                loading=\"lazy\"\r\n                                alt=\"{{\r\n                                  element.firstName.substr(0, 1).toUpperCase() +\r\n                                    element.lastName.substr(0, 1).toUpperCase()\r\n                                }}\"\r\n                              />\r\n                            </div>\r\n                            <div [ngStyle]=\"{'margin-left': '5px'}\">\r\n                              {{ element.firstName + \" \" + element.lastName }}\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"teamshortname\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Bet Team </th>\r\n                        <td mat-cell *matCellDef=\"let element\"\r\n                        [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"> {{element.teamShortName}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"contestPoints\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Bet Points </th>\r\n                        <td mat-cell *matCellDef=\"let element\"\r\n                        [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"> {{element.contestPoints}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"winningPoints\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Winning Points </th>\r\n                        <td mat-cell *matCellDef=\"let element\"\r\n                        [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"> {{element.winningPoints}} </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row [ngClass]=\"{'evenrow': index%2 == 1}\" *matRowDef=\"let row; columns: displayedColumns; let index=index;let element\"\r\n                    [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"></tr>\r\n                </table>\r\n                <mat-paginator color=\"accent\" [pageSizeOptions]=\"[10,20]\" showFirstLastButtons></mat-paginator>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { contestBaseURL, matchBaseURL, usersBaseURL } from '../../constants/http-urls';\r\nimport { BotModel } from '../../model/bot/BotModel';\r\n\r\n// let contestBaseURL = 'http://localhost:8081/contest';\r\n// let contestBaseURL = 'http://localhost:8080/contest';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class BotService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  async viewAllContestByMatchId(matchId:number):Promise<any>\r\n  {\r\n    return await this.http.get(matchBaseURL + '/' + matchId + '/contest', {observe: 'response'}).toPromise();\r\n  }\r\n\r\n  async viewAllContestByUserAndMatchId(userId:number,matchId:number):Promise<any>\r\n  {\r\n    return await this.http.get(usersBaseURL + '/' + userId + '/contest/' + matchId, {observe: 'response'}).toPromise();\r\n  }\r\n\r\n  async addBet(botModel:BotModel):Promise<any>\r\n  {\r\n    return await this.http.post(contestBaseURL , botModel,{observe:'response'}).toPromise();\r\n  }\r\n\r\n  async updateBet(contestId:number, botModel:BotModel):Promise<any>\r\n  {\r\n    return await this.http.put(contestBaseURL + '/' + contestId , botModel , {observe:'response'}).toPromise();\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { LiveMatchModel } from 'src/app/common/model/match/liveMatchesModel';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { OldMatchesModel } from 'src/app/common/model/match/oldMatchesModel';\r\nimport { UpcomingMatch } from 'src/app/common/model/match/upcomingMatches';\r\nimport { BotService } from 'src/app/common/service/bot/bot.service';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\n\r\n@Component({\r\n  selector: 'app-my-matches',\r\n  templateUrl: './my-matches.component.html',\r\n  styleUrls: ['./my-matches.component.css']\r\n})\r\nexport class MyMatchesComponent implements OnInit {\r\n\r\n  teamColor:any = {\r\n    CSK: \"#ff0\", //csk\r\n    DC: \"#2561ae\", //dc\r\n    GT: \"#00416a\", //gt\r\n    KKR: \"#7300ab\", //kkr\r\n    LSG: \"#ace5ee\", //lsg\r\n    MI: \"#004f91\", //mi\r\n    PBKS: \"#ed1f27\", //pbks\r\n    RR: \"RGB(37 ,74 ,165)\", //rr\r\n    RCB: \"#d5152c\", //rcb\r\n    SRH: \"#f7a721\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n  teamFontColor:any = {\r\n    CSK: \"black\", //csk\r\n    DC: \"#fff\", //dc\r\n    GT: \"#fff\", //gt\r\n    KKR: \"#fff\", //kkr\r\n    LSG: \"black\", //lsg\r\n    MI: \"#fff\", //mi\r\n    PBKS: \"#fff\", //pk\r\n    RR: \"white\", //rr\r\n    RCB: \"#fff\", //rcb\r\n    SRH: \"black\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'black', //\r\n    t2: 'black' //\r\n  }\r\n\r\n  borderTop:any = {\r\n    CSK: \"5px solid #ef9b0f\", //csk\r\n    DC: \"5px solid #4B9CD3\", //dc\r\n    GT: \"5px solid #1d2951\", //gt\r\n    KKR: \"5px solid #430064\", //kkr\r\n    LSG: \"5px solid #9bc4e2\", //lsg\r\n    MI: \"5px solid blue\", //mi\r\n    PBKS: \"5px solid #af002a\", //pk\r\n    RR: \"5px solid #1877F2\", //rr\r\n    RCB: \"5px solid #800000\", //rcb\r\n    SRH: \"5px solid #F05E23\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n  upcoming = \"../assets/img/upcoming.jpg\";\r\n\r\n  upcomingMatches!: UpcomingMatch[];\r\n\r\n  liveMatch!: LiveMatchModel[];\r\n\r\n  oldMatches!:OldMatchesModel[];\r\n\r\n  constructor(\r\n    private botservice: BotService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private matchservice:MatchesService,\r\n    public loginStateService: LoginstateService,\r\n    private router:Router\r\n  ) { }\r\n\r\n  loginState = this.loginStateService.getLoginState();\r\n  userId = this.loginState?.userId;\r\n  role = this.loginState?.role;\r\n  un = this.loginState.username;\r\n\r\n  async ngOnInit() {\r\n\r\n    this.upcomingMatches = await this.UpcomingMatches(this.userId);\r\n    // console.log(this.upcomingMatches);\r\n\r\n    this.liveMatch = await this.LiveMatch(this.userId);\r\n    // console.log(this.liveMatch);\r\n\r\n    this.oldMatches = await this.MatchResult(this.userId);\r\n    // console.log(this.oldMatches);\r\n\r\n  }\r\n\r\n  // UPCOMING MATCHES\r\n\r\n  async UpcomingMatches(userId:number): Promise<any>\r\n  {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let upcomingMatches: UpcomingMatch[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.upcomingMatches(userId);\r\n      upcomingMatches = resp.body;\r\n      if (upcomingMatches) {\r\n        dialogRef.close();\r\n        return upcomingMatches;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // LIVE MATCH\r\n\r\n  async LiveMatch(userId:number): Promise<any>\r\n  {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let liveMatch: LiveMatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.liveMatch(userId);\r\n      liveMatch = resp.body;\r\n      if (liveMatch) {\r\n        dialogRef.close();\r\n        return liveMatch;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // OLD MATCHES RESULTS\r\n\r\n  async MatchResult(userId:number): Promise<any>\r\n  {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let oldMatches: OldMatchesModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.allMatchResult(userId);\r\n      oldMatches = resp.body;\r\n      if (oldMatches) {\r\n        dialogRef.close();\r\n        return oldMatches;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n\r\n  gotoBettingPage(id:number){\r\n      // this.location.replaceState('');\r\n      this.router.navigate([this.role+`/match-list/betting-page/${id}`]);\r\n    }\r\n\r\n  // getColorForTeam1(){\r\n  //   return this.upcomingMatches && this.upcomingMatches.team1Id ? this.teamColor[this.upcomingMatches.team1Id] : this.teamColor.t1;\r\n  // }\r\n\r\n  // getColorForTeam2(){\r\n  //   return this.upcomingMatches && this.upcomingMatches.team2Id ? this.teamColor[this.upcomingMatches.team2Id] : this.teamColor.t2;\r\n  // }\r\n\r\n}\r\n","<body class=\"pt-0 pb-0 mt-0 mb-0\">\r\n    <mat-tab-group mat-align-tabs=\"center\">\r\n\r\n        <mat-tab label=\"Upcoming\">\r\n\r\n            <!-- <div class=\"card\" *ngFor=\"let upcomingmatches of upcomingMatches\" routerLink=\"/User/match-list/betting-page/{{upcomingmatches.matchId}}\"> -->\r\n\r\n            <div class=\"alt\" *ngIf=\"upcomingMatches?.length==0\">\r\n                <h1>No Upcoming Matches, Please Place Bets to Continue</h1>\r\n            </div>\r\n\r\n            <div class=\"card\" *ngFor=\"let upcomingmatches of upcomingMatches\" (click)=\"gotoBettingPage(upcomingmatches.matchId)\">\r\n\r\n                <div class=\"left\" [style.background]=\"upcomingmatches.team1Short ? teamColor[upcomingmatches.team1Short] : teamColor.t1\" [style.border-top]=\"upcomingmatches.team1Short ? borderTop[upcomingmatches.team1Short] : borderTop.t1\"></div>\r\n\r\n                <div class=\"right\" [style.background]=\"upcomingmatches.team2Short ? teamColor[upcomingmatches.team2Short] : teamColor.t2\" [style.border-top]=\"upcomingmatches.team2Short ? borderTop[upcomingmatches.team2Short] : borderTop.t2\"></div>\r\n\r\n                <!-- <h2>Upcoming Match No. {{upcomingmatches?.matchId}}</h2> -->\r\n                <h2>{{upcomingmatches?.team1Short}} vs {{upcomingmatches?.team2Short}}</h2>\r\n                <div class=\"match-details\">\r\n                    <div class=\"team1\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{upcomingmatches?.team1Logo}}\" />\r\n                        <h3 class=\"team-name\" [style.color]=\"upcomingmatches.team1Short ? teamFontColor[upcomingmatches.team1Short] : teamFontColor.t1\">{{upcomingmatches?.team1Short}} </h3>\r\n                    </div>\r\n                    <div class=\"details\">\r\n                        <!-- <h3 class=\"date\">{{upcomingmatches?.startDatetime | date: 'short': 'UTC'}} IST </h3> -->\r\n                        <h3 class=\"date\">{{upcomingmatches?.startDatetime | date: 'short'}} IST </h3>\r\n                        <h1 class=\"versus\">VS</h1>\r\n                        <h4 class=\"venue\">{{upcomingmatches?.venue}} </h4>\r\n                    </div>\r\n                    <div class=\"team2\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{upcomingmatches?.team2Logo}}\" />\r\n                        <h3 class=\"team-name\" [style.color]=\"upcomingmatches.team2Short ? teamFontColor[upcomingmatches.team2Short] : teamFontColor.t2\">{{upcomingmatches?.team2Short}} </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"Live\">\r\n\r\n            <div class=\"alt\" *ngIf=\"liveMatch?.length==0\">\r\n                <h1>No Live Match Available, Please Come back later</h1>\r\n            </div>\r\n\r\n            <div class=\"card\" *ngFor=\"let livematch of liveMatch\" routerLink=\"view-live-match/{{livematch.matchId}}\">\r\n\r\n                <div class=\"left\" [style.background]=\"livematch.team1Short ? teamColor[livematch.team1Short] : teamColor.t1\" [style.border-top]=\"livematch.team1Short ? borderTop[livematch.team1Short] : borderTop.t1\">\r\n\r\n                </div>\r\n\r\n                <div class=\"right\" [style.background]=\"livematch.team2Short ? teamColor[livematch.team2Short] : teamColor.t2\" [style.border-top]=\"livematch.team2Short ? borderTop[livematch.team2Short] : borderTop.t2\">\r\n\r\n                </div>\r\n\r\n                <!-- <h2>Live Match No. {{livematch?.matchId}}</h2> -->\r\n                <h2>{{livematch?.team1Short}} vs {{livematch?.team2Short}}</h2>\r\n                <div class=\"match-details\">\r\n                    <div class=\"team1\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{livematch?.team1Logo}}\" />\r\n                        <h3 class=\"team-name\" [style.color]=\"livematch.team1Short ? teamFontColor[livematch.team1Short] : teamFontColor.t1\">{{livematch?.team1Short}} </h3>\r\n                    </div>\r\n                    <div class=\"details\">\r\n                        <!-- <h3 class=\"date\">{{livematch?.startDatetime | date: 'short': 'UTC'}} IST </h3> -->\r\n                        <h3 class=\"date\">{{livematch?.startDatetime | date: 'short'}} IST </h3>\r\n                        <h1 class=\"versus\">VS</h1>\r\n                        <h4 class=\"venue\">{{livematch?.venue}} </h4>\r\n                    </div>\r\n                    <div class=\"team2\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{livematch?.team2Logo}}\" />\r\n                        <h3 class=\"team-name\" [style.color]=\"livematch.team2Short ? teamFontColor[livematch.team2Short] : teamFontColor.t2\">{{livematch?.team2Short}} </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </mat-tab>\r\n\r\n        <mat-tab label=\"Results\">\r\n\r\n            <div class=\"alt\" *ngIf=\"oldMatches?.length==0\">\r\n                <h1>No Matches are played yet, wait for the first match</h1>\r\n            </div>\r\n\r\n            <div class=\"card\" *ngFor=\"let oldmatches of oldMatches\" routerLink=\"view-old-match/{{oldmatches.matchId}}\">\r\n\r\n                <div class=\"left\" [style.background]=\"oldmatches.team1Short ? teamColor[oldmatches.team1Short] : teamColor.t1\" [style.border-top]=\"oldmatches.team1Short ? borderTop[oldmatches.team1Short] : borderTop.t1\">\r\n\r\n                </div>\r\n\r\n                <div class=\"right\" [style.background]=\"oldmatches.team2Short ? teamColor[oldmatches.team2Short] : teamColor.t2\" [style.border-top]=\"oldmatches.team2Short ? borderTop[oldmatches.team2Short] : borderTop.t2\">\r\n\r\n                </div>\r\n\r\n                <!-- <h2>Match No. {{oldmatches?.matchId}} Winner : {{oldmatches.winnerTeamName}} </h2> -->\r\n                <h2 *ngIf=\"oldmatches.winnerTeamName\"> Winner : {{oldmatches.winnerTeamName}} </h2>\r\n                <h2 *ngIf=\"!oldmatches.winnerTeamName\"> Draw / Cancelled </h2>\r\n                <div class=\"match-details\">\r\n                    <div class=\"team1\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{oldmatches?.team1Logo}}\" />\r\n                        <h3 class=\"team-name\" [style.color]=\"oldmatches.team1Short ? teamFontColor[oldmatches.team1Short] : teamFontColor.t1\">{{oldmatches?.team1Short}} </h3>\r\n                    </div>\r\n                    <div class=\"details\">\r\n                        <!-- <h3 class=\"date\">{{oldmatches?.startDatetime | date: 'short': 'UTC'}} IST </h3> -->\r\n                        <h3 class=\"date\">{{oldmatches?.startDatetime | date: 'short'}} IST </h3>\r\n                        <h1 class=\"versus\">VS</h1>\r\n                        <h4 class=\"venue\">{{oldmatches?.venue}} </h4>\r\n                    </div>\r\n                    <div class=\"team2\">\r\n                        <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{oldmatches?.team2Logo}}\" />\r\n                        <h3 class=\"team-name\" [style.color]=\"oldmatches.team2Short ? teamFontColor[oldmatches.team2Short] : teamFontColor.t2\">{{oldmatches?.team2Short}} </h3>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </mat-tab>\r\n\r\n    </mat-tab-group>\r\n\r\n</body>","import { Component, Inject, OnInit, Optional } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-update-profile',\r\n  templateUrl: './update-profile.component.html',\r\n  styleUrls: ['./update-profile.component.css']\r\n})\r\nexport class UpdateProfileComponent implements OnInit {\r\n\r\n  userForm: FormGroup;\r\n  userModel: UserModel;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private userService: UserService,\r\n    public loginStateService: LoginstateService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private router:Router,\r\n    private matDialogRef: MatDialogRef<UpdateProfileComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: UserModel\r\n  ) {\r\n    this.userModel = data;\r\n    // console.log(this.userModel);\r\n\r\n    this.userForm = this.fb.group({\r\n\r\n      // userId: [{ value: this.userModel.userId, disabled: true }],\r\n\r\n      username: [{value: this.data?.username,disabled: true}],\r\n      // , Validators.pattern('[a-zA-Z ]+')\r\n\r\n      genderId: [this.data?.genderId],\r\n      // , [Validators.required, Validators.minLength(1), Validators.maxLength(1), Validators.pattern('[1-2]+')]\r\n\r\n      firstname: [this.data?.firstName, [Validators.required, Validators.minLength(4)\r\n        , Validators.maxLength(100), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n      lastname: [this.data?.lastName, [Validators.required, Validators.minLength(4)\r\n          , Validators.maxLength(100), Validators.pattern('[a-zA-Z ]+')]],\r\n\r\n      mobilenumber: [this.data?.mobileNumber, [Validators.required, Validators.minLength(10)\r\n        , Validators.maxLength(10), Validators.pattern('[1-9][0-9]{9}')]],\r\n\r\n      email: [this.data?.email, [Validators.email]],\r\n\r\n      profilePicture: [this.data?.profilePicture]\r\n      // , [Validators.required, Validators.minLength(4), Validators.maxLength(500)]\r\n\r\n    });\r\n  }\r\n\r\n  gender:any[]=[{genderId:1,name:\"Male\"},{genderId:2,name:\"Female\"}];\r\n  ngOnInit() {}\r\n\r\n  get form() {\r\n    return this.userForm.controls;\r\n  }\r\n\r\n  async updateUser() {\r\n    if (this.userForm.valid) {\r\n      // this.userModel.firstName = this.form.firstname.value;\r\n      // this.userModel.lastName = this.form.lastname.value;\r\n      // this.userModel.mobileNumber = this.form.mobilenumber.value;\r\n      // this.userModel.email = this.form.email.value;\r\n      const loginState = this.loginStateService.getLoginState();\r\n      var formData: any = new FormData();\r\n        formData.append(\"username\", this.form.username.value);\r\n        formData.append(\"firstName\", this.form.firstname.value);\r\n        formData.append(\"lastName\", this.form.lastname.value);\r\n        formData.append(\"email\", this.form.email.value);\r\n        formData.append(\"mobileNumber\", this.form.mobilenumber.value);\r\n        formData.append(\"genderId\", this.form.genderId.value);\r\n        formData.append(\"profilePicture\", this.form.profilePicture.value);\r\n\r\n      let panelClass = 'green';\r\n      let snackbarMsg = '';\r\n      let snackbarRef = null;\r\n      this.snackbar.dismiss();\r\n      const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n      let resp = null;\r\n      try {\r\n        resp = await this.userService.updateUser(this.userModel.userId,formData);\r\n        this.userModel = resp.body;\r\n        if (this.userModel != null) {\r\n          snackbarMsg = 'Profile successfully updated';\r\n          this.matDialogRef.close(this.userModel);\r\n          // this.loginStateService.destroySession(loginState.role);\r\n          // this.router.navigate(['/login']);\r\n        } else {\r\n          snackbarMsg = NO_RESP;\r\n          panelClass = 'red';\r\n        }\r\n      } catch (ex) {\r\n        snackbarMsg = getErrorMessage(ex);\r\n        panelClass = 'red';\r\n      } finally {\r\n        dialogRef.close();\r\n        if (snackbarMsg) {\r\n          // location.reload();\r\n          snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n            getSnackbarProperties(snackbarMsg, panelClass));\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"sub-container-1-inner\">\r\n    <form [formGroup]=\"userForm\" (ngSubmit)=\"updateUser()\">\r\n        <div class=\"title\">\r\n            <span>User Information</span>\r\n        </div>\r\n        <div class=\"signup-container\">\r\n            <div class=\"first\">\r\n                <!-- <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>User Id</mat-label>\r\n                        <input matInput formControlName=\"userId\">\r\n                    </mat-form-field>\r\n                </div> -->\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Username</mat-label>\r\n                        <input matInput formControlName=\"username\" autocomplete=\"off\">\r\n                        <!-- <mat-error *ngIf=\"form.username.errors?.required\">username is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.username.errors?.minlength\">username must have atleast 4 characters\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.username.errors?.maxlength\">username must have less than 10 characters\r\n                        </mat-error> -->\r\n                    </mat-form-field>\r\n                </div>\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>First Name</mat-label>\r\n                        <input matInput formControlName=\"firstname\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.firstname.errors?.required\">first name is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.firstname.errors?.minlength\">first name must have atleast 4 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.firstname.errors?.maxlength\">first name must have less than 100 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.firstname.errors?.pattern\">first name is invalid</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Last Name</mat-label>\r\n                        <input matInput formControlName=\"lastname\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.firstname.errors?.required\">last name is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.lastname.errors?.minlength\">last name must have atleast 4 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.lastname.errors?.maxlength\">last name must have less than 100 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.lastname.errors?.pattern\">last name is invalid</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Gender</mat-label>\r\n                        <!-- <input matInput formControlName=\"genderId\" autocomplete=\"off\"> -->\r\n                        <mat-select formControlName=\"genderId\">\r\n                            <mat-option *ngFor=\"let gender of gender\" [value]=\"gender.genderId\"> {{gender.name}} </mat-option>\r\n                            <!-- <mat-option value=\"2\"> Female </mat-option> -->\r\n                        </mat-select>\r\n                        <!-- <mat-error *ngIf=\"form.genderId.errors?.required\">genderId is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.genderId.errors?.minlength\">genderId must have atleast 1 digit\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.genderId.errors?.maxlength\">genderId should not be more then 1 digit\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.genderId.errors?.pattern\">genderId must have contain digit\r\n                        </mat-error> -->\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"second\">\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Profile Pic</mat-label>\r\n                        <ngx-mat-file-input formControlName=\"profilePicture\">\r\n                            <mat-icon color=\"accent\" ngxMatFileInputIcon>folder</mat-icon>\r\n                        </ngx-mat-file-input>\r\n                        <!-- <mat-error *ngIf=\"form.profilePicture.errors?.required\">\r\n                            is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.profilePicture.errors?.minlength\">\r\n                            must have atleast 4 characters\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.profilePicture.errors?.maxlength\">\r\n                            must have less than 500 characters\r\n                        </mat-error> -->\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput formControlName=\"email\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.email.errors?.required\">email is reqiured\r\n                        </mat-error>\r\n                        <mat-error *ngIf=\"form.email.errors?.maxlength\">email must have less than 200 characters</mat-error>\r\n                        <mat-error *ngIf=\"form.email.errors?.email\">email is invalid</mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n                <div class=\"field-container\">\r\n                    <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                        <mat-label>Phone no.</mat-label>\r\n                        <input matInput formControlName=\"mobilenumber\" autocomplete=\"off\">\r\n                        <mat-error *ngIf=\"form.mobilenumber.errors?.required\">phone no. is reqiured</mat-error>\r\n                        <mat-error *ngIf=\"form.mobilenumber.errors?.minlength || form.mobilenumber.errors?.maxlength || form.mobilenumber.errors?.pattern\">\r\n                            phone no. is invalid\r\n                        </mat-error>\r\n                    </mat-form-field>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n        <div class=\"action-container\">\r\n            <button mat-raised-button color=\"accent\" type=\"submit\">Update</button>\r\n            <button type=\"reset\" mat-raised-button (click)=\"closeDialogBox()\" color=\"warn\">Cancel</button>\r\n        </div>\r\n    </form>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { otherUser } from 'src/app/common/constants/links';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { UserFutureBets } from 'src/app/common/model/statistics/user-future-bets';\r\nimport { UsersWinningLosingModel } from 'src/app/common/model/statistics/users-winning-losing-points';\r\nimport { UserStats } from 'src/app/common/model/statistics/userstats';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { UserStaticticsService } from 'src/app/common/service/statistics/user-statictics.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-view-others-user-profile',\r\n  templateUrl: './view-others-user-profile.component.html',\r\n  styleUrls: ['./view-others-user-profile.component.css']\r\n})\r\nexport class ViewOthersUserProfileComponent implements OnInit {\r\n\r\n  profile = otherUser;\r\n  userData!: UserModel;\r\n  userId!:number;\r\n  userStats: UserStats[] = [];\r\n  userFutureBets:UserFutureBets[] = [];\r\n\r\n  usersWinningLoosingPoints!:UsersWinningLosingModel;\r\n  // usersWinningLosingPoints!:UsersWinningModel;\r\n\r\n  showForm:boolean = false;\r\n\r\n  newform()\r\n  {\r\n    this.showForm =!this.showForm;\r\n  }\r\n\r\n  constructor(\r\n    private route:ActivatedRoute,\r\n    private userservice: UserService,\r\n      private dialog: MatDialog,\r\n      private snackbar: MatSnackBar,\r\n      private userstats:UserStaticticsService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    this.route.params.subscribe(data=>{\r\n      this.userId=data.id;\r\n    });\r\n\r\n    // this.userFutureBets = await this.getUsersFutureContest();\r\n    // console.log(this.userFutureBets);\r\n\r\n    // this.userStats = await this.getUserStats();\r\n    // console.log(this.userStats);\r\n\r\n    this.userData = await this.getUsers();\r\n    // console.log(this.userData);\r\n\r\n    // this.usersWinningLosingPoints = await this.getUserWinningPoints();\r\n    // console.log(this.usersWinningLosingPoints);\r\n\r\n    this.usersWinningLoosingPoints = await this.getUserWinningAndLosingPoints();\r\n    // console.log(this.usersWinningLoosingPoints);\r\n  }\r\n\r\n  findsum(data:any){\r\n    data.forEach((element:any) => {\r\n      let obj = this.userFutureBets.find(o => o.userId == element.userId);\r\n      if(obj)\r\n      element.availablePoints += obj.contestPoints;\r\n    });\r\n  }\r\n\r\n  // GET USERS FUTURE BETS AND CURRENT POINTS\r\n\r\n  // a= this.userStats.find(data => data.userId == this.userId)?.availablePoints;\r\n\r\n  // const index = this.userStats.findIndex(data => data.userId == this.userId);\r\n  // this.userStats[index].availablePoints;\r\n\r\n  async getUserStats(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userModel: UserStats[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userstats.getUserStatsById(this.userId);\r\n      userModel = resp.body;\r\n      this.findsum(userModel);\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // USERS FUTURE Bet\r\n\r\n  async getUsersFutureContest(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userFutureBets: UserFutureBets[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userstats.getUserFutureBetsById(this.userId);\r\n      userFutureBets = resp.body;\r\n      if (userFutureBets) {\r\n        dialogRef.close();\r\n        return userFutureBets;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n\r\n\r\n  async getUsers(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userModel: UserModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userservice.getUserById(this.userId);\r\n      userModel = resp.body;\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // GET USER STATISTICS\r\n\r\n  async getUserWinningAndLosingPoints(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let usersWinningLosingPoints: UsersWinningLosingModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userstats.getUserWinningLosingPoint(this.userId);\r\n      usersWinningLosingPoints = resp.body;\r\n      if (usersWinningLosingPoints) {\r\n        dialogRef.close();\r\n        return usersWinningLosingPoints;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n}\r\n","<body [style.background-image]=\"'url(' + profile + ')'\">\r\n    <div class=\"wrapper\">\r\n        <div class=\"left\">\r\n            <img src=\"{{userData?.profilePicture}}\" loading=\"lazy\" alt=\"{{userData.firstName.substr(0,1)+userData.lastName.substr(0,1)}}\">\r\n            <!-- onerror=\"this.src='assets/img/user.png'\" -->\r\n            <h4> {{userData?.firstName | uppercase}} {{userData?.lastName | uppercase}} </h4>\r\n            <p> @{{userData?.username}}</p>\r\n        </div>\r\n        <div class=\"right\">\r\n            <!-- <div class=\"info\">\r\n                <h3>information</h3>\r\n                <div class=\"info_data\">\r\n                    <div class=\"data\">\r\n                        <h4>Email</h4>\r\n                        <mat-icon class=\"emicon\">email</mat-icon>\r\n                        <p> {{userData?.email}} </p>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <h4>Phone</h4>\r\n                        <mat-icon class=\"emicon\">phone_iphone</mat-icon>\r\n                        <p>{{userData?.mobileNumber}}</p>\r\n                    </div>\r\n                </div>\r\n            </div> -->\r\n            <div class=\"projects\">\r\n                <h3>Bet history</h3>\r\n                <div class=\"projects_data\">\r\n                    <div class=\"data\">\r\n                        <h4>Available Points</h4>\r\n                        <!-- <p class=\"blue\" *ngFor=\"let userstats of userStats\"> {{userstats?.availablePoints}}</p> -->\r\n                        <p class=\"blue\"> {{userData?.availablePoints}} </p>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <h4>Winning Points</h4>\r\n                        <p class=\"green\"> {{usersWinningLoosingPoints?.winningPoints}} </p>\r\n                        <p class=\"green p_lower\"> ({{usersWinningLoosingPoints?.numberOfWinningMatches}} Matches) </p>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <h4>Loosing Points</h4>\r\n                        <p class=\"red\"> {{usersWinningLoosingPoints?.losingPoints}} </p>\r\n                        <p class=\"red p_lower\"> ({{usersWinningLoosingPoints?.numberOfLosingMatches}} Matches) </p> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"social_media\">\r\n                <ul>\r\n                    <!-- <li href=\"\"><i class=\"fab fa-facebook-f\"></i></li>\r\n                    <li href=\"\"><i class=\"fab fa-twitter\"></i></li>\r\n                    <li href=\"\"><i class=\"fab fa-instagram-square\"></i></li> -->\r\n                    <!-- <li>\r\n                        <mat-icon>manage_accounts</mat-icon>\r\n                    </li> -->\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n","import { Inject, SimpleChanges } from '@angular/core';\r\nimport { Optional } from '@angular/core';\r\nimport { Component, OnInit, OnChanges } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { csk, dc, gt, kkr, lsg, mi, pbks, rcb, rr, srh } from 'src/app/common/constants/links';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { BotModel } from 'src/app/common/model/bot/BotModel';\r\nimport { CheckContestByUserAndMatchId } from 'src/app/common/model/bot/contestbyuserandmatchid';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { BotService } from 'src/app/common/service/bot/bot.service';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-insert-update-contest',\r\n  templateUrl: './insert-update-contest.component.html',\r\n  styleUrls: ['./insert-update-contest.component.css']\r\n})\r\nexport class InsertUpdateContestComponent implements OnInit {\r\n\r\n  teamLoader:any = {\r\n    1: csk, //csk\r\n    2: dc, //dc\r\n    3: gt, //gt\r\n    4: kkr, //kkr\r\n    5: lsg, //lsg\r\n    6: mi, //mi\r\n    7: pbks, //pk\r\n    8: rr, //rr\r\n    9: rcb, //rcb\r\n    10: srh, //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n  selectedTeamId: any = null;\r\n\r\n  userForm!: FormGroup;\r\n  botData!: BotModel;\r\n  botForm!: FormGroup;\r\n  checkk!: CheckContestByUserAndMatchId;\r\n  matchData!: MatchModel;\r\n  userData!: UserModel;\r\n  isloading = false;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private loginStateService: LoginstateService,\r\n    private botservice: BotService,\r\n    private dialog: MatDialog,\r\n    private snackbar: MatSnackBar,\r\n    private userservice: UserService,\r\n    private matchservice: MatchesService,\r\n    private matDialogRef: MatDialogRef<InsertUpdateContestComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: BotModel\r\n  ) {\r\n    this.botData = data;\r\n    if (data) {\r\n      this.botForm = this.fb.group({\r\n        // contestId: [{ value: this.botData.contestId, disabled: true }],\r\n\r\n        // userId: [{value: localStorage.getItem('userId'),disabled:true}],\r\n\r\n        matchId: [{ value: this.data.matchId, disabled: true }],\r\n\r\n        selectTeam: [this.data.teamId, [Validators.required]],\r\n\r\n        contestPoints: [this.data.contestPoints, [Validators.required, Validators.pattern('^[1-9]{1,}[0-9]{1,3}$')]]\r\n\r\n      });\r\n    } else {\r\n      this.botForm = this.fb.group({\r\n\r\n        // contestId: [{  disabled: true }],\r\n\r\n        // userId: [{value: localStorage.getItem('userId'),disabled:true}],\r\n\r\n        matchId: [{ value: this.data?.matchId, disabled: true }],\r\n\r\n        selectTeam: ['', [Validators.required]],\r\n\r\n        contestPoints: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(4), Validators.pattern('^[1-9][0-9]*$')]]\r\n\r\n      });\r\n    }\r\n  }\r\n\r\n  // mPoints: any;\r\n  // changedValue : any;\r\n  AvailableContestPoints:any;\r\n\r\n  async ngOnInit() {\r\n    this.matchData = await this.getMatchById(this.data.matchId);\r\n    // console.log(this.matchData);\r\n\r\n    this.checkk = await this.getPlayersBetByUserAndMatchId(this.loginState.userId, this.data.matchId);\r\n    // console.log(this.checkk);\r\n\r\n    this.userData = await this.getUsersById();\r\n    // console.log(this.userData);\r\n\r\n    // this.mPoints = this.matchData.minimumPoints;\r\n    // console.log('this is minimum points : ' +this.mPoints);\r\n\r\n    // this.botForm.get('contestPoints')?.valueChanges.subscribe(value => {\r\n    //   this.changedValue = value;\r\n\r\n    //   console.log('changed Value : '+this.changedValue);\r\n    // });\r\n\r\n    // this.n();\r\n    this.minPointsValidator(this.matchData.minimumPoints);\r\n\r\n    this.AvailableContestPoints = this.botData?.contestPoints + this.userData?.availablePoints;\r\n  }\r\n\r\n  minPointsValidator(minimumPoint:any){\r\n    const f = this.botForm.controls.contestPoints;\r\n    let cp:any = this.botForm.get('contestPoints')?.value;\r\n    minimumPoint = this.matchData.minimumPoints;\r\n    if (cp < minimumPoint) {\r\n      f.setErrors([Validators.required]);\r\n    }\r\n  }\r\n\r\n  availableContestPointsValidator(availablePoints:any){\r\n    const f = this.botForm.controls.contestPoints;\r\n    let cp:any = this.botForm.get('contestPoints')?.value;\r\n    let userAvailablePoints = this.userData.availablePoints;\r\n    let userContestPointsOfCurrentMatch = this.botData.contestPoints;\r\n    availablePoints = userAvailablePoints + userContestPointsOfCurrentMatch;\r\n    if (cp > availablePoints) {\r\n      f.setErrors([Validators.required]);\r\n    }\r\n  }\r\n\r\n  availablePointsValidator(availablePoints:any){\r\n    const f = this.botForm.controls.contestPoints;\r\n    let cp:any = this.botForm.get('contestPoints')?.value;\r\n    let userAvailablePoints = this.userData.availablePoints;\r\n    if (cp > userAvailablePoints) {\r\n      f.setErrors([Validators.required]);\r\n    }\r\n  }\r\n\r\n  // n() {\r\n  //   const cp = this.botForm.get('contestPoints');\r\n  //   this.botForm.get('contestPoints')?.valueChanges.subscribe(value => {\r\n  //     console.log('changed Value : ' + value);\r\n  //     if (value < this.matchData.minimumPoints) {\r\n  //       let f=this.matchData.minimumPoints;\r\n  //       cp?.setValidators([Validators.required]);\r\n  //     }else if(value > this.matchData.minimumPoints){\r\n  //       cp?.clearValidators();\r\n  //     }\r\n  //     cp?.updateValueAndValidity();\r\n  //   });\r\n\r\n    // if (this.mPoints > this.changedValue) {\r\n    //   this.botForm.controls['constestPoints']?.setErrors({invalidNumber:true});\r\n    // }else{\r\n    //   this.botForm.controls['constestPoints']?.setErrors(null);\r\n    // }\r\n  // }\r\n\r\n  // async ngOnChanges(changes: SimpleChanges){\r\n  //   const previousMatchData = <MatchModel>changes.matchData.previousValue;\r\n  //   const currentMatchData = <MatchModel>changes.matchData.currentValue;\r\n\r\n  //   console.log('Previous : '+ (previousMatchData ? previousMatchData.minimumPoints : 'NULL'));\r\n  //   console.log('Current : ' +currentMatchData.minimumPoints);\r\n\r\n  // }\r\n\r\n  async getUsersById(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userModel: UserModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userservice.getUserById(this.loginState.userId);\r\n      userModel = resp.body;\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  async getMatchById(matchId: number): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.viewMatchById(matchId);\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // CHECK IF PLAYER HAS PLACED BET\r\n\r\n  async getPlayersBetByUserAndMatchId(userId: number, matchId: number): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let botModel: BotModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.botservice.viewAllContestByUserAndMatchId(userId, matchId);\r\n      botModel = resp.body;\r\n      if (botModel) {\r\n        dialogRef.close();\r\n        return botModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    // if (snackbarMsg) {\r\n    //   snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n    //     getSnackbarProperties(snackbarMsg, panelClass));\r\n    // }\r\n    return [];\r\n  }\r\n\r\n  reload() {\r\n    location.reload();\r\n  }\r\n\r\n  get form() {\r\n    return this.botForm.controls;\r\n  }\r\n\r\n  reset(field: string) {\r\n    this.form[field].setValue('');\r\n  }\r\n\r\n  loginState = this.loginStateService.getLoginState();\r\n\r\n  async PlaceBet() {\r\n    if (this.botForm.valid) {\r\n      if (!this.botData.contestId) {\r\n        this.botData = new BotModel();\r\n        this.botData.contestId = 0;\r\n        this.botData.userId = this.loginState.userId;\r\n        this.botData.matchId = this.data.matchId;\r\n        this.botData.contestPoints = this.form.contestPoints.value;\r\n        this.botData.teamId = this.form.selectTeam.value;\r\n        this.selectedTeamId = this.form.selectTeam.value;\r\n        // this.botData.winningPoints = 0;\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        // const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        this.isloading = true;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.botservice.addBet(this.botData);\r\n          this.botData = resp.body;\r\n          if (this.botData != null)\r\n          // && this.botData.contestId > 0\r\n          {\r\n            snackbarMsg = 'Bet successfully Placed!';\r\n            this.matDialogRef.close(this.botData);\r\n            this.isloading = false;\r\n            // this.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          // dialogRef.close();\r\n          this.isloading = false;\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      } else {\r\n\r\n        this.botData = new BotModel();\r\n        this.botData.contestId = this.botData.contestId;\r\n        this.botData.userId = this.loginState.userId;\r\n        this.botData.matchId = this.data.matchId;\r\n        this.botData.teamId = this.form.selectTeam.value;\r\n        this.botData.contestPoints = this.form.contestPoints.value;\r\n        this.selectedTeamId = this.form.selectTeam.value;\r\n\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        this.snackbar.dismiss();\r\n        // const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n\r\n        this.isloading = true;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.botservice.updateBet(this.data.contestId, this.botData);\r\n          this.botData = resp.body;\r\n          if (this.botData != null) {\r\n            snackbarMsg = 'Bet successfully updated!';\r\n            this.matDialogRef.close(this.botData);\r\n            this.isloading = false;\r\n            // this.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          // dialogRef.close();\r\n          this.isloading = false;\r\n          if (snackbarMsg) {\r\n            snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n              getSnackbarProperties(snackbarMsg, panelClass));\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"sub-container-1-inner\" *ngIf='!isloading'>\r\n    <form [formGroup]=\"botForm\" (ngSubmit)=\"PlaceBet()\">\r\n        <div class=\"title\">\r\n            <span> {{checkk?.contestPoints ? 'Update Bet' : 'Place Bet'}} </span>\r\n        </div>\r\n        <!-- <div class=\"field-container\">\r\n            <mat-form-field appearance=\"fill\" *ngIf=\"botData\">\r\n                <mat-label>ID</mat-label>\r\n                <input matInput formControlName=\"contestId\">\r\n            </mat-form-field>\r\n        </div> -->\r\n\r\n        <div class=\"field-container\">\r\n            <!-- <mat-form-field appearance=\"fill\" color=\"accent\"> -->\r\n            <mat-label>Select Team</mat-label>\r\n\r\n            <mat-radio-group formControlName=\"selectTeam\">\r\n                <mat-radio-button value=\"{{matchData?.team1Id}}\" type=\"number\" [checked]=\"matchData?.team1Id === checkk?.teamId\">{{matchData?.team1}}</mat-radio-button>\r\n                <mat-radio-button value=\"{{matchData?.team2Id}}\" type=\"number\" [checked]=\"matchData?.team2Id === checkk?.teamId\">{{matchData?.team2}}</mat-radio-button>\r\n            </mat-radio-group>\r\n            <!-- <input matInput formControlName=\"selectTeam\" autocomplete=\"off\"> -->\r\n            <!-- <mat-error *ngIf=\"form.selectTeam.errors?.required \"> Select a Team to place bet</mat-error> -->\r\n\r\n\r\n            <!-- </mat-form-field> -->\r\n        </div>\r\n\r\n        <div class=\"field-container\">\r\n            <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                <mat-label>Bet Points</mat-label>\r\n                <input matInput formControlName=\"contestPoints\" (change)=\"minPointsValidator($event)\" (change)=\"availableContestPointsValidator($event)\" type=\"number\" autocomplete=\"off\">\r\n                <mat-error *ngIf=\"form.contestPoints.errors?.required\">Bet Points is Required</mat-error>\r\n                <!-- <mat-error *ngIf=\"form.contestPoints.errors?.minLength\">minimum contestPoints must have atleast 2 digit\r\n                </mat-error>\r\n                <mat-error *ngIf=\"form.contestPoints.errors?.maxlength\">minimum contestPoints must have less than 3 digit\r\n                </mat-error> -->\r\n                <mat-error *ngIf=\"form.contestPoints.errors?.pattern\">\r\n                    Minimum Points is {{matchData.minimumPoints}}\r\n                </mat-error>\r\n                <mat-error (change)=\"minPointsValidator($event)\">\r\n                    Minimum Points is {{matchData?.minimumPoints}}\r\n                </mat-error>\r\n                <mat-error *ngIf=\"botData?.contestId\" (change)=\"availableContestPointsValidator($event)\">\r\n                    Available Points + Bet Points of This Match = {{AvailableContestPoints}}\r\n                </mat-error>\r\n                <mat-error *ngIf=\"!botData?.contestId\" (change)=\"availablePointsValidator($event)\">\r\n                    Available Points = {{userData?.availablePoints}}\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n\r\n        <div class=\"action-container\">\r\n            <button mat-raised-button *ngIf=\"checkk?.userId\" color=\"accent\" type=\"submit\">Update Bet</button>\r\n            <!-- [disabled]=\"!botForm.valid\" -->\r\n            <button mat-raised-button *ngIf=\"!checkk?.userId\" color=\"accent\" type=\"submit\"> Place Bet</button>\r\n            <!-- {{fetchBotDetails.contestPoints === ''? 'Place Bet' : 'Update Bet'}} -->\r\n            <span mat-raised-button class=\"cancel-btn\" (click)=\"closeDialogBox()\">Cancel</span>\r\n        </div>\r\n    </form>\r\n</div>\r\n\r\n<div *ngIf='isloading'>\r\n  <img src=\"{{teamLoader[selectedTeamId]}}\" alt=\"\">\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Sort } from '@angular/material/sort';\r\nimport { ChangePasswordComponent } from 'src/app/common/components/change-password/change-password.component';\r\nimport { ConfirmBoxComponent } from 'src/app/common/components/confirm-box/confirm-box.component';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { profile } from 'src/app/common/constants/links';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { UserFutureBets } from 'src/app/common/model/statistics/user-future-bets';\r\nimport { UsersWinningLosingModel } from 'src/app/common/model/statistics/users-winning-losing-points';\r\nimport { UserStats } from 'src/app/common/model/statistics/userstats';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { UserStaticticsService } from 'src/app/common/service/statistics/user-statictics.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\nimport { UpdateProfileComponent } from '../update-profile/update-profile.component';\r\n\r\n@Component({\r\n  selector: 'app-view-user-profile',\r\n  templateUrl: './view-user-profile.component.html',\r\n  styleUrls: ['./view-user-profile.component.css']\r\n})\r\nexport class ViewUserProfileComponent implements OnInit {\r\n\r\n  profile = profile;\r\n  userData!: UserModel;\r\n  userStats: UserStats[] = [];\r\n  userFutureBets:UserFutureBets[] = [];\r\n\r\n  usersWinningLosingPoints!:UsersWinningLosingModel;\r\n\r\n  showForm:boolean = false;\r\n\r\n  // newform()\r\n  // {\r\n  //   this.showForm =!this.showForm;\r\n  // }\r\n\r\n  constructor(\r\n    private userservice: UserService,\r\n      private dialog: MatDialog,\r\n      private snackbar: MatSnackBar,\r\n      private userstats:UserStaticticsService,\r\n      public loginStateService: LoginstateService\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n\r\n    // this.userFutureBets = await this.getUsersFutureContest();\r\n    // console.log(this.userFutureBets);\r\n\r\n    // this.userStats = await this.getUserStats();\r\n    // console.log(this.userStats);\r\n\r\n    this.userData = await this.getUsers();\r\n    // console.log(this.userData);\r\n\r\n    this.usersWinningLosingPoints = await this.getUserWinningAndLosingPoints();\r\n    // console.log(this.usersWinningLosingPoints);\r\n  }\r\n\r\n  findsum(data:any){\r\n    data.forEach((element:any) => {\r\n      let obj = this.userFutureBets.find(o => o.userId == element.userId);\r\n      if(obj)\r\n      element.availablePoints += obj.contestPoints;\r\n    });\r\n  }\r\n\r\n  // GET USERS FUTURE BETS AND CURRENT POINTS\r\n\r\n  // a= this.userStats.find(data => data.userId == this.userId)?.availablePoints;\r\n\r\n  // const index = this.userStats.findIndex(data => data.userId == this.userId);\r\n  // this.userStats[index].availablePoints;\r\n\r\n  async RemoveProfilePicture(): Promise<any> {\r\n    if (this.dialog.openDialogs.length == 0) {\r\n      const dialogRef1 = this.dialog.open(ConfirmBoxComponent, {\r\n        panelClass: 'no-padding-dialog',\r\n        data: 'Are you sure you want to remove?'\r\n      });\r\n      const closeResp = await dialogRef1.afterClosed().toPromise();\r\n      if (closeResp) {\r\n        let panelClass = 'green';\r\n        let snackbarMsg = '';\r\n        let snackbarRef = null;\r\n        const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n        // let userModel: UserModel[] = [];\r\n        let msg;\r\n        let resp = null;\r\n        try {\r\n          resp = await this.userservice.deleteProfilePic(this.userData.userId);\r\n          msg = resp.body.message;\r\n          if (msg) {\r\n            snackbarMsg = msg;\r\n            dialogRef.close();\r\n            location.reload();\r\n          } else {\r\n            snackbarMsg = NO_RESP;\r\n            panelClass = 'red';\r\n          }\r\n        } catch (ex) {\r\n          snackbarMsg = getErrorMessage(ex);\r\n          panelClass = 'red';\r\n        } finally {\r\n          dialogRef.close();\r\n        }\r\n        if (snackbarMsg) {\r\n          snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n            getSnackbarProperties(snackbarMsg, panelClass));\r\n        }\r\n        return [];\r\n      }\r\n    }\r\n  }\r\n\r\n  async getUserStats(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userModel: UserStats[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userstats.getUserStatsById(this.userId);\r\n      userModel = resp.body;\r\n      this.findsum(userModel);\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // USERS FUTURE Bet\r\n\r\n  async getUsersFutureContest(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userFutureBets: UserFutureBets[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userstats.getUserFutureBetsById(this.userId);\r\n      userFutureBets = resp.body;\r\n      if (userFutureBets) {\r\n        dialogRef.close();\r\n        return userFutureBets;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n\r\n  loginState = this.loginStateService.getLoginState();\r\n  userId = this.loginState?.userId;\r\n\r\n  async getUsers(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let userModel: UserModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userservice.getUserById(this.userId);\r\n      userModel = resp.body;\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // GET USER STATISTICS\r\n\r\n  async getUserWinningAndLosingPoints(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let usersWinningLosingPoints: UsersWinningLosingModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userstats.getUserWinningLosingPoint(this.userId);\r\n      usersWinningLosingPoints = resp.body;\r\n      if (usersWinningLosingPoints) {\r\n        dialogRef.close();\r\n        return usersWinningLosingPoints;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  reload() {\r\n    location.reload();\r\n  }\r\n\r\n  openUpdateUserProfileForm(data: UserModel) {\r\n    const dialogRef = this.dialog.open(UpdateProfileComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true, data });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        this.reload();\r\n\r\n        // this.userData.firstName = data.firstName;\r\n        // this.userData.lastName = data.lastName;\r\n        // this.userData.email = data.email;\r\n        // this.userData.mobileNumber = data.mobileNumber;\r\n        // if (this.userData.profilePicture !== data.profilePicture) {\r\n        //   this.userData.profilePicture = data.profilePicture;\r\n\r\n        // }else{\r\n\r\n        // }\r\n\r\n      }\r\n    });\r\n  }\r\n\r\n  openUpdateUserPasswordForm() {\r\n    const dialogRef = this.dialog.open(ChangePasswordComponent,\r\n      { panelClass: 'no-padding-dialog', disableClose: true });\r\n    dialogRef.afterClosed().toPromise().then(data => {\r\n      if (data) {\r\n        this.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n","<body [style.background-image]=\"'url(' + profile + ')'\">\r\n    <div class=\"wrapper\">\r\n        <div class=\"left\">\r\n            <img src=\"{{userData?.profilePicture}}\" loading=\"lazy\" onerror=\"this.src='assets/icons/icon-128x128.png'\" width=\"100\">\r\n            <div><i class=\"fas fa-trash-alt remove\" title=\"Remove Profile Picture\" (click)=\"RemoveProfilePicture()\"></i></div>\r\n            <h4> {{userData?.firstName | uppercase}} {{userData?.lastName | uppercase}} </h4>\r\n            <p> @{{userData?.username}}</p>\r\n        </div>\r\n        <div class=\"right\">\r\n            <div class=\"info\">\r\n                <h3>information</h3>\r\n                <div class=\"info_data\">\r\n                    <div class=\"data\">\r\n                        <!-- <h4>Email</h4> -->\r\n                        <mat-icon class=\"emicon\">email</mat-icon>\r\n                        <p> {{userData?.email}} </p>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <!-- <h4>Phone</h4> -->\r\n                        <mat-icon class=\"emicon\">phone_iphone</mat-icon>\r\n                        <p>{{userData?.mobileNumber}}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"projects\">\r\n                <h3>Bet history</h3>\r\n                <div class=\"projects_data\">\r\n                    <div class=\"data\">\r\n                        <h4>Available Points</h4>\r\n                        <!-- <p class=\"blue\" *ngFor=\"let userstats of userStats\"> {{userstats?.availablePoints}} </p> -->\r\n                        <p class=\"blue\"> {{userData?.availablePoints}} </p>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <h4>Winning Points</h4>\r\n                        <p class=\"green\"> {{usersWinningLosingPoints?.winningPoints}} </p>\r\n                        <p class=\"green p_lower\"> ({{usersWinningLosingPoints?.numberOfWinningMatches}} Matches) </p>\r\n                    </div>\r\n                    <div class=\"data\">\r\n                        <h4>Loosing Points</h4>\r\n                        <p class=\"red\"> {{usersWinningLosingPoints?.losingPoints}} </p>\r\n                        <p class=\"red p_lower\"> ({{usersWinningLosingPoints?.numberOfLosingMatches}} Matches) </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class=\"social_media\">\r\n                <ul>\r\n                    <!-- <li href=\"\"><i class=\"fab fa-facebook-f\"></i></li>\r\n                    <li href=\"\"><i class=\"fab fa-twitter\"></i></li>\r\n                    <li href=\"\"><i class=\"fab fa-instagram-square\"></i></li> -->\r\n                    <!-- <li>\r\n                        <mat-icon>manage_accounts</mat-icon>\r\n                    </li> -->\r\n                    <button class=\"matbtn\" mat-fab color=\"accent\" (click)=\"openUpdateUserProfileForm(userData)\" matTooltip=\"Update Profile\">\r\n                        <mat-icon>manage_accounts</mat-icon>\r\n                    </button>\r\n\r\n                    <button class=\"matbtn\" mat-fab color=\"accent\" (click)=\"openUpdateUserPasswordForm()\" matTooltip=\"Change Password\">\r\n                        <mat-icon>password</mat-icon>\r\n                    </button>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n","export class BotModel{\r\n    contestId!: number;\r\n    userId!:number;\r\n    matchId!:number;\r\n    teamId!:number;\r\n    teamShortName!:string;\r\n    firstName!:string;\r\n    lastName!:string;\r\n    username!:string;\r\n    profilePicture!:any;\r\n    contestPoints!:number;\r\n    winningPoints!:number;\r\n}","import { ViewChild } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { stringToColor } from 'src/app/common/constants/utils';\r\nimport { BotModel } from 'src/app/common/model/bot/BotModel';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { BotService } from 'src/app/common/service/bot/bot.service';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\n\r\n@Component({\r\n  selector: 'app-view-live-matches',\r\n  templateUrl: './view-live-matches.component.html',\r\n  styleUrls: ['./view-live-matches.component.css']\r\n})\r\nexport class ViewLiveMatchesComponent implements OnInit {\r\n\r\n  teamColor:any = {\r\n    1: \"#ff0\", //csk\r\n    2: \"#2561ae\", //dc\r\n    3: \"#00416a\", //gt\r\n    4: \"#7300ab\", //kkr\r\n    5: \"#ace5ee\", //lsg\r\n    6: \"#004f91\", //mi\r\n    7: \"#ed1f27\", //pk\r\n    8: \"RGB(37 ,74 ,165)\", //rr\r\n    9: \"#d5152c\", //rcb\r\n    10: \"#f7a721\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n  teamFontColor:any = {\r\n    1: \"black\", //csk\r\n    2: \"#fff\", //dc\r\n    3: \"#fff\", //gt\r\n    4: \"#fff\", //kkr\r\n    5: \"black\", //lsg\r\n    6: \"#fff\", //mi\r\n    7: \"#fff\", //pk\r\n    8: \"white\", //rr\r\n    9: \"#fff\", //rcb\r\n    10: \"black\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'black', //\r\n    t2: 'black' //\r\n  }\r\n\r\n  borderTop:any = {\r\n    1: \"5px solid #ef9b0f\", //csk\r\n    2: \"5px solid #4B9CD3\", //dc\r\n    3: \"5px solid #1d2951\", //gt\r\n    4: \"5px solid #430064\", //kkr\r\n    5: \"5px solid #9bc4e2\", //lsg\r\n    6: \"5px solid blue\", //mi\r\n    7: \"5px solid #af002a\", //pk\r\n    8: \"5px solid #1877F2\", //rr\r\n    9: \"5px solid #800000\", //rcb\r\n    10: \"5px solid #F05E23\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n\r\n  fetchBotDetails: BotModel[] = [];\r\n  calc!:MatchModel;\r\n  displayedColumns: string[] = [ 'username', 'teamshortname', 'contestPoints'];\r\n\r\n  dataSource: MatTableDataSource<BotModel> = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  matchId!:number;\r\n  matchData!: MatchModel;\r\n\r\n  constructor(\r\n    private route:ActivatedRoute,\r\n    private botservice: BotService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private matchservice:MatchesService,\r\n    private loginStateService: LoginstateService,\r\n  ) { }\r\n\r\n  loginState = this.loginStateService.getLoginState();\r\n  un = this.loginState.username;\r\n\r\n  async ngOnInit(){\r\n    this.route.params.subscribe(data=>{\r\n      this.matchId=data.id;\r\n    });\r\n\r\n    this.calc = await this.getAllPlayerBetsByMatchIdForCalculation(this.matchId);\r\n\r\n    this.fetchBotDetails = await this.getAllPlayerBetsByMatchId(this.matchId);\r\n    // console.log(this.fetchBotDetails);\r\n\r\n    this.dataSource.data = this.fetchBotDetails;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    this.matchData = await this.getMatchById(this.matchId);\r\n    // console.log(this.matchData);\r\n  }\r\n\r\n  stringToColorFunction(color: any){\r\n    return stringToColor(color);\r\n  }\r\n\r\n  Team1TotalUsers(inputs1:any,inputs2:any) {\r\n    let counter = 0;\r\n    for (const input1 of inputs1) {\r\n      if (input1.teamShortName === inputs2?.team1Short) counter += 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  Team2TotalUsers(inputs1:any,inputs2:any) {\r\n    let counter = 0;\r\n    for (const input1 of inputs1) {\r\n      if (input1.teamShortName === inputs2?.team2Short) counter += 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  applyFilter(event:Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  async getMatchById(matchId:number): Promise<any>\r\n  {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.viewMatchById(matchId);\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // GET ALL PLAYER BETS ON TEAM\r\n\r\n  async getAllPlayerBetsByMatchId(matchId:number): Promise<any>\r\n  {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let botModel: BotModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.botservice.viewAllContestByMatchId(matchId);\r\n      botModel = resp.body;\r\n      this.findsum(botModel);\r\n      if (botModel) {\r\n        dialogRef.close();\r\n        return botModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // THIS IS FOR CALCULATION PURPOSE ONLY\r\n\r\n  team1points=0;\r\n  team2points=0;\r\n\r\n  findsum(data:any){\r\n    data.forEach((element:any) => {\r\n      if (element.teamShortName == this.calc.team1Short) {\r\n        this.team1points+=element.contestPoints;\r\n      }else if(element.teamShortName == this.calc.team2Short)\r\n        this.team2points+=element.contestPoints;\r\n    });\r\n\r\n  }\r\n\r\n    async getAllPlayerBetsByMatchIdForCalculation(matchId:number): Promise<any>\r\n    {\r\n      let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.viewMatchById(matchId);\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n    return [];\r\n    }\r\n\r\n    getColorForTeam1(){\r\n      return this.matchData && this.matchData.team1Id ? this.teamColor[this.matchData.team1Id] : this.teamColor.t1;\r\n    }\r\n\r\n    getColorForTeam2(){\r\n      return this.matchData && this.matchData.team2Id ? this.teamColor[this.matchData.team2Id] : this.teamColor.t2;\r\n    }\r\n\r\n    getFontColorForTeam1(){\r\n      return this.matchData && this.matchData.team1Id ? this.teamFontColor[this.matchData.team1Id] : this.teamFontColor.t1;\r\n    }\r\n\r\n    getFontColorForTeam2(){\r\n      return this.matchData && this.matchData.team2Id ? this.teamFontColor[this.matchData.team2Id] : this.teamFontColor.t2;\r\n    }\r\n\r\n    getBorderColorForTeam1(){\r\n      return this.matchData && this.matchData.team1Id ? this.borderTop[this.matchData.team1Id] : this.borderTop.t1;\r\n    }\r\n\r\n    getBorderColorForTeam2(){\r\n      return this.matchData && this.matchData.team2Id ? this.borderTop[this.matchData.team2Id] : this.borderTop.t2;\r\n    }\r\n}\r\n","<body>\r\n    <div class=\"card\">\r\n\r\n        <div class=\"left\" [style.border-top]=\"getBorderColorForTeam1()\" [style.background-color]=\"getColorForTeam1()\"></div>\r\n        <div class=\"right\" [style.border-top]=\"getBorderColorForTeam2()\" [style.background-color]=\"getColorForTeam2()\"></div>\r\n\r\n        <!-- <h2>Live Match No. {{matchData?.matchId}}</h2> -->\r\n        <h2>{{matchData?.team1Short}} vs {{matchData?.team2Short}}</h2>\r\n        <div class=\"match-details\">\r\n            <div class=\"team1\">\r\n                <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{matchData?.team1Logo}}\" />\r\n                <h3 class=\"team-name\" [style.color]=\"getFontColorForTeam1()\">{{matchData?.team1}} </h3>\r\n                <h3 class=\"team-points\" [style.color]=\"getFontColorForTeam1()\"> ({{Team1TotalUsers(fetchBotDetails,matchData)}} bets) {{team1points}}</h3>\r\n            </div>\r\n            <div class=\"details\">\r\n                <!-- <h3 class=\"date\">{{matchData?.startDatetime | date: 'medium': 'UTC'}} IST </h3> -->\r\n                <h3 class=\"date\">{{matchData?.startDatetime | date: 'medium'}} IST </h3>\r\n                <h1 class=\"versus\">VS</h1>\r\n                <h4 class=\"venue\">{{matchData?.venue}} </h4>\r\n            </div>\r\n            <div class=\"team2\">\r\n                <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{matchData?.team2Logo}}\" />\r\n                <h3 class=\"team-name\" [style.color]=\"getFontColorForTeam2()\">{{matchData?.team2}} </h3>\r\n                <h3 class=\"team-points\" [style.color]=\"getFontColorForTeam2()\">{{team2points}} ( {{Team2TotalUsers(fetchBotDetails,matchData)}} bets)</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <!-- VIEW NAMES OF PLAYERS WHO PLACED BET -->\r\n\r\n    <div class=\"parent-container container-fluid\">\r\n        <div class=\"mat-elevation-z20 container main-container\">\r\n            <div class=\"conatiner-header\"> Bet Details </div>\r\n            <div class=\"inner-conatiner\">\r\n                <div class=\"inner-container-actions\">\r\n                    <mat-form-field appearance=\"outline\" color=\"accent\">\r\n                        <mat-label>Search</mat-label>\r\n                        <input matInput placeholder=\"Search Players\" type=\"search\" style=\"color:white\" (keyup)=\"applyFilter($event)\">\r\n                        <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n                    </mat-form-field>\r\n                </div>\r\n                <table mat-table class=\"mat-elevation-z21\" [dataSource]=\"dataSource\" matSort>\r\n\r\n                    <ng-container matColumnDef=\"username\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Username </th>\r\n                        <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\">\r\n                          <div class='inside-td'>\r\n                            <div>\r\n                              <span\r\n                                [ngStyle]=\"{'padding':'10px', 'background-color':stringToColorFunction(element.firstName+element.lastName), 'border-radius':'50%'}\"\r\n                                *ngIf='!element.profilePicture'\r\n                                loading=\"lazy\"\r\n                              >{{\r\n                                element.firstName.substr(0, 1).toUpperCase() +\r\n                                element.lastName.substr(0, 1).toUpperCase()\r\n                              }}</span>\r\n                              <img\r\n                                *ngIf='element.profilePicture'\r\n                                src=\"{{ element.profilePicture }}\"\r\n                                class=\"profile-picture thumbnail-image\"\r\n                                loading=\"lazy\"\r\n                                alt=\"{{\r\n                                  element.firstName.substr(0, 1).toUpperCase() +\r\n                                    element.lastName.substr(0, 1).toUpperCase()\r\n                                }}\"\r\n                              />\r\n                            </div>\r\n                            <div [ngStyle]=\"{'margin-left': '5px'}\">\r\n                              {{ element.firstName + \" \" + element.lastName }}\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"teamshortname\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Bet Team </th>\r\n                        <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"> {{element.teamShortName}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"contestPoints\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Bet Points </th>\r\n                        <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"> {{element.contestPoints}} </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row [ngClass]=\"{'evenrow': index%2 == 1}\" *matRowDef=\"let row; columns: displayedColumns; let index=index;let element\"\r\n                    [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"></tr>\r\n                </table>\r\n                <mat-paginator color=\"accent\" [pageSizeOptions]=\"[10,20]\" showFirstLastButtons></mat-paginator>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport {\r\n  getErrorMessage,\r\n  NO_RESP,\r\n} from 'src/app/common/constants/error-message';\r\nimport { place_bet_music } from 'src/app/common/constants/links';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { stringToColor } from 'src/app/common/constants/utils';\r\nimport { BotModel } from 'src/app/common/model/bot/BotModel';\r\nimport { CheckContestByUserAndMatchId } from 'src/app/common/model/bot/contestbyuserandmatchid';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { BotService } from 'src/app/common/service/bot/bot.service';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\nimport { InsertUpdateContestComponent } from './insert-update-contest/insert-update-contest.component';\r\n\r\n@Component({\r\n  selector: 'app-betting-page',\r\n  templateUrl: './betting-page.component.html',\r\n  styleUrls: ['./betting-page.component.css'],\r\n})\r\nexport class BettingPageComponent implements OnInit {\r\n\r\n  teamColor:any = {\r\n    1: \"#ff0\", //csk\r\n    2: \"#2561ae\", //dc\r\n    3: \"#00416a\", //gt\r\n    4: \"#7300ab\", //kkr\r\n    5: \"#ace5ee\", //lsg\r\n    6: \"#004f91\", //mi\r\n    7: \"#ed1f27\", //pk\r\n    8: \"RGB(37 ,74 ,165)\", //rr\r\n    9: \"#d5152c\", //rcb\r\n    10: \"#f7a721\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n  teamFontColor:any = {\r\n    1: \"black\", //csk\r\n    2: \"#fff\", //dc\r\n    3: \"#fff\", //gt\r\n    4: \"#fff\", //kkr\r\n    5: \"black\", //lsg\r\n    6: \"#fff\", //mi\r\n    7: \"#fff\", //pk\r\n    8: \"white\", //rr\r\n    9: \"#fff\", //rcb\r\n    10: \"black\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'black', //\r\n    t2: 'black' //\r\n  }\r\n\r\n  borderTop:any = {\r\n    1: \"5px solid #ef9b0f\", //csk\r\n    2: \"5px solid #4B9CD3\", //dc\r\n    3: \"5px solid #1d2951\", //gt\r\n    4: \"5px solid #430064\", //kkr\r\n    5: \"5px solid #9bc4e2\", //lsg\r\n    6: \"5px solid blue\", //mi\r\n    7: \"5px solid #af002a\", //pk\r\n    8: \"5px solid #1877F2\", //rr\r\n    9: \"5px solid #800000\", //rcb\r\n    10: \"5px solid #F05E23\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n  teamShortName : any = {\r\n    1: \"CSK\",\r\n    2: \"DC\",\r\n    3: \"GT\",\r\n    4: \"KKR\",\r\n    5: \"LSG\",\r\n    6: \"MI\",\r\n    7: \"PBKS\",\r\n    8: \"RR\",\r\n    9: \"RCB\",\r\n    10: \"SRH\"\r\n  }\r\n\r\n  botData: BotModel[] = [];\r\n  calc!: MatchModel;\r\n\r\n  userData!: UserModel;\r\n  checkk!: CheckContestByUserAndMatchId;\r\n  oldPoints:any;\r\n\r\n  displayedColumns: string[] = ['username', 'teamshortname', 'contestPoints'];\r\n\r\n  dataSource: MatTableDataSource<BotModel> = new MatTableDataSource();\r\n\r\n  @ViewChild(MatPaginator, { static: true }) paginator!: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort!: MatSort;\r\n\r\n  matchId!: number;\r\n  matchData!: MatchModel;\r\n  team1Total: any;\r\n  team2Total: any;\r\n  selectedTeam: any;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private route: ActivatedRoute,\r\n    private botservice: BotService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private matchservice: MatchesService,\r\n    private userservice: UserService,\r\n    private loginStateService: LoginstateService,\r\n    private router: Router\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    this.route.params.subscribe((data) => {\r\n      this.matchId = data.id;\r\n    });\r\n    this.calc = await this.getAllPlayerBetsByMatchIdForCalculation(\r\n      this.matchId\r\n    );\r\n\r\n    this.botData = await this.getAllPlayerBetsByMatchId(this.matchId);\r\n    // console.log(this.botData);\r\n\r\n    this.dataSource.data = this.botData;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n\r\n    this.matchData = await this.getMatchById(this.matchId);\r\n    // console.log(this.matchData);\r\n\r\n    this.checkMatchDate(this.matchData.startDatetime);\r\n\r\n    this.checkk = await this.getPlayersBetByUserAndMatchId(\r\n      this.loginState.userId,\r\n      this.matchId\r\n    );\r\n    // console.log(this.checkk);\r\n    this.selectedTeam = this.matchData.team1Id === this.checkk.teamId ? this.matchData.team1 : this.matchData.team2Id === this.checkk.teamId? this.matchData.team2 : 'N/A' ;\r\n\r\n    this.userData = await this.getUsersById();\r\n    // console.log(this.userData);\r\n\r\n    this.team1Total = this.Team1TotalUsers(this.botData, this.matchData);\r\n    this.team2Total = this.Team2TotalUsers(this.botData, this.matchData);\r\n  }\r\n\r\n  stringToColorFunction(color: any){\r\n    return stringToColor(color);\r\n  }\r\n\r\n\r\n  checkMatchDate(dateSent: Date){\r\n    // this.location.replaceState('');\r\n    let currentDate = new Date();\r\n    dateSent = new Date(dateSent);\r\n    var diffMs = (dateSent.getTime() - currentDate.getTime()); // milliseconds between now & Christmas\r\n    var diffDays = Math.floor(diffMs / 86400000); // days\r\n    // console.log(diffDays);\r\n    const days = diffDays;\r\n    // return  this.days;\r\n\r\n    if (days >= 5 ) {\r\n      this.router.navigate([this.loginState.role+`/match-list`]);\r\n      let panelClass = 'red';\r\n      let snackbarMsg = 'Match Out of Range ;-)';\r\n      let snackbarRef = null;\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }else if (days < 0) {\r\n      this.router.navigate([this.loginState.role+`/match-list`]);\r\n      let panelClass = 'red';\r\n      let snackbarMsg = 'Match Out of Range ;-)';\r\n      let snackbarRef = null;\r\n      snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n\r\n  }\r\n\r\n  Team1TotalUsers(inputs1: any, inputs2: any) {\r\n    let counter = 0;\r\n    for (const input1 of inputs1) {\r\n      if (input1.teamShortName === inputs2?.team1Short) counter += 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  Team2TotalUsers(inputs1: any, inputs2: any) {\r\n    let counter = 0;\r\n    for (const input1 of inputs1) {\r\n      if (input1.teamShortName === inputs2?.team2Short) counter += 1;\r\n    }\r\n    return counter;\r\n  }\r\n\r\n  async getUsersById(): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    let userModel: UserModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.userservice.getUserById(this.loginState.userId);\r\n      userModel = resp.body;\r\n      if (userModel) {\r\n        dialogRef.close();\r\n        return userModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(\r\n        SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass)\r\n      );\r\n    }\r\n    return [];\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  }\r\n\r\n  async getMatchById(matchId: number): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.viewMatchById(matchId);\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(\r\n        SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass)\r\n      );\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // GET ALL PLAYER BETS ON TEAM\r\n\r\n  async getAllPlayerBetsByMatchId(matchId: number): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    let botModel: BotModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.botservice.viewAllContestByMatchId(matchId);\r\n      botModel = resp.body;\r\n      this.findsum(botModel);\r\n      if (botModel) {\r\n        dialogRef.close();\r\n        return botModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(\r\n        SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass)\r\n      );\r\n    }\r\n    return [];\r\n  }\r\n\r\n  // CHECK IF PLAYER HAS PLACED BET\r\n\r\n  async getPlayersBetByUserAndMatchId(\r\n    userId: number,\r\n    matchId: number\r\n  ): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    let botModel: BotModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.botservice.viewAllContestByUserAndMatchId(\r\n        userId,\r\n        matchId\r\n      );\r\n      botModel = resp.body;\r\n      if (botModel) {\r\n        dialogRef.close();\r\n        return botModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'yellow';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(\r\n        SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass)\r\n      );\r\n    }\r\n    return [];\r\n  }\r\n\r\n  //  ADD BETS AND UPDATE BETS\r\n\r\n  async playAudio() {\r\n    let audio = new Audio();\r\n    audio.src = '';\r\n    audio.load();\r\n    audio.play();\r\n  }\r\n\r\n  loginState = this.loginStateService.getLoginState();\r\n  un = this.loginState?.username;\r\n\r\n  openInsertDialog() {\r\n    const dialogRef = this.dialog.open(InsertUpdateContestComponent, {\r\n      panelClass: 'no-padding-dialog',\r\n      disableClose: true,\r\n      data: { matchId: this.matchId },\r\n    });\r\n    dialogRef\r\n      .afterClosed()\r\n      .toPromise()\r\n      .then((data) => {\r\n        if (data) {\r\n          // this.botData.push(data);\r\n          // this.dataSource.data = this.botData;\r\n\r\n          this.playAudio();\r\n          this.botData.push(data);\r\n          let volume = this.botData.map((d) =>\r\n            d.contestId == data.contestId ? {\r\n              ...d,\r\n              contestPoints: data.contestPoints,\r\n              firstName: this.userData.firstName,\r\n              lastName: this.userData.lastName,\r\n              teamShortName: this.teamShortName[data.teamId],\r\n              username: this.userData.username\r\n            } : d\r\n          );\r\n\r\n          this.userData.availablePoints -= data.contestPoints;\r\n          this.oldPoints = data.contestPoints;\r\n          this.dataSource.data = volume;\r\n          this.botData = volume;\r\n          this.checkk = data;\r\n          this.team1points = 0;\r\n          this.team2points = 0;\r\n          this.findsum(volume);\r\n          this.team1Total = this.Team1TotalUsers(volume, this.matchData);\r\n          this.team2Total = this.Team2TotalUsers(volume, this.matchData);\r\n          this.selectedTeam = this.matchData.team1Id === this.checkk.teamId ? this.matchData.team1 : this.matchData.team2Id === this.checkk.teamId? this.matchData.team2 : 'N/A' ;\r\n\r\n          // location.reload();\r\n        }\r\n      });\r\n  }\r\n\r\n  openUpdateDialog(data: any) {\r\n    const dialogRef = this.dialog.open(InsertUpdateContestComponent, {\r\n      panelClass: 'no-padding-dialog',\r\n      disableClose: true,\r\n      data,\r\n    });\r\n    dialogRef\r\n      .afterClosed()\r\n      .toPromise()\r\n      .then((data) => {\r\n        if (data) {\r\n          // this.botData.push(data);\r\n          // this.dataSource.data = data;\r\n\r\n          // this.dataSource.data.find((payload) => {\r\n          //   if (payload.contestId == data.contestId) {\r\n          //     let indexNo = this.botData.findIndex(q => q.contestId == data.contestId);\r\n          //     this.botData.splice(indexNo,1);\r\n          //     this.botData.push(data);\r\n          //     this.dataSource.data = this.botData;\r\n          //   }\r\n          // });\r\n\r\n          this.playAudio();\r\n          let tempBotData = this.botData;\r\n          let indexOfTempBotData = tempBotData.findIndex(i=> i.contestId == data.contestId);\r\n\r\n          let volume = this.botData.map((d) =>\r\n            d.contestId == data.contestId ? {\r\n              ...d,\r\n              contestPoints: data.contestPoints,\r\n              firstName: tempBotData[indexOfTempBotData].firstName,\r\n              lastName: tempBotData[indexOfTempBotData].lastName,\r\n              teamShortName: this.teamShortName[data.teamId],\r\n            } : d\r\n          );\r\n\r\n          if (this.oldPoints == null) {\r\n            this.userData.availablePoints = this.userData.availablePoints + this.checkk.contestPoints - data.contestPoints;\r\n          }else if(this.oldPoints != null){\r\n          this.userData.availablePoints = this.userData.availablePoints + this.oldPoints - data.contestPoints;\r\n          }\r\n          this.oldPoints = data.contestPoints;\r\n          this.dataSource.data = volume;\r\n          this.botData = volume;\r\n          this.team1points = 0;\r\n          this.team2points = 0;\r\n          this.findsum(volume);\r\n          this.team1Total = this.Team1TotalUsers(volume, this.matchData);\r\n          this.team2Total = this.Team2TotalUsers(volume, this.matchData);\r\n          this.checkk = data;\r\n          this.selectedTeam = this.matchData.team1Id === this.checkk.teamId ? this.matchData.team1 : this.matchData.team2Id === this.checkk.teamId? this.matchData.team2 : 'N/A' ;\r\n          // location.reload();\r\n        }\r\n      });\r\n  }\r\n\r\n  // THIS IS FOR CALCULATION PURPOSE ONLY\r\n\r\n  team1points = 0;\r\n  team2points = 0;\r\n\r\n  findsum(data: any) {\r\n    data.forEach((element: any) => {\r\n      if (element.teamShortName == this.calc.team1Short) {\r\n        this.team1points += element.contestPoints;\r\n      } else if (element.teamShortName == this.calc.team2Short)\r\n        this.team2points += element.contestPoints;\r\n    });\r\n  }\r\n\r\n  async getAllPlayerBetsByMatchIdForCalculation(matchId: number): Promise<any> {\r\n    let panelClass = 'green';\r\n    let snackbarMsg = '';\r\n    let snackbarRef = null;\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    let matchModel: MatchModel[] = [];\r\n    let resp = null;\r\n    try {\r\n      resp = await this.matchservice.viewMatchById(matchId);\r\n      matchModel = resp.body;\r\n      if (matchModel) {\r\n        dialogRef.close();\r\n        return matchModel;\r\n      } else {\r\n        snackbarMsg = NO_RESP;\r\n        panelClass = 'red';\r\n      }\r\n    } catch (ex) {\r\n      snackbarMsg = getErrorMessage(ex);\r\n      panelClass = 'red';\r\n    } finally {\r\n      dialogRef.close();\r\n    }\r\n    if (snackbarMsg) {\r\n      snackbarRef = this.snackbar.openFromComponent(\r\n        SnackbarComponent,\r\n        getSnackbarProperties(snackbarMsg, panelClass)\r\n      );\r\n    }\r\n    return [];\r\n  }\r\n\r\n  getColorForTeam1() {\r\n    return this.matchData && this.matchData.team1Id\r\n      ? this.teamColor[this.matchData.team1Id]\r\n      : this.teamColor.t1;\r\n  }\r\n\r\n  getColorForTeam2() {\r\n    return this.matchData && this.matchData.team2Id\r\n      ? this.teamColor[this.matchData.team2Id]\r\n      : this.teamColor.t2;\r\n  }\r\n\r\n  getFontColorForTeam1() {\r\n    return this.matchData && this.matchData.team1Id\r\n      ? this.teamFontColor[this.matchData.team1Id]\r\n      : this.teamFontColor.t1;\r\n  }\r\n\r\n  getFontColorForTeam2() {\r\n    return this.matchData && this.matchData.team2Id\r\n      ? this.teamFontColor[this.matchData.team2Id]\r\n      : this.teamFontColor.t2;\r\n  }\r\n\r\n  getBorderColorForTeam1() {\r\n    return this.matchData && this.matchData.team1Id\r\n      ? this.borderTop[this.matchData.team1Id]\r\n      : this.borderTop.t1;\r\n  }\r\n\r\n  getBorderColorForTeam2() {\r\n    return this.matchData && this.matchData.team2Id\r\n      ? this.borderTop[this.matchData.team2Id]\r\n      : this.borderTop.t2;\r\n  }\r\n}\r\n","<body>\r\n    <!-- [style.background-image]=\"'url(' + placebets + ')'\" -->\r\n    <div class=\"card\">\r\n        <div class=\"left\" [style.border-top]=\"getBorderColorForTeam1()\" [style.background-color]=\"getColorForTeam1()\">\r\n        </div>\r\n        <div class=\"right\" [style.border-top]=\"getBorderColorForTeam2()\" [style.background-color]=\"getColorForTeam2()\">\r\n        </div>\r\n        <!-- <h2>Upcoming Match No. {{matchData?.matchId}}</h2> -->\r\n        <h2>{{matchData?.name}}</h2>\r\n        <div class=\"match-details\">\r\n            <div class=\"team1\">\r\n                <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{matchData?.team1Logo}}\" />\r\n                <h3 class=\"team-name\" [style.color]=\"getFontColorForTeam1()\">{{matchData?.team1}} </h3>\r\n                <h3 class=\"team-points\" [style.color]=\"getFontColorForTeam1()\">{{team1points}}</h3>\r\n            </div>\r\n            <div class=\"details\">\r\n                <!-- <h3 class=\"date\">{{matchData?.startDatetime | date: 'medium': 'UTC'}} IST </h3> -->\r\n                <h3 class=\"date\">{{matchData?.startDatetime | date: 'medium'}} IST </h3>\r\n                <h1 class=\"versus\">VS</h1>\r\n                <h4 class=\"venue\">{{matchData?.venue}} </h4>\r\n            </div>\r\n            <div class=\"team2\">\r\n                <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{matchData?.team2Logo}}\" />\r\n                <h3 class=\"team-name\" [style.color]=\"getFontColorForTeam2()\">{{matchData?.team2}} </h3>\r\n                <h3 class=\"team-points\" [style.color]=\"getFontColorForTeam2()\">{{team2points}}</h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <hr>\r\n\r\n    <div class=\"middle__div\">\r\n        <div class=\"left__div\">\r\n            <mat-icon class=\"trend__up\" *ngIf=\"team1Total > team2Total\">trending_up</mat-icon>\r\n            <mat-icon class=\"trend__down\" *ngIf=\"team1Total < team2Total\">trending_down</mat-icon>\r\n            <!-- <i class=\"fas fa-long-arrow-alt-up up_arrow\"></i> -->\r\n            <i class=\"fas fa-users\"></i> {{ team1Total }}\r\n        </div>\r\n        <div class=\"middle\">\r\n            <h2 class=\"points\">Available Points : {{userData?.availablePoints}}</h2>\r\n        </div>\r\n        <div class=\"right__div\">\r\n            <mat-icon class=\"trend__up\" *ngIf=\"team2Total > team1Total\">trending_up</mat-icon>\r\n            <mat-icon class=\"trend__down\" *ngIf=\"team2Total < team1Total\">trending_down</mat-icon>\r\n            <!-- <i class=\"fas fa-long-arrow-alt-up up_arrow\"></i> -->\r\n            <i class=\"fas fa-users\"></i> {{ team2Total }}\r\n        </div>\r\n    </div>\r\n\r\n    <div class='teamData'>\r\n      <div class='selectedTeam'>\r\n        <span>Selected Team : {{selectedTeam}} </span>\r\n      </div>\r\n      <div class='selectedTeam'>\r\n        <span>Bet Points : {{checkk?.contestPoints || 'N/A'}} </span>\r\n      </div>\r\n    </div>\r\n\r\n    <!-- PLACE BET ON 1 OF 2 TEAM -->\r\n\r\n    <button mat-raised-button *ngIf=\"!checkk?.userId\" matRipple color=\"accent\" (click)=\"openInsertDialog()\"> Place\r\n        Bet</button>\r\n    <button mat-raised-button *ngIf=\"checkk?.userId\" color=\"accent\" (click)=\"openUpdateDialog(checkk)\">Update\r\n        Bet</button>\r\n    <!-- [disabled]=\"!botForm.valid\" -->\r\n\r\n\r\n    <!-- <hr> -->\r\n\r\n    <!-- VIEW NAMES OF PLAYERS WHO PLACED BET -->\r\n\r\n    <div class=\"parent-container container-fluid\">\r\n        <div class=\"mat-elevation-z20 container main-container\">\r\n            <div class=\"conatiner-header\"> Bet Details </div>\r\n            <div class=\"inner-conatiner\">\r\n                <div class=\"inner-container-actions\">\r\n                    <mat-form-field appearance=\"outline\" color=\"accent\">\r\n                        <mat-label>Search</mat-label>\r\n                        <input matInput placeholder=\"Search Players\" type=\"search\" style=\"color:white\"\r\n                            (keyup)=\"applyFilter($event)\">\r\n                        <mat-icon color=\"accent\" matSuffix>search</mat-icon>\r\n                    </mat-form-field>\r\n                </div>\r\n                <table mat-table class=\"mat-elevation-z21\" [dataSource]=\"dataSource\" matSort>\r\n\r\n                    <ng-container matColumnDef=\"username\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> User </th>\r\n                        <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\" >\r\n                          <div class='inside-td'>\r\n                            <div>\r\n                              <span\r\n                                [ngStyle]=\"{'padding':'10px', 'background-color':stringToColorFunction(element.firstName+element.lastName), 'border-radius':'50%'}\"\r\n                                *ngIf='!element.profilePicture'\r\n                                loading=\"lazy\"\r\n                              >{{\r\n                                element.firstName.substr(0, 1).toUpperCase() +\r\n                                element.lastName.substr(0, 1).toUpperCase()\r\n                              }}</span>\r\n                              <img\r\n                                *ngIf='element.profilePicture'\r\n                                src=\"{{ element.profilePicture }}\"\r\n                                class=\"profile-picture thumbnail-image\"\r\n                                loading=\"lazy\"\r\n                                alt=\"{{\r\n                                  element.firstName.substr(0, 1).toUpperCase() +\r\n                                    element.lastName.substr(0, 1).toUpperCase()\r\n                                }}\"\r\n                              />\r\n\r\n                            </div>\r\n                            <div [ngStyle]=\"{'margin-left': '5px'}\">\r\n                              {{element.firstName}} {{element.lastName}}\r\n                            </div>\r\n                          </div>\r\n                        </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"teamshortname\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Bet Team </th>\r\n                        <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"> {{element.teamShortName}} </td>\r\n                    </ng-container>\r\n\r\n                    <ng-container matColumnDef=\"contestPoints\">\r\n                        <th mat-header-cell mat-sort-header *matHeaderCellDef class=\"highlight\"> Bet Points </th>\r\n                        <td mat-cell *matCellDef=\"let element\" [ngStyle]=\"{'background-color':un == element.username ? '#E4E6FF':'','color':un == element.username ? 'black':''}\"> {{element.contestPoints}} </td>\r\n                    </ng-container>\r\n\r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\r\n                    <tr mat-row [ngClass]=\"{'evenrow': index%2 == 1}\"\r\n                        *matRowDef=\"let row; columns: displayedColumns; let index=index\"></tr>\r\n                </table>\r\n                <mat-paginator color=\"accent\" [pageSizeOptions]=\"[10,20,30,40,50]\" showFirstLastButtons></mat-paginator>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { allteams, chennaiWin, trophy } from 'src/app/common/constants/links';\r\nimport { RU } from 'src/app/common/constants/roles';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\n\r\n@Component({\r\n  selector: 'app-user-dashboard',\r\n  templateUrl: './user-dashboard.component.html',\r\n  styleUrls: ['./user-dashboard.component.css']\r\n})\r\nexport class UserDashboardComponent implements OnInit {\r\n\r\n  trophy = trophy;\r\n  chennai2021 = chennaiWin;\r\n  allteams = allteams;\r\n\r\n  constructor(private loginStateService: LoginstateService,\r\n    private router: Router\r\n    ) {\r\n      loginStateService.role = RU;\r\n    }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<!-- 21:9 aspect ratio -->\r\n<!-- <div class=\"embed-responsive embed-responsive-21by9\">\r\n    <iframe class=\"embed-responsive-item\" is=\"x-frame-bypass\" src=\"https://www.hotstar.com/in/sports/sports/match-44-csk-vs-mi/embed/2001755628\"></iframe>\r\n</div>\r\n\r\n<hr> -->\r\n\r\n<div id=\"carouselExampleIndicators\" class=\"carousel slide container-fluid\" data-ride=\"carousel\" data-interval=\"4000\">\r\n    <ol class=\"carousel-indicators\">\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"0\" class=\"active\"></li>\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"1\"></li>\r\n        <li data-target=\"#carouselExampleIndicators\" data-slide-to=\"2\"></li>\r\n    </ol>\r\n    <div class=\"carousel-inner\" role=\"listbox\">\r\n        <div class=\"carousel-item active\" style=\"background-image: url('{{chennai2021}}')\">\r\n            <div class=\"carousel-caption d-none d-md-block\">\r\n                <h2 class=\"display-4\">Game On!</h2>\r\n                <p class=\"lead\">Luck is what happens when preparation meets opportunity.</p>\r\n            </div>\r\n        </div>\r\n        <div class=\"carousel-item\" style=\"background-image: url('{{trophy}}')\">\r\n            <div class=\"carousel-caption d-none d-md-block\">\r\n                <!-- <h2 class=\"display-4\" style=\"color: black; font-weight: bolder;\">Get Prepared!</h2> -->\r\n                <h2 class=\"display-4\" >Get Prepared!</h2>\r\n                <p class=\"lead\">Only 1 Team Stands at Last.</p>\r\n                <!-- <p class=\"lead\" style=\"color: black; font-weight: bolder;\">Only 1 Team Stands at Last.</p> -->\r\n            </div>\r\n        </div>\r\n        <div class=\"carousel-item\" style=\"background-image: url('{{allteams}}')\">\r\n            <div class=\"carousel-caption d-none d-md-block\">\r\n                <!-- <h2 class=\"display-4\" >Place Bet on Your Favourite Team</h2> -->\r\n                <h2 class=\"display-4\" style=\"color: rgb(23, 211, 48); font-weight: bolder;\">Place Bet on Your Favourite Team</h2>\r\n                <p class=\"lead\" style=\"color: rgb(48, 219, 85); font-weight: bolder;\">If you must play, decide upon three things at the start: the rules of the game, the stakes, and the quitting time</p>\r\n                <!-- <p class=\"lead\">If you must play, decide upon three things at the start: the rules of the game, the stakes, and the quitting time</p> -->\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <a class=\"carousel-control-prev\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"prev\">\r\n        <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"sr-only\">Previous</span>\r\n    </a>\r\n    <a class=\"carousel-control-next\" href=\"#carouselExampleIndicators\" role=\"button\" data-slide=\"next\">\r\n        <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n        <span class=\"sr-only\">Next</span>\r\n    </a>\r\n</div>\r\n","import { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { Select, Store } from '@ngxs/store';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { stadium } from 'src/app/common/constants/links';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { UpcomingMatch } from 'src/app/common/model/match/upcomingMatches';\r\nimport { LoginstateService } from 'src/app/common/service/login_state/loginstate.service';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { GetUpcomingMatch } from 'src/app/common/store/actions/match/upcomingmatch.action';\r\nimport { UpcomingMatchState } from 'src/app/common/store/state/match/upcomingMatches.state';\r\n\r\n@Component({\r\n  selector: 'app-match-list',\r\n  templateUrl: './match-list.component.html',\r\n  styleUrls: ['./match-list.component.css']\r\n})\r\nexport class MatchListComponent implements OnInit, OnDestroy {\r\n\r\n  teamColor:any = {\r\n    1: \"#ff0\", //csk\r\n    2: \"#2561ae\", //dc\r\n    3: \"#00416a\", //gt\r\n    4: \"#7300ab\", //kkr\r\n    5: \"#ace5ee\", //lsg\r\n    6: \"#004f91\", //mi\r\n    7: \"#ed1f27\", //pk\r\n    8: \"RGB(37 ,74 ,165)\", //rr\r\n    9: \"#d5152c\", //rcb\r\n    10: \"#f7a721\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n  teamFontColor:any = {\r\n    1: \"black\", //csk\r\n    2: \"#fff\", //dc\r\n    3: \"#fff\", //gt\r\n    4: \"#fff\", //kkr\r\n    5: \"black\", //lsg\r\n    6: \"#fff\", //mi\r\n    7: \"#fff\", //pk\r\n    8: \"white\", //rr\r\n    9: \"#fff\", //rcb\r\n    10: \"black\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'black', //\r\n    t2: 'black' //\r\n  }\r\n\r\n  borderTop:any = {\r\n    1: \"5px solid #ef9b0f\", //csk\r\n    2: \"5px solid #4B9CD3\", //dc\r\n    3: \"5px solid #1d2951\", //gt\r\n    4: \"5px solid #430064\", //kkr\r\n    5: \"5px solid #9bc4e2\", //lsg\r\n    6: \"5px solid blue\", //mi\r\n    7: \"5px solid #af002a\", //pk\r\n    8: \"5px solid #1877F2\", //rr\r\n    9: \"5px solid #800000\", //rcb\r\n    10: \"5px solid #F05E23\", //srh\r\n    //in case if the ids of the above teams changes, default colors will be used\r\n    t1: 'pink', //\r\n    t2: 'silver' //\r\n  };\r\n\r\n  stadium = stadium;\r\n  matchData!: UpcomingMatch[];\r\n  clearButton = false;\r\n  searchTitle = 'Place Bet on the upcoming Matches!';\r\n  days5:any;\r\n\r\n  @Select(UpcomingMatchState.getUpcomingMatchData)\r\n  matchData$!: Observable<UpcomingMatch[]>;\r\n\r\n  @Select(UpcomingMatchState.upcomingMatchLoaded)\r\n  upcomingmatchLoaded$!: Observable<boolean>;\r\n\r\n  upcomingmatchLoadedSub!: Subscription;\r\n\r\n  constructor(\r\n    private matchservice: MatchesService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private loginStateService: LoginstateService,\r\n    private store: Store\r\n  ) { }\r\n\r\n  async ngOnInit() {\r\n    this.matchData = await this.getMatchDetails();\r\n    // console.log(this.matchData);\r\n\r\n    this.matchData$.subscribe((res) => {\r\n      this.matchData = res;\r\n    });\r\n  }\r\n\r\n  async getMatchDetails(): Promise<any> {\r\n    this.upcomingmatchLoadedSub = this.upcomingmatchLoaded$.subscribe(\r\n      async (loadedmatchdata) => {\r\n        if (!loadedmatchdata) {\r\n          await this.store.dispatch(new GetUpcomingMatch());\r\n        }});\r\n  }\r\n\r\n  // async getMatchDetails(): Promise<any> {\r\n  //   let panelClass = 'green';\r\n  //   let snackbarMsg = '';\r\n  //   let snackbarRef = null;\r\n  //   const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n  //   let matchModel: MatchModel[] = [];\r\n  //   let resp = null;\r\n  //   try {\r\n  //     resp = await this.matchservice.getAllUpcomingMatches();\r\n  //     matchModel = resp.body;\r\n  //     if (matchModel) {\r\n  //       dialogRef.close();\r\n  //       return matchModel;\r\n  //     } else {\r\n  //       snackbarMsg = NO_RESP;\r\n  //       panelClass = 'red';\r\n  //     }\r\n  //   } catch (ex) {\r\n  //     snackbarMsg = getErrorMessage(ex);\r\n  //     panelClass = 'red';\r\n  //   } finally {\r\n  //     dialogRef.close();\r\n  //   }\r\n  //   if (snackbarMsg) {\r\n  //     snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n  //       getSnackbarProperties(snackbarMsg, panelClass));\r\n  //   }\r\n  //   return [];\r\n  // }\r\n\r\n  // getColorForTeam1(){\r\n  //   return this.matchData && this.matchData.team1Id ? this.teamColor[this.matchData.team1Id] : this.teamColor.t1;\r\n  // }\r\n\r\n  // getColorForTeam2(){\r\n  //   return this.matchData && this.matchData.team2Id ? this.teamColor[this.matchData.team2Id] : this.teamColor.t2;\r\n  // }\r\n\r\n  loginState = this.loginStateService.getLoginState();\r\n  role = this.loginState?.role;\r\n\r\n  gotoBettingPage(id:any,dateSent: Date){\r\n    // this.location.replaceState('');\r\n    let currentDate = new Date();\r\n    dateSent = new Date(dateSent);\r\n    var diffMs = (dateSent.getTime() - currentDate.getTime()); // milliseconds between now & Christmas\r\n    var diffDays = Math.floor(diffMs / 86400000); // days\r\n    // console.log(diffDays);\r\n    const days = diffDays;\r\n    // return  this.days;\r\n\r\n    if (days < 5 ) {\r\n      this.router.navigate([this.role+`/match-list/betting-page/${id}`]);\r\n    }else{\r\n      let panelClass = 'yellow';\r\n    let snackbarMsg = 'We Understand your Curiosity! But this Match is out of range';\r\n    let snackbarRef = null;\r\n    snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n      getSnackbarProperties(snackbarMsg, panelClass));\r\n    }\r\n  }\r\n\r\n  async ngOnDestroy() {\r\n    this.upcomingmatchLoadedSub.unsubscribe();\r\n  }\r\n}\r\n","<body [style.background-image]=\"'url(' + stadium + ')'\">\r\n    <div class=\"card\" *ngFor=\"let matchdata of matchData\" (click)=\"gotoBettingPage(matchdata.matchId,matchdata.startDatetime)\">\r\n\r\n        <div class=\"left\" [style.background]=\"matchdata.team1Id ? teamColor[matchdata.team1Id] : teamColor.t1\" [style.border-top]=\"matchdata.team1Id ? borderTop[matchdata.team1Id] : borderTop.t1\">\r\n            <!-- {{matchdata.team1Id ? teamColor[matchdata.team1Id] : teamColor.t1 }} -->\r\n        </div>\r\n\r\n        <div class=\"right\" [style.background]=\"matchdata.team2Id ? teamColor[matchdata.team2Id] : teamColor.t2\" [style.border-top]=\"matchdata.team2Id ? borderTop[matchdata.team2Id] : borderTop.t2\">\r\n            <!-- {{ matchdata.team2Id ? teamColor[matchdata.team2Id] : teamColor.t2}} -->\r\n        </div>\r\n\r\n        <!-- <h2>Upcoming Match No. {{matchdata.matchId}}</h2> -->\r\n        <h2> {{matchdata.name}}</h2>\r\n        <div class=\"match-details\">\r\n            <div class=\"team1\">\r\n                <img loading=\"lazy\" style=\"border-radius: 50%; \" src={{matchdata.team1Logo}} />\r\n                <h3 class=\"team-name\" [style.color]=\"matchdata.team1Id ? teamFontColor[matchdata.team1Id] : teamFontColor.t1\"> {{matchdata.team1}} </h3>\r\n            </div>\r\n            <div class=\"details\">\r\n                <!-- <h3 class=\"date\"> {{matchdata.startDatetime | date :'medium':'UTC' }} IST </h3> -->\r\n                <h3 class=\"date\"> {{matchdata.startDatetime | date :'medium' }} IST </h3>\r\n                <h1 class=\"versus\">VS</h1>\r\n                <h4 class=\"venue\"> {{matchdata.venue}} </h4>\r\n            </div>\r\n            <div class=\"team2\">\r\n                <img loading=\"lazy\" style=\"border-radius: 50%; \" src=\"{{matchdata.team2Logo}}\" />\r\n                <h3 class=\"team-name\" [style.color]=\"matchdata.team2Id ? teamFontColor[matchdata.team2Id] : teamFontColor.t2\">{{matchdata.team2}} </h3>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</body>"],"sourceRoot":"webpack:///"}