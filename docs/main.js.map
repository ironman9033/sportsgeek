{"version":3,"sources":["./src/app/common/service/statistics/user-statictics.service.ts","./src/app/common/service/authentication_service/authentication.service.ts","./src/app/common/service/login_state/loginstate.service.ts","./src/app/common/service/user_service/user.service.ts","./src/app/common/service/forgot-password/reset-password-with-otp.service.ts","./src/app/common/guard/auth.guard.ts","./src/app/common/components/loading/loading.component.ts","./src/app/common/components/loading/loading.component.html","./src/app/common/constants/http-urls.ts","./src/app/common/store/state/user/user.state.ts","./src/app/common/model/user/user-with-password-model.ts","./src/environments/environment.ts","./src/app/common/constants/roles.ts","./src/app/common/components/footer/about-us/about-us.component.ts","./src/app/common/components/footer/about-us/about-us.component.html","./src/app/common/store/state/match/matches.state.ts","./src/app/common/components/footer/footer.component.ts","./src/app/common/components/footer/footer.component.html","./src/app/common/model/login/login-model.ts","./src/app/common/constants/links.ts","./src/app/common/components/confirm-box/confirm-box.component.ts","./src/app/common/components/confirm-box/confirm-box.component.html","./src/app/common/model/user/user-model.ts","./src/app/common/store/state/match/upcomingMatches.state.ts","./src/app/common/store/state/match/oldMatches.state.ts","./src/app/common/store/actions/user/userfuturebets.action.ts","./src/app/app.component.html","./src/app/app.component.ts","./src/app/common/store/actions/user/userstats.action.ts","./src/app/common/components/change-password/change-password.component.ts","./src/app/common/components/change-password/change-password.component.html","./src/app/app.module.ts","./src/app/common/store/state/user/userstats.state.ts","./src/app/common/components/header/header.component.ts","./src/app/common/components/header/header.component.html","./src/app/common/constants/snackbar-properties.ts","./src/app/common/service/matches_service/matches.service.ts","./src/app/common/store/state/user/userfuturebets.state.ts","./src/app/common/store/actions/match/upcomingmatch.action.ts","./src/app/common/components/snackbar/snackbar.component.ts","./src/app/common/components/snackbar/snackbar.component.html","./src/app/common/model/change-password/sendotp.ts","./src/app/common/constants/error-message.ts","./src/app/common/store/actions/match/matches.action.ts","./src/app/common/store/actions/match/oldmatch.action.ts","./src/app/common/components/not-found/not-found.component.ts","./src/app/common/components/not-found/not-found.component.html","./src/app/user/user-registration/user-registration.component.ts","./src/app/user/user-registration/user-registration.component.html","./src/app/common/store/actions/user/user.action.ts","./src/app/common/model/change-password/NewPassword.ts","./src/app/common/service/http-interceptor/http-interceptor.service.ts","./src/app/common/components/forgot-password/forgot-password.component.ts","./src/app/common/components/forgot-password/forgot-password.component.html","./src/app/app-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/common/model/change-password/change-forgot-password.ts","./src/app/common/components/footer/contact-us/contact-us.component.ts","./src/app/common/components/footer/contact-us/contact-us.component.html","./src/app/common/components/footer/rules/rules.component.ts","./src/app/common/components/footer/rules/rules.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { usersBaseURL } from '../../constants/http-urls';\r\nimport { UserFutureBets } from '../../model/statistics/user-future-bets';\r\nimport { UsersWinningLosingModel } from '../../model/statistics/users-winning-losing-points';\r\nimport { UserStats } from '../../model/statistics/userstats';\r\n\r\n// let usersBaseURL = 'http://localhost:8081/users';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserStaticticsService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  async getUserWinningLosingPoint(userId:number): Promise<any> {\r\n    return await this.http.get(usersBaseURL + '/' + userId + '/winning-losing-points', { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  // async getUserLossingPoint(userId:number): Promise<any> {\r\n  //   return await this.http.get<UsersLoosingModel>(usersBaseURL + '/' + userId + '/loosing-points', { observe: 'response' }).toPromise();\r\n  // }\r\n\r\n  async getUserStats(): Promise<any> {\r\n    return await this.http.get(usersBaseURL + '/statistics', { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async getUserStatsById(userId:number): Promise<any> {\r\n    return await this.http.get(usersBaseURL + '/statistics/' + userId, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async getUserFutureBets(): Promise<any> {\r\n    return await this.http.get(usersBaseURL + '/future-contest', { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async getUserFutureBetsById(userId:number): Promise<any> {\r\n    return await this.http.get(usersBaseURL + '/future-contest/' + userId, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  // NGXS SERVICES\r\n\r\n  getUserStatsNGXS() {\r\n    return this.http.get<UserStats[]>(usersBaseURL + '/statistics');\r\n  }\r\n\r\n  getUserFutureBetsNGXS() {\r\n    return this.http.get<UserFutureBets[]>(usersBaseURL + '/future-contest');\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { usersBaseURL } from '../../constants/http-urls';\r\nimport { LoginModel } from '../../model/login/login-model';\r\nimport { LoginStateModel } from '../../model/login/LoginStateModel';\r\n\r\n// let jwtlogin_api = \"http://localhost:8081/users/authenticate\";\r\n\r\nconst httpOptions = {\r\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\r\n};\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class AuthenticationService {\r\n  constructor(private http: HttpClient, private router: Router) {}\r\n\r\n  async login(loginmodel: LoginModel): Promise<any> {\r\n    let headers = new HttpHeaders({\r\n      'Access-Control-Allow-Origin': '*',\r\n    });\r\n    let options = { headers: headers };\r\n    return await this.http\r\n      .post(usersBaseURL + '/authenticate', loginmodel, {\r\n        headers: headers,\r\n        observe: 'response',\r\n      })\r\n      .toPromise();\r\n  }\r\n  // login(loginmodel: LoginModel, role:string): Observable<any> {\r\n  //   // loginmodel.username = loginmodel.username + role.charAt(0).toUpperCase();\r\n  //   return this.http.post(jwtlogin_api, loginmodel, httpOptions);\r\n  // }\r\n\r\n  isLoggedIn() {\r\n    return !!localStorage.getItem('loginState');\r\n  }\r\n\r\n  // getToken() {\r\n  //   let authToken = localStorage.getItem('loginState');\r\n  //   return (authToken != null) ? true : false;\r\n  // }\r\n\r\n  loggedout() {\r\n    let removeToken = localStorage.removeItem('loginState');\r\n    if (removeToken == null) {\r\n      this.router.navigate(['']);\r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LoginStateModel } from '../../model/login/LoginStateModel';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LoginstateService {\r\n\r\n  role = 'User';\r\n\r\n  constructor() { }\r\n\r\n  createSession(loginStateModel: LoginStateModel) {\r\n    this.role = loginStateModel.role;\r\n    localStorage.setItem('loginState', JSON.stringify(loginStateModel));\r\n    // localStorage.setItem('token');\r\n  }\r\n\r\n  destroySession(role: string) {\r\n    localStorage.removeItem('loginState');\r\n    // localStorage.removeItem('token');\r\n    this.role = role;\r\n  }\r\n\r\n  getLoginState(): LoginStateModel {\r\n    return JSON.parse(localStorage.getItem('loginState')+'');\r\n  }\r\n\r\n  isLoginStateValidForUser(currentUser: string): boolean {\r\n    // currentUser = currentUser.toLowerCase();\r\n    const loginState: LoginStateModel = this.getLoginState();\r\n    if (loginState === null ||\r\n      (loginState != null && loginState.role !== currentUser)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n}\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { promise } from 'selenium-webdriver';\r\nimport { usersBaseURL } from '../../constants/http-urls';\r\nimport { NewPasswordModel } from '../../model/change-password/NewPassword';\r\nimport { RoleModel } from '../../model/role/role';\r\nimport { UserModel } from '../../model/user/user-model';\r\nimport { UserWithPasswordModel } from '../../model/user/user-with-password-model';\r\nimport { AuthenticationService } from '../authentication_service/authentication.service';\r\n\r\n// let userBaseUrl = 'http://localhost:8081/users';\r\n// let addUserUrl = 'http://localhost:8081/users/add-user';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  constructor(\r\n    private http: HttpClient\r\n  ) { }\r\n\r\n  async getAllUser(): Promise<any> {\r\n    return await this.http.get(usersBaseURL, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async getUserById(userId:number): Promise<any> {\r\n    return await this.http.get(usersBaseURL + '/' + userId , { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async updateRole(userId:number,roleId:number): Promise<any> {\r\n    return await this.http.put(usersBaseURL + '/' + userId + '/update-role' + '/' + roleId, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  // async signup(userWithPasswordModel: UserWithPasswordModel): Promise<any>\r\n  async signup(formData:FormData): Promise<any>\r\n  {\r\n    return await this.http.post(usersBaseURL + '/register', formData, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  // async addUser(userModel: UserModel): Promise<any> {\r\n  //   return await this.http.post<UserWithPasswordModel>(usersBaseURL + '/register', userModel, { observe: 'response' }).toPromise();\r\n  // }\r\n\r\n  // async updateUser(userId: number, model: UserModel): Promise<any> {\r\n  async updateUser(userId: number, formData: FormData): Promise<any> {\r\n    return await this.http.put(usersBaseURL + '/' + userId, formData, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async deleteUser(userId: number): Promise<any> {\r\n    return await this.http.delete(usersBaseURL + '/' + userId , { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async deleteProfilePic(userId: number): Promise<any> {\r\n    return await this.http.delete(usersBaseURL + '/' + userId + '/remove-profile-picture', { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async updateActiveStatus(userId: number, isActive: boolean): Promise<any> {\r\n    return await this.http.put(usersBaseURL + '/' + userId + '/' + 'update-status/' + isActive, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async updatePassword(newPasswordModel: NewPasswordModel): Promise<any> {\r\n    return await this.http.put(usersBaseURL + '/update-password', newPasswordModel, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  // NGXS SERVICES\r\n\r\n  getAllUserNGXS() {\r\n    return  this.http.get<UserModel[]>(usersBaseURL);\r\n  }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { usersBaseURL } from '../../constants/http-urls';\r\nimport { ChangeForgotPassword } from '../../model/change-password/change-forgot-password';\r\nimport { SendOtpForForgotPassword } from '../../model/change-password/sendotp';\r\n\r\n// let userBaseUrl = 'http://localhost:8081/users';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ResetPasswordWithOtpService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  async sendOtp(otp: SendOtpForForgotPassword): Promise<any> {\r\n    return await this.http.post(usersBaseURL + '/forget-password', otp, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async updateForgotPassword(forgotPassword: ChangeForgotPassword): Promise<any> {\r\n    return await this.http.put(usersBaseURL + '/forget-password', forgotPassword, { observe: 'response' }).toPromise();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { RU } from '../constants/roles';\r\nimport { LoginStateModel } from '../model/login/LoginStateModel';\r\nimport { AuthenticationService } from '../service/authentication_service/authentication.service';\r\nimport { LoginstateService } from '../service/login_state/loginstate.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(\r\n    private loginStateService: LoginstateService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\r\n    \r\n    const role = route.data.roles as Array<string>;\r\n    const loginState: LoginStateModel = this.loginStateService.getLoginState();\r\n    if (loginState == null && role[0] === RU) {\r\n      return true;\r\n    }\r\n    if (!this.loginStateService.isLoginStateValidForUser(role[0])) {\r\n      return true;\r\n    } else{\r\n      // this.router.navigate(['/' + role[0] + '/login']);\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading',\r\n  templateUrl: './loading.component.html',\r\n  styleUrls: ['./loading.component.css']\r\n})\r\nexport class LoadingComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div>\r\n    <mat-spinner color='accent'></mat-spinner>\r\n    <span>Please wait!</span>\r\n</div>","// export const baseURL = 'http://localhost:8080'\r\nexport const baseURL = 'http://13.235.40.160:8080'\r\n// export const baseURL = 'https://sportsgeek-api-qa.herokuapp.com' //qa\r\nexport const NodeJSUrl = 'wss://bbdipl.herokuapp.com'\r\n// export const NodeJSUrl = 'ws://localhost:8081'\r\nexport const usersBaseURL = baseURL +'/users'\r\nexport const matchBaseURL = baseURL + '/matches'\r\nexport const contestBaseURL = baseURL + '/contest'\r\nexport const rechargeBaseURL = baseURL + '/recharge'\r\nexport const teamBaseURL = baseURL + '/teams'\r\nexport const venueBaseURL = baseURL + '/venues'\r\nexport const tournamentBaseURL = baseURL + '/tournaments'\r\nexport const chatBaseURL = baseURL + '/public-chat'\r\nexport const ContestLogBaseURL = baseURL + '/contest-log'\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { UserModel } from 'src/app/common/model/user/user-model';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { GetUser } from '../../actions/user/user.action';\r\n\r\nexport class userStateModel {\r\n  user!: UserModel[];\r\n  userLoaded!: boolean;\r\n  selectedUser!: UserModel;\r\n}\r\n\r\n@State<userStateModel>({\r\n  name: 'allusers',\r\n  defaults: {\r\n    user: [],\r\n    userLoaded: false,\r\n    selectedUser: null!,\r\n  },\r\n})\r\n@Injectable()\r\nexport class UserState {\r\n  constructor(private userservice: UserService,private dialog: MatDialog) {}\r\n\r\n  @Selector()\r\n  static getUserData(userstatemodel: userStateModel) {\r\n    return userstatemodel.user;\r\n  }\r\n\r\n  @Selector()\r\n  static UserLoaded(userstatemodel: userStateModel) {\r\n    return userstatemodel.userLoaded;\r\n  }\r\n\r\n  @Action(GetUser)\r\n  getUsers({ getState, setState }: StateContext<userStateModel>) {\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    return this.userservice.getAllUserNGXS().pipe(\r\n      tap((res) => {\r\n        const state = getState();\r\n        setState({\r\n          ...state,\r\n          user: res,\r\n          userLoaded: true,\r\n        });\r\n        dialogRef.close();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { UserModel } from \"./user-model\";\r\n\r\nexport class UserWithPasswordModel extends UserModel\r\n{\r\n    Password!:string;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n}","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","export const RA = 'Admin';\r\nexport const RU = 'User';","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.css']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onNavigate(){\r\n    window.open(\"https://en.wikipedia.org/wiki/Indian_Premier_League\");\r\n  }\r\n\r\n  goToTwitter(){\r\n    window.open(\"https://twitter.com/SportsGeekApp\");\r\n  }\r\n\r\n  goToInstagram(){\r\n    window.open(\"https://www.instagram.com/sportsgeekapp\");\r\n  }\r\n\r\n  goToFacebook(){\r\n    window.open(\"https://www.facebook.com/SportsGeekApp\");\r\n  }\r\n}\r\n","<body>\r\n  <div class=\"section\">\r\n    <div class=\"container\">\r\n      <div class=\"content-section\">\r\n        <div class=\"title\">\r\n          <h1>About Us</h1>\r\n        </div>\r\n        <div class=\"content\">\r\n          <h3>BBD IPL (Online Fantasy Cricket Game)</h3>\r\n          <p>\r\n            The Indian Premier League (IPL) is a professional Twenty20 cricket\r\n            league, contested by eight teams based out of eight different Indian\r\n            cities. The league was founded by the Board of Control for Cricket\r\n            in India (BCCI) in 2007. It is usually held between March and May of\r\n            every year and has an exclusive window in the ICC Future Tours\r\n            Programme.\r\n          </p>\r\n          <p>\r\n            There have been 14 seasons of the IPL tournament. The current\r\n            IPL title holders are the Chennai Super Kings, who won the 2021 season.\r\n          </p>\r\n          <p>\r\n            IPL 2022 will start from 26 March.\r\n          </p>\r\n          <div class=\"button\">\r\n            <a (click)=\"onNavigate()\" routerLink>Read More</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"social\">\r\n\r\n          <!-- <a (click)=\"goToFacebook()\"><i class=\"fab fa-facebook-f\"></i></a>\r\n          <a (click)=\"goToTwitter()\"><i class=\"fab fa-twitter\"></i></a>\r\n          <a (click)=\"goToInstagram()\"><i class=\"fab fa-instagram\"></i></a> -->\r\n\r\n          <div class=\"icon-box\">\r\n            <div class=\"box\" (click)=\"goToFacebook()\">\r\n                <i class=\"fab fa-facebook-f\"></i>\r\n            </div>\r\n            <div class=\"box\" (click)=\"goToTwitter()\">\r\n                <i class=\"fab fa-twitter\"></i>\r\n            </div>\r\n            <div class=\"box\" (click)=\"goToInstagram()\">\r\n                <i class=\"fab fa-instagram\"></i>\r\n            </div>\r\n        </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"image-section\">\r\n        <img src=\"assets/img/ipl.jpg\" alt=\"\" />\r\n      </div>\r\n    </div>\r\n  </div>\r\n</body>\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { GetMatch, SetSelectedMatch } from '../../actions/match/matches.action';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\n\r\nexport class matchStateModel {\r\n  match!: MatchModel[];\r\n  matchLoaded!: boolean;\r\n  selectedMatch!: MatchModel;\r\n}\r\n\r\n@State<matchStateModel>({\r\n  name: 'matches',\r\n  defaults: {\r\n    match: [],\r\n    matchLoaded: false,\r\n    selectedMatch: null!,\r\n  },\r\n})\r\n@Injectable()\r\nexport class MatchState {\r\n  constructor(private ms: MatchesService,private dialog: MatDialog) {}\r\n\r\n  @Selector()\r\n  static getMatchData(state: matchStateModel) {\r\n    return state.match;\r\n  }\r\n\r\n  @Selector()\r\n  static MatchLoaded(state: matchStateModel) {\r\n    return state.matchLoaded;\r\n  }\r\n\r\n  @Action(GetMatch)\r\n  getMatches({ getState, setState }: StateContext<matchStateModel>) {\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    return this.ms.getAllMatchesNGXS().pipe(\r\n      tap((res) => {\r\n        const state = getState();\r\n        setState({\r\n          ...state,\r\n          match: res,\r\n          matchLoaded: true,\r\n        });\r\n        dialogRef.close();\r\n      })\r\n    );\r\n  }\r\n\r\n\r\n  @Selector()\r\n  static selectedMatch(state: matchStateModel) {\r\n    return state.selectedMatch;\r\n  }\r\n\r\n  @Action(SetSelectedMatch)\r\n  setSelectedMatch(\r\n    { getState, setState }: StateContext<matchStateModel>,\r\n    { matchId }: SetSelectedMatch\r\n  ) {\r\n    const state = getState();\r\n\r\n    let matchList = state.match;\r\n\r\n    // console.log('INDEX', index);\r\n    const index = matchList.findIndex((findId) => findId.matchId === matchId);\r\n    // console.log('SDSDSDSD', matchList[matchId]);\r\n\r\n    setState({\r\n      ...state,\r\n      selectedMatch: matchList[index],\r\n    });\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { RA, RU } from '../../constants/roles';\r\nimport { LoginStateModel } from '../../model/login/LoginStateModel';\r\nimport { LoginstateService } from '../../service/login_state/loginstate.service';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor(\r\n    public loginStateService2: LoginstateService,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n\r\n  isRoleAdmin() {\r\n    const loginState: LoginStateModel = this.loginStateService2.getLoginState();\r\n    return loginState != null && loginState.role === RA;\r\n  }\r\n\r\n  isRoleUser() {\r\n    const loginState: LoginStateModel = this.loginStateService2.getLoginState();\r\n    return loginState != null && loginState.role === RU;\r\n  }\r\n\r\n\r\n}\r\n","<!-- Footer -->\r\n<footer class=\" text-center text-lg-start customf\">\r\n\r\n    <!-- Copyright -->\r\n    <div *ngIf=\"isRoleAdmin()\" class=\"text-center p-3 footer-content\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\r\n\r\n        <h6 class=\"text-light\">© 2022, BBD IPL, All rights reserved</h6>\r\n        <span class=\"example-spacer\"></span>\r\n        <h6 class=\"text-light\"><a routerLink=\"Admin/about-us\">About Us</a></h6>\r\n\r\n        <h6 class=\"text-light\"><a routerLink=\"Admin/contact-us\">Contact Us</a></h6>\r\n\r\n        <h6 class=\"text-light\"><a routerLink=\"Admin/rules\">Rules </a></h6>\r\n\r\n    </div>\r\n\r\n    <!-- Copyright -->\r\n    <div *ngIf=\"isRoleUser()\" class=\"text-center p-3 footer-content\" style=\"background-color: rgba(0, 0, 0, 0.2);\">\r\n\r\n        <h6 class=\"text-light\">© 2022, BBD IPL, All rights reserved </h6>\r\n        <span class=\"example-spacer\"></span>\r\n        <h6 class=\"text-light\"><a routerLink=\"User/about-us\">About Us</a></h6>\r\n\r\n        <h6 class=\"text-light\"><a routerLink=\"User/contact-us\">Contact Us</a></h6>\r\n\r\n        <h6 class=\"text-light\"><a routerLink=\"User/rules\">Rules </a></h6>\r\n\r\n    </div>\r\n\r\n</footer>\r\n<!-- Footer -->\r\n","export class LoginModel {\r\n    username: string;\r\n    password: string;\r\n\r\n    constructor(username: string, password: string) {\r\n        this.username = username;\r\n        this.password = password;\r\n    }\r\n}","export const ipl = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/ipl.jpg?alt=media';\r\nexport const first ='https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/first.png?alt=media';\r\nexport const second ='https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/second.png?alt=media';\r\nexport const third ='https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/third.png?alt=media';\r\nexport const profile ='https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/profile-section.jpg?alt=media';\r\nexport const register ='https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/register.jpg?alt=media';\r\nexport const stadium ='https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/stadium.jpg?alt=media';\r\nexport const userbadge = 'https://firebasestorage.googleapis.com/v0/b/sportsgeek-74e1e.appspot.com/o/69bba4a0-c114-4379-9854-e4381a3130bc.png?alt=media';\r\nexport const allteams = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/allteams.jpg?alt=media';\r\nexport const chennaiWin = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/chennaiWon2021.jpg?alt=media';\r\nexport const trophy = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/trophy.jpg?alt=media';\r\nexport const teamFlags = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/team_flags.jpg?alt=media';\r\nexport const otherUser = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/otherUser.jpg?alt=media';\r\nexport const csk = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/csk.gif?alt=media';\r\nexport const mi = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/mi.gif?alt=media';\r\nexport const gt = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/gt.gif?alt=media';\r\nexport const lsg = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/lgt.gif?alt=media';\r\nexport const kkr = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/kkr.gif?alt=media';\r\nexport const rcb = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/rcb.gif?alt=media';\r\nexport const rr = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/rr.gif?alt=media';\r\nexport const pbks = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/pbks.gif?alt=media';\r\nexport const srh = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/srh.gif?alt=media';\r\nexport const dc = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/dc.gif?alt=media';\r\nexport const place_bet_music = 'https://firebasestorage.googleapis.com/v0/b/react-128c5.appspot.com/o/place_contest.mp3?alt=media';\r\n","import { Optional } from '@angular/core';\r\nimport { Inject } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-confirm-box',\r\n  templateUrl: './confirm-box.component.html',\r\n  styleUrls: ['./confirm-box.component.css']\r\n})\r\nexport class ConfirmBoxComponent implements OnInit {\r\n\r\n  title: string;\r\n  constructor(\r\n    private matDialogRef: MatDialogRef<ConfirmBoxComponent>,\r\n    @Optional() @Inject(MAT_DIALOG_DATA) public data: string\r\n  ) {\r\n    this.title = data;\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  confirm() {\r\n    this.matDialogRef.close(true);\r\n  }\r\n\r\n  decline() {\r\n    this.matDialogRef.close(false);\r\n  }\r\n\r\n}\r\n","<div class=\"confirm-box\">\r\n    <div class=\"confirm-box-inner\">\r\n        <h1>Are you sure! </h1>\r\n        <h4>{{title}}</h4>\r\n    </div>\r\n    <div class=\"footer\">\r\n        <div class=\"yes\" (click)=\"confirm()\">Yes</div>\r\n        <div class=\"no\" (click)=\"decline()\">No</div>\r\n    </div>\r\n</div>","export class UserModel \r\n{\r\n    userId!:number;\r\n    firstName!:string;\r\n    lastName!:string;\r\n    genderId!:number;\r\n    genderName!:string;\r\n    username!:string;\r\n    password!:string;\r\n    profilePicture!:any;\r\n    roleId!:number;\r\n    roleName!:string;\r\n    availablePoints!:number;\r\n    status!:boolean;\r\n    // CreatedOn!:Date;\r\n    mobileNumber!:number;\r\n    email!:any;\r\n\r\n    constructor() {}\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, createSelector, Selector, State, StateContext } from '@ngxs/store';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { tap } from 'rxjs/operators';\r\nimport { GetUpcomingMatch, SetUpcomingSelectedMatch } from '../../actions/match/upcomingmatch.action';\r\nimport { UpcomingMatch } from 'src/app/common/model/match/upcomingMatches';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { MatDialog } from '@angular/material/dialog';\r\n\r\nexport class upcomingmatchStateModel {\r\n  upcomingmatch!: UpcomingMatch[];\r\n  upcomingmatchLoaded!: boolean;\r\n  upcomingselectedMatch!: UpcomingMatch;\r\n}\r\n\r\n@State<upcomingmatchStateModel>({\r\n  name: 'upcomingmatches',\r\n  defaults: {\r\n    upcomingmatch: [],\r\n    upcomingmatchLoaded: false,\r\n    upcomingselectedMatch: null!,\r\n  },\r\n})\r\n@Injectable()\r\nexport class UpcomingMatchState {\r\n  constructor(private ms: MatchesService,private dialog: MatDialog) {}\r\n\r\n  @Selector()\r\n  static getUpcomingMatchData(upcomingmatchstate: upcomingmatchStateModel) {\r\n    return upcomingmatchstate.upcomingmatch;\r\n  }\r\n\r\n  @Selector()\r\n  static upcomingMatchLoaded(\r\n    upcomingmatchloadedstate: upcomingmatchStateModel\r\n  ) {\r\n    return upcomingmatchloadedstate.upcomingmatchLoaded;\r\n  }\r\n\r\n  @Action(GetUpcomingMatch)\r\n  getUpcomingMatches({\r\n    getState,\r\n    setState,\r\n  }: StateContext<upcomingmatchStateModel>) {\r\n    // const dialogRef = this.dialog.open(LoadingComponent, {\r\n    //   disableClose: false,\r\n    // });\r\n    return this.ms.getAllUpcomingMatchesNGXS().pipe(\r\n      tap((res) => {\r\n        const upcomingmatchstate = getState();\r\n        setState({\r\n          ...upcomingmatchstate,\r\n          upcomingmatch: res,\r\n          upcomingmatchLoaded: true,\r\n        });\r\n        // dialogRef.close();\r\n      })\r\n    );\r\n  }\r\n\r\n  @Selector()\r\n  static selectedUpcomingMatch(upcomingmatchstate: upcomingmatchStateModel) {\r\n    return upcomingmatchstate.upcomingselectedMatch;\r\n  }\r\n\r\n  @Action(SetUpcomingSelectedMatch)\r\n  setSelectedUpcomingMatch(\r\n    { getState, setState }: StateContext<upcomingmatchStateModel>,\r\n    { matchId }: SetUpcomingSelectedMatch\r\n  ) {\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    const upcomingmatchstate = getState();\r\n    let matchList = upcomingmatchstate.upcomingmatch;\r\n    const index = matchList.findIndex((findId) => findId.matchId == matchId);\r\n    // console.log('INDEX',matchList[index]);\r\n\r\n    setState({\r\n      ...upcomingmatchstate,\r\n      upcomingselectedMatch: matchList[index],\r\n    });\r\n    dialogRef.close();\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { MatchModel } from 'src/app/common/model/match/match-model';\r\nimport { MatchesService } from 'src/app/common/service/matches_service/matches.service';\r\nimport { GetOldMatch, SetOldSelectedMatch } from '../../actions/match/oldmatch.action';\r\n\r\nexport class oldMatchStateModel {\r\n  oldmatch!: MatchModel[];\r\n  oldmatchLoaded!: boolean;\r\n  selectedOldMatch!: MatchModel;\r\n}\r\n\r\n@State<oldMatchStateModel>({\r\n  name: 'oldmatches',\r\n  defaults: {\r\n    oldmatch: [],\r\n    oldmatchLoaded: false,\r\n    selectedOldMatch: null!,\r\n  },\r\n})\r\n@Injectable()\r\nexport class OldMatchState {\r\n  constructor(private ms: MatchesService, private dialog: MatDialog) {}\r\n\r\n  @Selector()\r\n  static getOldMatchData(oldmatchstate: oldMatchStateModel) {\r\n    return oldmatchstate.oldmatch;\r\n  }\r\n\r\n  @Selector()\r\n  static OldMatchLoaded(oldmatchloadedstate: oldMatchStateModel) {\r\n    return oldmatchloadedstate.oldmatchLoaded;\r\n  }\r\n\r\n  @Action(GetOldMatch)\r\n  getOldMatches({ getState, setState }: StateContext<oldMatchStateModel>) {\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    return this.ms.getAllOldMatchesNGXS().pipe(\r\n      tap((res) => {\r\n        const oldmatchstate = getState();\r\n        setState({\r\n          ...oldmatchstate,\r\n          oldmatch: res,\r\n          oldmatchLoaded: true,\r\n        });\r\n        dialogRef.close();\r\n      })\r\n    );\r\n  }\r\n\r\n  @Selector()\r\n  static selectedOldMatch(oldmatchstate: oldMatchStateModel) {\r\n    return oldmatchstate.selectedOldMatch;\r\n  }\r\n\r\n  @Action(SetOldSelectedMatch)\r\n  setOldSelectedMatch(\r\n    { getState, setState }: StateContext<oldMatchStateModel>,\r\n    { matchId }: SetOldSelectedMatch\r\n  ) {\r\n    const state = getState();\r\n\r\n    let matchList = state.oldmatch;\r\n\r\n    // console.log('INDEX', index);\r\n    const index = matchList.findIndex((findId) => findId.matchId === matchId);\r\n    // console.log('SDSDSDSD', matchList[matchId]);\r\n\r\n    setState({\r\n      ...state,\r\n      selectedOldMatch: matchList[index],\r\n    });\r\n  }\r\n}\r\n","\r\n\r\nexport class GetUserFB {\r\n    static readonly type = '[UserFutureBets] Get';\r\n}","<app-header *ngIf=\"authservice3.isLoggedIn()\" [deviceXs]=\"deviceXs\"></app-header>\r\n<router-outlet></router-outlet>\r\n<app-footer *ngIf=\"authservice3.isLoggedIn()\"></app-footer>","import { Component } from '@angular/core';\r\nimport { AuthenticationService } from './common/service/authentication_service/authentication.service';\r\nimport {ViewEncapsulation} from '@angular/core';\r\nimport {MediaObserver, MediaChange} from '@angular/flex-layout';\r\nimport { Subscription } from 'rxjs';\r\nimport { OnInit } from '@angular/core';\r\nimport { OnDestroy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class AppComponent implements OnInit,OnDestroy{\r\n  title = 'BBD IPL';\r\n  mediaSub!:Subscription;\r\n  deviceXs!:boolean;\r\n  constructor(\r\n    public authservice3: AuthenticationService,\r\n    public mediaObserver:MediaObserver\r\n    ) { }\r\n  ngOnDestroy() {\r\n    this.mediaSub.unsubscribe();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.mediaSub = this.mediaObserver.media$.subscribe((result:MediaChange)=>{\r\n      // console.log(result.mqAlias);\r\n      this.deviceXs = result.mqAlias === 'xs' ? true : false;\r\n    });\r\n  }\r\n}\r\n","\r\n\r\nexport class GetUserStats {\r\n    static readonly type = '[UserStats] Get';\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { getErrorMessage, NO_RESP } from '../../constants/error-message';\r\nimport { getSnackbarProperties } from '../../constants/snackbar-properties';\r\nimport { NewPasswordModel } from '../../model/change-password/NewPassword';\r\nimport { LoginstateService } from '../../service/login_state/loginstate.service';\r\nimport { UserService } from '../../service/user_service/user.service';\r\nimport { LoadingComponent } from '../loading/loading.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n  selector: 'app-change-password',\r\n  templateUrl: './change-password.component.html',\r\n  styleUrls: ['./change-password.component.css']\r\n})\r\nexport class ChangePasswordComponent implements OnInit {\r\n\r\n  changePasswordForm: FormGroup;\r\n  hide = true;\r\n  hide1 = true;\r\n  hide2 = true;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public loginStateService: LoginstateService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private matDialogRef: MatDialogRef<ChangePasswordComponent>\r\n  ) {\r\n    this.changePasswordForm = this.fb.group({\r\n      currentPassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n      newPassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n      newConfPassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get form() {\r\n    return this.changePasswordForm.controls;\r\n  }\r\n\r\n  async changePassword() {\r\n    if (this.changePasswordForm.valid) {\r\n      const loginState = this.loginStateService.getLoginState();\r\n      const newPasswordModel: NewPasswordModel = new NewPasswordModel();\r\n      newPasswordModel.userId = loginState.userId;\r\n      newPasswordModel.oldPassword = this.form.currentPassword.value;\r\n      newPasswordModel.newPassword = this.form.newPassword.value;\r\n\r\n      let panelClass = 'green';\r\n      let snackbarMsg = '';\r\n      let snackbarRef = null;\r\n      this.snackbar.dismiss();\r\n      const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n      let resp = null;\r\n      try {\r\n        // if (loginState.role === 'User') {\r\n        resp = await this.userService.updatePassword(newPasswordModel);\r\n        // } else if (loginState.role === 'Admin') {\r\n        // resp = await this.adminService.updatePassword(newPasswordModel);\r\n        // }\r\n        const msg = resp.body.message;\r\n        if (msg) {\r\n          snackbarMsg = msg + '! Please Login again.';\r\n          this.loginStateService.destroySession(loginState.role);\r\n          this.matDialogRef.close();\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          snackbarMsg = NO_RESP;\r\n          panelClass = 'red';\r\n        }\r\n      } catch (ex) {\r\n        snackbarMsg = getErrorMessage(ex);\r\n        panelClass = 'red';\r\n      } finally {\r\n        dialogRef.close();\r\n      }\r\n      if (snackbarMsg) {\r\n        snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n          getSnackbarProperties(snackbarMsg, panelClass));\r\n      }\r\n    }\r\n  }\r\n\r\n  closeDialogBox() {\r\n    this.matDialogRef.close();\r\n  }\r\n\r\n}\r\n","<div class=\"sub-container-2\">\r\n    <form [formGroup]=\"changePasswordForm\">\r\n        <p *ngIf=\"loginStateService.role==='User'\">USER CHANGE PASSWORD</p>\r\n        <p *ngIf=\"loginStateService.role==='Admin'\">ADMIN CHANGE PASSWORD</p>\r\n        <div class=\"field-container\">\r\n            <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                <mat-label>Current Password</mat-label>\r\n                <input matInput formControlName=\"currentPassword\" [type]=\"hide ? 'password' : 'text'\">\r\n                <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\" type=\"button\">\r\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </button>\r\n                <mat-error *ngIf=\"form.currentPassword.errors?.required\">password is reqiured</mat-error>\r\n                <mat-error *ngIf=\"form.currentPassword.errors?.minlength\">password must have atleast 6 characters\r\n                </mat-error>\r\n                <mat-error *ngIf=\"form.currentPassword.errors?.maxlength\">password must have less than 40 characters\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"field-container\">\r\n            <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                <mat-label>New Password</mat-label>\r\n                <input matInput formControlName=\"newPassword\" [type]=\"hide1 ? 'password' : 'text'\">\r\n                <button mat-icon-button matSuffix (click)=\"hide1 = !hide1\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide1\" type=\"button\">\r\n                    <mat-icon>{{hide1 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </button>\r\n                <mat-error *ngIf=\"form.newPassword.errors?.required\">password is reqiured</mat-error>\r\n                <mat-error *ngIf=\"form.newPassword.errors?.minlength\">password must have atleast 6 characters\r\n                </mat-error>\r\n                <mat-error *ngIf=\"form.newPassword.errors?.maxlength\">password must have less than 40 characters\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"field-container\">\r\n            <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                <mat-label>Confirm Password</mat-label>\r\n                <input matInput formControlName=\"newConfPassword\" pattern=\"{{form.newPassword.value}}\" [type]=\"hide2 ? 'password' : 'text'\">\r\n                <button mat-icon-button matSuffix (click)=\"hide2 = !hide2\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide2\" type=\"button\">\r\n                    <mat-icon>{{hide2 ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n                  </button>\r\n                <mat-error *ngIf=\"form.newConfPassword.errors?.required\">password is reqiured</mat-error>\r\n                <mat-error *ngIf=\"form.newConfPassword.errors?.minlength\">password must have atleast 6 characters\r\n                </mat-error>\r\n                <mat-error *ngIf=\"form.newConfPassword.errors?.maxlength\">password must have less than 40 characters\r\n                </mat-error>\r\n                <mat-error *ngIf=\"form.newConfPassword.errors?.pattern\">confirm password does not match\r\n                </mat-error>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"field-container\">\r\n            <button mat-raised-button color=\"accent\" type=\"submit\" (click)=\"changePassword()\">Change Password Now!</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"closeDialogBox()\">Cancel</button>\r\n        </div>\r\n    </form>\r\n</div>","import { NgxMatFileInputModule } from '@angular-material-components/file-input';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { NgModule } from '@angular/core';\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatRippleModule } from '@angular/material/core';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\nimport { MatRadioModule } from '@angular/material/radio';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { MatTableFilterModule } from 'mat-table-filter';\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { ChangePasswordComponent } from './common/components/change-password/change-password.component';\r\nimport { ConfirmBoxComponent } from './common/components/confirm-box/confirm-box.component';\r\nimport { AboutUsComponent } from './common/components/footer/about-us/about-us.component';\r\nimport { ContactUsComponent } from './common/components/footer/contact-us/contact-us.component';\r\nimport { FooterComponent } from './common/components/footer/footer.component';\r\nimport { RulesComponent } from './common/components/footer/rules/rules.component';\r\nimport { ForgotPasswordComponent } from './common/components/forgot-password/forgot-password.component';\r\nimport { HeaderComponent } from './common/components/header/header.component';\r\nimport { LoadingComponent } from './common/components/loading/loading.component';\r\nimport { NotFoundComponent } from './common/components/not-found/not-found.component';\r\nimport { SnackbarComponent } from './common/components/snackbar/snackbar.component';\r\nimport { AuthGuard } from './common/guard/auth.guard';\r\nimport { HttpInterceptorService } from './common/service/http-interceptor/http-interceptor.service';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { ServiceWorkerModule } from '@angular/service-worker';\r\nimport { environment } from '../environments/environment';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NgxsModule } from '@ngxs/store';\r\nimport { NgxsLoggerPluginModule } from '@ngxs/logger-plugin';\r\nimport { NgxsReduxDevtoolsPluginModule } from '@ngxs/devtools-plugin';\r\nimport { MatchState } from './common/store/state/match/matches.state';\r\nimport { UpcomingMatchState } from './common/store/state/match/upcomingMatches.state';\r\nimport { UserState } from './common/store/state/user/user.state';\r\nimport { OldMatchState } from './common/store/state/match/oldMatches.state';\r\nimport { UserStatisticsState } from './common/store/state/user/userstats.state';\r\nimport { UserFBState } from './common/store/state/user/userfuturebets.state';\r\n\r\n// console.log(\"app module loaded\");\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    LoadingComponent,\r\n    NotFoundComponent,\r\n    SnackbarComponent,\r\n    LoginComponent,\r\n    ChangePasswordComponent,\r\n    ForgotPasswordComponent,\r\n    ConfirmBoxComponent,\r\n    AboutUsComponent,\r\n    ContactUsComponent,\r\n    RulesComponent,\r\n\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MatTableModule,\r\n    MatButtonModule,\r\n    MatDatepickerModule,\r\n    MatDialogModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatMenuModule,\r\n    MatSidenavModule,\r\n    MatPaginatorModule,\r\n    MatProgressSpinnerModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatIconModule,\r\n    MatSlideToggleModule,\r\n    BrowserAnimationsModule,\r\n    ReactiveFormsModule,\r\n    MatToolbarModule,\r\n    NgbModule,\r\n    FlexLayoutModule,\r\n    MatTableFilterModule,\r\n    OwlDateTimeModule,\r\n    OwlNativeDateTimeModule,\r\n    MatRadioModule,\r\n    MatSortModule,\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    LayoutModule,\r\n    MatSelectModule,\r\n    NgxMatFileInputModule,\r\n    MatAutocompleteModule,\r\n    MatRippleModule,\r\n    MatTooltipModule,\r\n    ServiceWorkerModule.register('ngsw-worker.js', {\r\n      enabled: environment.production,\r\n      // Register the ServiceWorker as soon as the app is stable\r\n      // or after 30 seconds (whichever comes first).\r\n      registrationStrategy: 'registerWhenStable:30000'\r\n    }),\r\n    NgxsModule.forRoot([MatchState,UpcomingMatchState,UserState,OldMatchState,UserStatisticsState,UserFBState]),\r\n    // NgxsModule.forRoot([MatchState,UpcomingMatchState], { developmentMode: !environment.production }),\r\n    NgxsLoggerPluginModule.forRoot(),\r\n    NgxsReduxDevtoolsPluginModule.forRoot()\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: HTTP_INTERCEPTORS,\r\n      useClass: HttpInterceptorService,\r\n      multi: true\r\n    },\r\n    AuthGuard\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { UserStats } from 'src/app/common/model/statistics/userstats';\r\nimport { GetUserStats } from '../../actions/user/userstats.action';\r\nimport { UserStaticticsService } from 'src/app/common/service/statistics/user-statictics.service';\r\n\r\nexport class userStatisticsStateModel {\r\n  userStats!: UserStats[];\r\n  userStatsLoaded!: boolean;\r\n  selectedUserStats!: UserStats;\r\n}\r\n\r\n@State<userStatisticsStateModel>({\r\n  name: 'userstats',\r\n  defaults: {\r\n    userStats: [],\r\n    userStatsLoaded: false,\r\n    selectedUserStats: null!,\r\n  },\r\n})\r\n@Injectable()\r\nexport class UserStatisticsState {\r\n  constructor(private userstatsservice: UserStaticticsService,private dialog: MatDialog) {}\r\n\r\n  @Selector()\r\n  static getUserStatsData(userstatemodel: userStatisticsStateModel) {\r\n    return userstatemodel.userStats;\r\n  }\r\n\r\n  @Selector()\r\n  static UserStatsLoaded(userstatemodel: userStatisticsStateModel) {\r\n    return userstatemodel.userStatsLoaded;\r\n  }\r\n\r\n  @Action(GetUserStats)\r\n  getUsers({ getState, setState }: StateContext<userStatisticsStateModel>) {\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    return this.userstatsservice.getUserStatsNGXS().pipe(\r\n      tap((res) => {\r\n        const state = getState();\r\n        setState({\r\n          ...state,\r\n          userStats: res,\r\n          userStatsLoaded: true,\r\n        });\r\n        dialogRef.close();\r\n      })\r\n    );\r\n  }\r\n}\r\n","import { Input } from '@angular/core';\r\nimport { Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { Subscription } from 'rxjs';\r\nimport { RA, RU } from '../../constants/roles';\r\nimport { LoginStateModel } from '../../model/login/LoginStateModel';\r\nimport { AuthenticationService } from '../../service/authentication_service/authentication.service';\r\nimport { LoginstateService } from '../../service/login_state/loginstate.service';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n  @Input() deviceXs!:boolean;\r\n  // isAuthenticated = false;\r\n  constructor(\r\n    public authservice1: AuthenticationService,\r\n    public loginStateService2: LoginstateService,\r\n    private router: Router\r\n  ) { }\r\n\r\n  ngOnInit() { }\r\n\r\n  logout() {\r\n    this.loginStateService2.destroySession(this.loginStateService2.role);\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  isRoleAdmin() {\r\n    const loginState: LoginStateModel = this.loginStateService2.getLoginState();\r\n    return loginState != null && loginState.role === RA;\r\n  }\r\n\r\n  isRoleUser() {\r\n    const loginState: LoginStateModel = this.loginStateService2.getLoginState();\r\n    return loginState != null && loginState.role === RU;\r\n  }\r\n\r\n  goToHome()\r\n  {\r\n    const loginState: LoginStateModel = this.loginStateService2.getLoginState();\r\n    if (loginState != null && loginState.role === RU) {\r\n      this.router.navigate(['/User/home'])\r\n    }else{\r\n      this.router.navigate(['/Admin/home']);\r\n    }\r\n  }\r\n}\r\n","<header>\r\n    <mat-toolbar class=\"mat-elevation-z8\">\r\n\r\n        <!-- SHIFT LEFT -->\r\n\r\n        <!-- USER -->\r\n\r\n        <div class=\"home\">\r\n            <a (click)=\"goToHome()\" class=\"ahome\" title=\"Home\">\r\n                <mat-icon>home</mat-icon>\r\n                <!-- <span class=\"space\"> <a class=\"ahome\">SportsGeek</a>  </span> -->\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"bets\" *ngIf=\"isRoleUser()\">\r\n            <a routerLink=\"User/match-list\" class=\"ahome\" title=\"Match List\">\r\n                <div *ngIf=\"deviceXs\">\r\n                    <mat-icon>monetization_on</mat-icon>\r\n                </div>\r\n                <div *ngIf=\"!deviceXs\">\r\n                    <mat-icon>monetization_on</mat-icon>Place Bets\r\n                </div>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"leader-board\" *ngIf=\"isRoleUser()\">\r\n            <a routerLink=\"User/leader-board\" class=\"ahome\" title=\"Leaderboard\">\r\n                <div *ngIf=\"deviceXs\">\r\n                    <mat-icon>leaderboard</mat-icon>\r\n                </div>\r\n                <div *ngIf=\"!deviceXs\">\r\n                    <mat-icon>leaderboard</mat-icon>Leader Board\r\n                </div>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"my-matches\" *ngIf=\"isRoleUser()\">\r\n            <a routerLink=\"User/my-matches\" class=\"ahome\" title=\"My Matches\">\r\n                <div *ngIf=\"deviceXs\">\r\n                    <mat-icon>sports_cricket</mat-icon>\r\n                </div>\r\n                <div *ngIf=\"!deviceXs\">\r\n                    <mat-icon>sports_cricket</mat-icon>My Matches\r\n                </div>\r\n            </a>\r\n        </div>\r\n\r\n        <!-- <div class=\"my-matches\" *ngIf=\"isRoleUser()\">\r\n            <a routerLink=\"User/chat\" class=\"ahome\" title=\"Chat\">\r\n                <div *ngIf=\"deviceXs\">\r\n                    <i class=\"far fa-comments\"></i>\r\n                </div>\r\n                <div *ngIf=\"!deviceXs\">\r\n                    <i class=\"far fa-comments\"></i> Chat\r\n                </div>\r\n            </a>\r\n        </div> -->\r\n\r\n        <!-- ADMIN -->\r\n\r\n        <div class=\"bets\" *ngIf=\"!isRoleUser()\">\r\n            <a routerLink=\"Admin/match-list\" class=\"ahome\" title=\"Match List\">\r\n                <div *ngIf=\"deviceXs\">\r\n                    <mat-icon>monetization_on</mat-icon>\r\n                </div>\r\n                <div *ngIf=\"!deviceXs\">\r\n                    <mat-icon>monetization_on</mat-icon>Place Bets\r\n                </div>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"leader-board\" *ngIf=\"!isRoleUser()\">\r\n            <a routerLink=\"Admin/leader-board\" class=\"ahome\" title=\"Leaderboard\">\r\n                <div *ngIf=\"deviceXs\">\r\n                    <mat-icon>leaderboard</mat-icon>\r\n                </div>\r\n                <div *ngIf=\"!deviceXs\">\r\n                    <mat-icon>leaderboard</mat-icon>Leader Board\r\n                </div>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"my-matches\" *ngIf=\"!isRoleUser()\">\r\n            <a routerLink=\"Admin/my-matches\" class=\"ahome\" title=\"My Matches\">\r\n                <div *ngIf=\"deviceXs\">\r\n                    <mat-icon>sports_cricket</mat-icon>\r\n                </div>\r\n                <div *ngIf=\"!deviceXs\">\r\n                    <mat-icon>sports_cricket</mat-icon>My Matches\r\n                </div>\r\n            </a>\r\n        </div>\r\n\r\n        <!-- <div class=\"my-matches\" *ngIf=\"isRoleAdmin()\">\r\n            <a routerLink=\"Admin/chat\" class=\"ahome\" title=\"Chat\">\r\n                <div *ngIf=\"deviceXs\">\r\n                    <i class=\"far fa-comments\"></i>\r\n                </div>\r\n                <div *ngIf=\"!deviceXs\">\r\n                    <i class=\"far fa-comments\"></i> Chat\r\n                </div>\r\n            </a>\r\n        </div> -->\r\n\r\n        <!-- SHIFT RIGHT -->\r\n\r\n        <span class=\"example-spacer\"></span>\r\n\r\n        <div class=\"profile\" *ngIf=\"isRoleUser()\">\r\n            <a routerLink=\"User/view-your-profile\" class=\"ahome\" title=\"View Your Profile\">\r\n                <!-- <mat-icon>account_box</mat-icon> -->\r\n                <i class=\"fas fa-user-circle\"></i>\r\n            </a>\r\n        </div>\r\n\r\n        <div class=\"profile\" *ngIf=\"!isRoleUser()\">\r\n            <a routerLink=\"Admin/view-your-profile\" class=\"ahome\" matTooltip=\"View Your Profile\">\r\n                <!-- <mat-icon>account_box</mat-icon> -->\r\n                <i class=\"fas fa-user-circle\"></i>\r\n            </a>\r\n        </div>\r\n\r\n\r\n        <!-- ADMIN -->\r\n\r\n        <div class=\"row\">\r\n            <div class=\"col\">\r\n                <div ngbDropdown class=\"d-inline-block dropdownbtn\">\r\n\r\n                    <button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle *ngIf=\"authservice1.isLoggedIn() && isRoleAdmin() && !deviceXs\">Manage</button>\r\n\r\n                    <button class=\"btn btn-primary\" id=\"dropdownBasic1\" ngbDropdownToggle *ngIf=\"authservice1.isLoggedIn() && isRoleAdmin() && deviceXs\"></button>\r\n\r\n                    <div ngbDropdownMenu aria-labelledby=\"dropdownBasic1\">\r\n                        <button ngbDropdownItem routerLink=\"Admin/manage-matches\">Matches</button>\r\n                        <button ngbDropdownItem routerLink=\"Admin/manage-old-matches\">Update Match Result</button>\r\n                        <button ngbDropdownItem routerLink=\"Admin/manage-user\">Users</button>\r\n                        <button ngbDropdownItem routerLink=\"Admin/manage-team\">Team</button>\r\n                        <button ngbDropdownItem routerLink=\"Admin/manage-recharge\">Recharge</button>\r\n                        <button ngbDropdownItem routerLink=\"Admin/manage-venue\">Venue</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n\r\n        <a mat-raised-button class=\"logout\" *ngIf=\"authservice1.isLoggedIn() && !deviceXs\" (click)=\"logout()\">Logout</a>\r\n\r\n        <a mat-raised-button class=\"logout\" *ngIf=\"authservice1.isLoggedIn() && deviceXs\" (click)=\"logout()\">\r\n            <mat-icon>logout</mat-icon>\r\n        </a>\r\n\r\n    </mat-toolbar>\r\n</header>\r\n","export function getSnackbarProperties(data: string, panelClass: string): any {\r\n    return {\r\n        verticalPosition: 'bottom',\r\n        horizontalPosition: 'center',\r\n        data,\r\n        duration: 10000,\r\n        panelClass\r\n    };\r\n}","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { observable, Observable } from 'rxjs';\r\nimport { matchBaseURL, usersBaseURL } from '../../constants/http-urls';\r\nimport { MatchModel } from '../../model/match/match-model';\r\nimport { OldMatchesModel } from '../../model/match/oldMatchesModel';\r\nimport { UpcomingMatch } from '../../model/match/upcomingMatches';\r\n\r\n// let matchBaseURL = 'http://localhost:8081/matches';\r\n// let usersBaseURL = 'http://localhost:8081';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MatchesService {\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  async getAllMatches(): Promise<any>\r\n  {\r\n    return await this.http.get(matchBaseURL , { observe:'response' }).toPromise();\r\n  }\r\n\r\n  async getAllUpcomingMatches(): Promise<any>\r\n  {\r\n    return await this.http.get(matchBaseURL + '/upcoming', { observe:'response' }).toPromise();\r\n  }\r\n\r\n  async getAllOldMatches(): Promise<any>\r\n  {\r\n    return await this.http.get(matchBaseURL + '/old-matches', { observe:'response' }).toPromise();\r\n  }\r\n\r\n  async addMatches(matchModel:MatchModel):Promise<any>\r\n  // async addMatches(formData:FormData):Promise<any>\r\n  {\r\n    return await this.http.post(matchBaseURL , matchModel,{observe:'response'}).toPromise();\r\n  }\r\n\r\n  async updateMatches(matchId:number, model:MatchModel):Promise<any>\r\n  // async updateMatches(matchId:number, formData:MatchModel):Promise<any>\r\n  {\r\n    return await this.http.put(matchBaseURL + '/' + matchId,model, {observe:'response'}).toPromise();\r\n  }\r\n\r\n  async updateMatchResult(matchId:number,resultStatus:number,winnerTeamId:number):Promise<any>\r\n  {\r\n    return await this.http.put(matchBaseURL + '/update-match/' + matchId + '/' +resultStatus + '/' +winnerTeamId, {observe:'response'}).toPromise();\r\n  }\r\n\r\n  async deleteMatch(matchId: number): Promise<any> {\r\n    return await this.http.delete(matchBaseURL + '/' + matchId).toPromise();\r\n  }\r\n\r\n  async updateMatchWinner(matchId: number, resultStatus: boolean, winnerTeamId:number): Promise<any> {\r\n    return await this.http.put(matchBaseURL + '/update-match/' + matchId + '/' + resultStatus + '/' + winnerTeamId, { observe: 'response' }).toPromise();\r\n  }\r\n\r\n  async viewMatchById(matchId:number):Promise<any>\r\n  {\r\n    return await this.http.get(matchBaseURL + '/' + matchId, {observe: 'response'}).toPromise();\r\n  }\r\n\r\n  async upcomingMatches(userId:number):Promise<any>\r\n  {\r\n    return await this.http.get(usersBaseURL + '/'  + userId + '/upcoming' , {observe: 'response'}).toPromise();\r\n  }\r\n\r\n  async liveMatch(userId:number):Promise<any>\r\n  {\r\n    return await this.http.get(usersBaseURL + '/' + userId + '/live' , {observe: 'response'}).toPromise();\r\n  }\r\n\r\n  async allMatchResult(userId:number):Promise<any>\r\n  {\r\n    return await this.http.get(usersBaseURL + '/' + userId + '/result' , {observe: 'response'}).toPromise();\r\n  }\r\n\r\n  // NGXS SERVICES\r\n\r\n  getAllMatchesNGXS(){\r\n    return this.http.get<MatchModel[]>(matchBaseURL);\r\n  }\r\n\r\n  getAllUpcomingMatchesNGXS(){\r\n    return this.http.get<UpcomingMatch[]>(matchBaseURL+ '/upcoming');\r\n  }\r\n\r\n  getAllOldMatchesNGXS()\r\n  {\r\n    return this.http.get<MatchModel[]>(matchBaseURL + '/old-matches');\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Action, Selector, State, StateContext } from '@ngxs/store';\r\nimport { tap } from 'rxjs/operators';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { UserStaticticsService } from 'src/app/common/service/statistics/user-statictics.service';\r\nimport { UserFutureBets } from 'src/app/common/model/statistics/user-future-bets';\r\nimport { GetUserFB } from '../../actions/user/userfuturebets.action';\r\n\r\nexport class userFBStateModel {\r\n  userFutureBets!: UserFutureBets[];\r\n  userFutureBetsLoaded!: boolean;\r\n  selectedUserFB!: UserFutureBets;\r\n}\r\n\r\n@State<userFBStateModel>({\r\n  name: 'userFB',\r\n  defaults: {\r\n    userFutureBets: [],\r\n    userFutureBetsLoaded: false,\r\n    selectedUserFB: null!,\r\n  },\r\n})\r\n@Injectable()\r\nexport class UserFBState {\r\n  constructor(private userstatsservice: UserStaticticsService,private dialog: MatDialog) {}\r\n\r\n  @Selector()\r\n  static getUserFB(state: userFBStateModel) {\r\n    return state.userFutureBets;\r\n  }\r\n\r\n  @Selector()\r\n  static UserLoaded(state: userFBStateModel) {\r\n    return state.userFutureBetsLoaded;\r\n  }\r\n\r\n  @Action(GetUserFB)\r\n  getUsers({ getState, setState }: StateContext<userFBStateModel>) {\r\n    const dialogRef = this.dialog.open(LoadingComponent, {\r\n      disableClose: true,\r\n    });\r\n    return this.userstatsservice.getUserFutureBetsNGXS().pipe(\r\n      tap((res) => {\r\n        const state = getState();\r\n        setState({\r\n          ...state,\r\n          userFutureBets: res,\r\n          userFutureBetsLoaded: true,\r\n        });\r\n        dialogRef.close();\r\n      })\r\n    );\r\n  }\r\n}\r\n","\r\n\r\nexport class GetUpcomingMatch {\r\n    static readonly type = '[UpcomingMatch] Get';\r\n}\r\nexport class SetUpcomingSelectedMatch {\r\n    static readonly type = '[UpcomingMatch] Set';\r\n    constructor(public matchId:any){}\r\n}","import { Component, Inject, OnInit, ViewEncapsulation } from '@angular/core';\r\nimport { MatSnackBarRef, MAT_SNACK_BAR_DATA } from '@angular/material/snack-bar';\r\n\r\n@Component({\r\n  selector: 'app-snackbar',\r\n  templateUrl: './snackbar.component.html',\r\n  styleUrls: ['./snackbar.component.css'],\r\n  encapsulation: ViewEncapsulation.None,\r\n})\r\nexport class SnackbarComponent implements OnInit {\r\n\r\n  constructor(\r\n    public snackBarRef: MatSnackBarRef<SnackbarComponent>,\r\n    @Inject(MAT_SNACK_BAR_DATA) public data: any\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"flex\">\r\n    <div class=\"data\">\r\n        <span>{{data}}\r\n        </span>\r\n        <button mat-icon-button (click)=\"snackBarRef.dismiss()\">\r\n            <mat-icon>close</mat-icon>\r\n        </button>\r\n    </div>\r\n</div>","export class SendOtpForForgotPassword{\r\n    email!:any;\r\n    mobileNumber!:any;\r\n    // otp!:number;\r\n    // userId!:number;\r\n    // password!:any;\r\n}","export const NO_RESP = `Action is completed but Server didn't sent any response`;\r\n\r\nexport function getErrorMessage(ex: any, component?: string): string {\r\n    let msg = '';\r\n    const e = ex.error;\r\n    if (e) {\r\n        if (+ex.status === 500 || +ex.status === 0) {\r\n            msg = 'Sorry the server is down! please contact the admin';\r\n        } else {\r\n            msg = e.message;\r\n        }\r\n    }\r\n    return msg;\r\n}\r\n","import { MatchModel } from \"src/app/common/model/match/match-model\";\r\n\r\n// All Matches-----------------------------------------------\r\n\r\nexport class AddMatch {\r\n    static readonly type = '[MatchModel] Add';\r\n    constructor(public payload: MatchModel){}\r\n}\r\n\r\nexport class UpdateMatch {\r\n    static readonly type = '[MatchModel] Update';\r\n    constructor(public payload: MatchModel,public id:number){}\r\n}\r\n\r\nexport class GetMatch {\r\n    static readonly type = '[MatchModel] Get';\r\n}\r\n\r\nexport class SetSelectedMatch {\r\n    static readonly type = '[MatchModel] Set';\r\n    constructor(public matchId:any){}\r\n}\r\n","\r\n\r\nexport class GetOldMatch {\r\n    static readonly type = '[OldMatchesModel] Get';\r\n}\r\nexport class SetOldSelectedMatch {\r\n    static readonly type = '[OldMatchesModel] Set';\r\n    constructor(public matchId:any){}\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { RU } from '../../constants/roles';\r\nimport { LoginStateModel } from '../../model/login/LoginStateModel';\r\nimport { LoginstateService } from '../../service/login_state/loginstate.service';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  templateUrl: './not-found.component.html',\r\n  styleUrls: ['./not-found.component.css']\r\n})\r\nexport class NotFoundComponent implements OnInit {\r\n\r\n  constructor(\r\n    private loginStateService: LoginstateService,\r\n    private router:Router\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  goToHome()\r\n  {\r\n    const loginState: LoginStateModel = this.loginStateService.getLoginState();\r\n    if (loginState != null && loginState.role === RU) {\r\n      this.router.navigate(['/User/home'])\r\n    }else{\r\n      this.router.navigate(['/Admin/home']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"page-wrap d-flex flex-row align-items-center\">\r\n        <div class=\"container\">\r\n            <div class=\"row justify-content-center\">\r\n                <div class=\"col-md-12 text-center\">\r\n                    <span class=\"display-1 d-block\">404</span>\r\n                    <div class=\"mb-4 lead\">\r\n                        Oops! We can't seem to find the page you are looking for.\r\n                    </div>\r\n                    <a routerLink (click)=\"goToHome()\" class=\"btn btn-link\">Back to Home</a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingComponent } from 'src/app/common/components/loading/loading.component';\r\nimport { SnackbarComponent } from 'src/app/common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from 'src/app/common/constants/error-message';\r\nimport { register } from 'src/app/common/constants/links';\r\nimport { getSnackbarProperties } from 'src/app/common/constants/snackbar-properties';\r\nimport { UserWithPasswordModel } from 'src/app/common/model/user/user-with-password-model';\r\nimport { UserService } from 'src/app/common/service/user_service/user.service';\r\n\r\n@Component({\r\n  selector: 'app-user-registration',\r\n  templateUrl: './user-registration.component.html',\r\n  styleUrls: ['./user-registration.component.css']\r\n})\r\nexport class UserRegistrationComponent implements OnInit {\r\n\r\n  image = register;\r\n  signupForm!: FormGroup;\r\n  hide = true;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    // private loginStateService: LoginstateService,\r\n    private router: Router,\r\n    private userService: UserService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n  ) {\r\n\r\n    this.signupForm = this.fb.group({\r\n      username: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(50), Validators.pattern('[a-zA-Z0-9 ]+')]],\r\n      password: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40), Validators.pattern(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@%!])[0-9a-zA-Z@%!]{8,}$/)]],\r\n      confPassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n      phone: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern('[1-9][0-9]{9}')]],\r\n      firstname: ['', [Validators.required, Validators.minLength(4), Validators.maxLength(100), Validators.pattern('[a-zA-Z ]+')]],\r\n      lastname: ['', [Validators.required, Validators.minLength(3), Validators.maxLength(100), Validators.pattern('[a-zA-Z ]+')]],\r\n      email: ['', [Validators.required, Validators.email, Validators.maxLength(30), Validators.pattern(/^[A-Za-z0-9._%+-]+@bbd.co.za$/)]],\r\n      gender : ['',Validators.required],\r\n      profilePicture: ['']\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get form() {\r\n    return this.signupForm.controls;\r\n  }\r\n\r\n  async signup() {\r\n    if (this.signupForm.valid) {\r\n      let userWithPasswordModel: UserWithPasswordModel = new UserWithPasswordModel();\r\n      // userWithPasswordModel.userId = 0;\r\n      // userWithPasswordModel.username = this.form.username.value;\r\n      // userWithPasswordModel.password = this.form.password.value;\r\n      // userWithPasswordModel.firstName = this.form.firstname.value;\r\n      // userWithPasswordModel.lastName = this.form.lastname.value;\r\n      // userWithPasswordModel.email = this.form.email.value;\r\n      // userWithPasswordModel.mobileNumber = this.form.phone.value;\r\n      // userWithPasswordModel.genderId = this.form.gender.value;\r\n      // userWithPasswordModel.status = false;\r\n      // userWithPasswordModel.roleId = 2;\r\n      // userWithPasswordModel.availablePoints = 500;\r\n\r\n      var formData: any = new FormData();\r\n        formData.append(\"username\", this.form.username.value);\r\n        formData.append(\"password\", this.form.password.value);\r\n        formData.append(\"firstName\", this.form.firstname.value);\r\n        formData.append(\"lastName\", this.form.lastname.value);\r\n        formData.append(\"email\", this.form.email.value);\r\n        formData.append(\"mobileNumber\", this.form.phone.value);\r\n        formData.append(\"genderId\", this.form.gender.value);\r\n        formData.append(\"roleId\", 2);\r\n        formData.append(\"availablePoints\", 500);\r\n        formData.append(\"profilePicture\", this.form.profilePicture.value);\r\n\r\n      let panelClass = 'green';\r\n      let snackbarMsg = '';\r\n      let snackbarRef = null;\r\n      this.snackbar.dismiss();\r\n      const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n      let resp = null;\r\n      try {\r\n        resp = await this.userService.signup(formData);\r\n        userWithPasswordModel = resp.body;\r\n        if (userWithPasswordModel != null && userWithPasswordModel.userId > 0) {\r\n          snackbarMsg = 'Your data has been Submitted, Please wait for the Admin to Approve!';\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          snackbarMsg = NO_RESP;\r\n          panelClass = 'red';\r\n        }\r\n      } catch (ex) {\r\n        snackbarMsg = getErrorMessage(ex);\r\n        panelClass = 'red';\r\n      } finally {\r\n        dialogRef.close();\r\n      }\r\n      if (snackbarMsg) {\r\n        snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n          getSnackbarProperties(snackbarMsg, panelClass));\r\n      }\r\n    }\r\n  }\r\n}\r\n","<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Sign Up</title>\r\n</head>\r\n\r\n<body>\r\n    <div class=\"split-screen\">\r\n        <div class=\"left\" [style.background-image]=\"'url(' + image + ')'\">\r\n            <section class=\"copy\">\r\n                <h1>Sign up to start winning Big</h1>\r\n                <p>Place Bets on your favourite team</p>\r\n            </section>\r\n        </div>\r\n        <div class=\"right\">\r\n            <form [formGroup]=\"signupForm\" (ngSubmit)=\"signup()\">\r\n                <!-- <div class=\"form-row\">\r\n                <mat-toolbar class=\"tool\" color=\"primary\"> Sign Up to start Winning Big </mat-toolbar>\r\n                <div class=\"col-lg-7 my-1 p-1\">\r\n                </div>\r\n            </div> -->\r\n                <section class=\"copy\">\r\n                    <h2>Sign Up</h2>\r\n                    <!-- <p> already have an account! <a [routerLink]=\"'/login'\">Login now.</a></p> -->\r\n                </section>\r\n                <div class=\"inner-container container\" fxFlexFill=\"auto\" fxLayoutGap=\"20px\">\r\n                    <!-- <div class=\"first\"> -->\r\n                    <!-- <div class=\"container\"> -->\r\n                    <div class=\"field-container\">\r\n                        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                            <mat-label>First Name</mat-label>\r\n                            <input matInput formControlName=\"firstname\" autocomplete=\"off\">\r\n                            <mat-error *ngIf=\"form.firstname.errors?.required\">first name is reqiured\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.firstname.errors?.minlength\">first name must have atleast 4 characters</mat-error>\r\n                            <mat-error *ngIf=\"form.firstname.errors?.maxlength\">first name must have less than 100 characters</mat-error>\r\n                            <mat-error *ngIf=\"form.firstname.errors?.pattern\">first name is invalid\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"field-container\">\r\n                        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                            <mat-label>Last Name</mat-label>\r\n                            <input matInput formControlName=\"lastname\" autocomplete=\"off\">\r\n                            <mat-error *ngIf=\"form.lastname.errors?.required\">last name is reqiured\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.lastname.errors?.minlength\">last name must have atleast 3 characters</mat-error>\r\n                            <mat-error *ngIf=\"form.lastname.errors?.maxlength\">last name must have less than 100 characters</mat-error>\r\n                            <mat-error *ngIf=\"form.lastname.errors?.pattern\">last name is invalid\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"field-container\">\r\n                        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                            <mat-label>Email</mat-label>\r\n                            <input matInput formControlName=\"email\" autocomplete=\"off\">\r\n                            <mat-error *ngIf=\"form.email.errors?.required\">email is reqiured\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.email.errors?.maxlength\">email must have less than 30 characters</mat-error>\r\n                            <mat-error *ngIf=\"form.email.errors?.email\">email is invalid</mat-error>\r\n                            <mat-error *ngIf=\"form.email.errors?.pattern\">only BBD email is allowed\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"field-container\">\r\n                        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                            <mat-label>Phone no.</mat-label>\r\n                            <input matInput formControlName=\"phone\" autocomplete=\"off\">\r\n                            <mat-error *ngIf=\"form.phone.errors?.required\">phone no. is reqiured</mat-error>\r\n                            <mat-error *ngIf=\"form.phone.errors?.minlength || form.phone.errors?.maxlength || form.phone.errors?.pattern\">\r\n                                phone no. is invalid\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"field-container\">\r\n                        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                            <mat-label>Profile Pic</mat-label>\r\n                            <ngx-mat-file-input formControlName=\"profilePicture\">\r\n                                <i class=\"fa fa-folder-open-o\" aria-hidden=\"true\"></i>\r\n                            </ngx-mat-file-input>\r\n                            <!-- <mat-error *ngIf=\"form.profilePicture.errors?.required\">\r\n                                    is reqiured\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"form.profilePicture.errors?.minlength\">\r\n                                    must have atleast 4 characters\r\n                                </mat-error>\r\n                                <mat-error *ngIf=\"form.profilePicture.errors?.maxlength\">\r\n                                    must have less than 500 characters\r\n                                </mat-error> -->\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <!-- </div> -->\r\n\r\n                    <!-- <div class=\"second\"> -->\r\n\r\n                    <div class=\"field-container\">\r\n                        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                            <mat-label>Username</mat-label>\r\n                            <input matInput formControlName=\"username\" autocomplete=\"off\">\r\n                            <mat-error *ngIf=\"form.username.errors?.required\">username is reqiured\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.username.errors?.minlength\">username must have atleast 4 characters\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.username.errors?.maxlength\">username must have less than 50 characters\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.username.errors?.pattern\">no special characters are allowed\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"field-container\">\r\n                        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                            <mat-label>Password</mat-label>\r\n                            <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\">\r\n                            <span (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\" class=\"fa fa-fw fa-eye field-icon \"></span>\r\n                            <mat-error *ngIf=\"form.password.errors?.required\">password is reqiured\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.password.errors?.minlength\">password must have atleast 6 characters\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.password.errors?.maxlength\">password must have less than 40 characters\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.password.errors?.pattern\">password must contain atleast 1 letter, digits, special character\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"field-container\">\r\n                        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                            <mat-label>Confirm Password</mat-label>\r\n                            <input matInput formControlName=\"confPassword\" [type]=\"hide ? 'password' : 'text'\" pattern=\"{{form.password.value}}\">\r\n                            <span (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\" class=\"fa fa-fw fa-eye field-icon \"></span>\r\n                            <mat-error *ngIf=\"form.confPassword.errors?.required\">confirm password is reqiured\r\n                            </mat-error>\r\n                            <mat-error *ngIf=\"form.confPassword.errors?.minlength\">confirm password must have atleast 6 characters</mat-error>\r\n                            <mat-error *ngIf=\"form.confPassword.errors?.maxlength\">confirm password must have less than 40 characters</mat-error>\r\n                            <mat-error *ngIf=\"form.confPassword.errors?.pattern\">confirm password does not match\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n\r\n                    <div class=\"field-container\">\r\n                        <!-- <mat-form-field appearance=\"fill\" color=\"accent\"> -->\r\n                        <!-- <mat-label> Gender </mat-label> -->\r\n                        <mat-radio-group formControlName=\"gender\">\r\n                            <mat-radio-button value=\"1\" type=\"number\">Male</mat-radio-button>\r\n                            <mat-radio-button value=\"2\" type=\"number\">Female</mat-radio-button>\r\n                        </mat-radio-group>\r\n                        <!-- <mat-error style=\"font-size: 10px;\" *ngIf=\"form.gender.errors?.required\">select gender</mat-error> -->\r\n                        <!-- </mat-form-field> -->\r\n                    </div>\r\n\r\n                    <!-- </div> -->\r\n                    <!-- </div> -->\r\n                </div>\r\n                <div>\r\n                    <button type=\"submit\" mat-raised-button matRipple class=\"btnlog mt-2 mb-2\">Sign Up</button>\r\n                    <!-- <button mat-raised-button class=\"btnlog mt-2 mb-2\" matRipple routerLink=\"/login\">Already Have an Account? Sign In </button> -->\r\n                    <p> Already have an account! <a class='loginnow' [routerLink]=\"'/login'\">Login now</a>\r\n                </div>\r\n\r\n            </form>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n\r\n</html>\r\n","\r\n\r\nexport class GetUser {\r\n    static readonly type = '[UserModel] Get';\r\n}","export class NewPasswordModel{\r\n    userId!: number;\r\n    oldPassword!: string;\r\n    newPassword!: string;\r\n\r\n}","import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from '@angular/common/http';\r\nimport { Injectable, Injector } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { AuthenticationService } from '../authentication_service/authentication.service';\r\nimport { LoginstateService } from '../login_state/loginstate.service';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HttpInterceptorService implements HttpInterceptor {\r\n  constructor(\r\n    private loginstate:LoginstateService) { }\r\n\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    // const tokenizedReq: string = JSON.parse(localStorage.getItem('token')+'')?.token;\r\n\r\n    // console.log(\"interception in progress\");\r\n\r\n    const authToken = this.loginstate.getLoginState();\r\n    // const authToken = localStorage.getItem('token');\r\n\r\n    if (authToken) {\r\n      const cloned = req.clone({headers:req.headers.set(\"Authorization\", \"Bearer \" + authToken.token)});\r\n      return next.handle(cloned);\r\n    }\r\n    else{\r\n      return next.handle(req);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog, MatDialogRef } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router, RouterLink } from '@angular/router';\r\nimport { getErrorMessage, NO_RESP } from '../../constants/error-message';\r\nimport { getSnackbarProperties } from '../../constants/snackbar-properties';\r\nimport { ChangeForgotPassword } from '../../model/change-password/change-forgot-password';\r\nimport { SendOtpForForgotPassword } from '../../model/change-password/sendotp';\r\nimport { ResetPasswordWithOtpService } from '../../service/forgot-password/reset-password-with-otp.service';\r\nimport { LoadingComponent } from '../loading/loading.component';\r\nimport { SnackbarComponent } from '../snackbar/snackbar.component';\r\n\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.css']\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n\r\n  generateOtp: FormGroup;\r\n  otpWithNewPassword: FormGroup;\r\n  hide = true;\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n    private resetPassword: ResetPasswordWithOtpService,\r\n    private router: Router\r\n    // private matDialogRef: MatDialogRef<ForgotPasswordComponent>\r\n  ) {\r\n    this.generateOtp = this.fb.group({\r\n      email: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n      mobilenumber: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10)]]\r\n    });\r\n\r\n    this.otpWithNewPassword = this.fb.group({\r\n      otp: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n      newPassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n      newConfPassword: ['', [Validators.required, Validators.minLength(6), Validators.maxLength(40)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  get otpform() {\r\n    return this.generateOtp.controls;\r\n  }\r\n\r\n  get otpWithNewPasswordForm() {\r\n    return this.otpWithNewPassword.controls;\r\n  }\r\n\r\n  async sendOtp() {\r\n    if (this.generateOtp.valid) {\r\n      const sendOtpModel: SendOtpForForgotPassword = new SendOtpForForgotPassword();\r\n      sendOtpModel.email = this.otpform.email.value;\r\n      sendOtpModel.mobileNumber = this.otpform.mobilenumber.value;\r\n\r\n      let panelClass = 'green';\r\n      let snackbarMsg = '';\r\n      let snackbarRef = null;\r\n      this.snackbar.dismiss();\r\n      const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n      let resp = null;\r\n      try {\r\n        resp = await this.resetPassword.sendOtp(sendOtpModel);\r\n        const msg = resp.body;\r\n        if (msg) {\r\n          localStorage.setItem('userId', resp.body.userId);\r\n          snackbarMsg = 'Please check your Email for OTP.';\r\n          // this.matDialogRef.close();\r\n        } else {\r\n          snackbarMsg = NO_RESP;\r\n          panelClass = 'red';\r\n        }\r\n      } catch (ex) {\r\n        snackbarMsg = getErrorMessage(ex);\r\n        panelClass = 'red';\r\n      } finally {\r\n        dialogRef.close();\r\n      }\r\n      if (snackbarMsg) {\r\n        snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n          getSnackbarProperties(snackbarMsg, panelClass));\r\n      }\r\n    }\r\n  }\r\n\r\n  getUserId() {\r\n    let userId = localStorage.getItem('userId');\r\n    return userId;\r\n  }\r\n\r\n  async newPasswordWithOtp() {\r\n    if (this.otpWithNewPassword.valid) {\r\n      const otpWithNewPassword: ChangeForgotPassword = new ChangeForgotPassword();\r\n      otpWithNewPassword.otp = this.otpWithNewPasswordForm.otp.value;\r\n      otpWithNewPassword.userId = this.getUserId();\r\n      otpWithNewPassword.password = this.otpWithNewPasswordForm.newPassword.value;\r\n\r\n      let panelClass = 'green';\r\n      let snackbarMsg = '';\r\n      let snackbarRef = null;\r\n      this.snackbar.dismiss();\r\n      const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n      let resp = null;\r\n      try {\r\n        resp = await this.resetPassword.updateForgotPassword(otpWithNewPassword);\r\n        const msg = resp.body;\r\n        if (msg) {\r\n          snackbarMsg = 'Password Changed Sucessfully! Please Login to Continue.';\r\n          // snackbarMsg = 'Password Changed! Please Login to Continue.';\r\n          localStorage.removeItem('userId');\r\n          this.router.navigate(['/login']);\r\n          // this.matDialogRef.close();\r\n        } else {\r\n          snackbarMsg = NO_RESP;\r\n          panelClass = 'red';\r\n        }\r\n      } catch (ex) {\r\n        // this.router.navigate(['/login']);\r\n        // localStorage.removeItem('userId');\r\n        snackbarMsg = getErrorMessage(ex);\r\n        panelClass = 'red';\r\n      } finally {\r\n        dialogRef.close();\r\n      }\r\n      if (snackbarMsg) {\r\n        snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n          getSnackbarProperties(snackbarMsg, panelClass));\r\n      }\r\n    }\r\n  }\r\n\r\n}\r\n","<div class=\"parent\">\r\n  <div class=\"sub-container-2\">\r\n    <form [formGroup]=\"generateOtp\" (ngSubmit)=\"sendOtp()\">\r\n      <p>OTP WILL BE SENT TO YOUR REGISTERED EMAIL</p>\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" type=\"email\" />\r\n          <mat-error *ngIf=\"otpform.email.errors?.required\"\r\n            >email is reqiured</mat-error\r\n          >\r\n          <mat-error *ngIf=\"otpform.email.errors?.minlength\"\r\n            >email must have atleast 6 characters\r\n          </mat-error>\r\n          <mat-error *ngIf=\"otpform.email.errors?.maxlength\"\r\n            >email must have less than 40 characters\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n          <mat-label>Mobile Number</mat-label>\r\n          <input matInput formControlName=\"mobilenumber\" />\r\n          <mat-error *ngIf=\"otpform.mobilenumber.errors?.required\"\r\n            >mobilenumber is reqiured</mat-error\r\n          >\r\n          <mat-error *ngIf=\"otpform.mobilenumber.errors?.minlength\"\r\n            >mobilenumber must have atleast 6 characters\r\n          </mat-error>\r\n          <mat-error *ngIf=\"otpform.mobilenumber.errors?.maxlength\"\r\n            >mobilenumber must have 10 digits\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n\r\n      <div class=\"field-container\">\r\n        <button mat-raised-button color=\"accent\" type=\"submit\">Send Otp</button>\r\n      </div>\r\n    </form>\r\n  </div>\r\n\r\n  <!-- ENTER OTP AND NEW PASSWORD -->\r\n\r\n  <div class=\"sub-container-2\">\r\n    <form [formGroup]=\"otpWithNewPassword\" (ngSubmit)=\"newPasswordWithOtp()\">\r\n      <p>ENTER THE OTP RECIEVED ON EMAIL AND NEW PASSWORD</p>\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n          <mat-label>OTP</mat-label>\r\n          <input matInput formControlName=\"otp\" type=\"number\" />\r\n          <mat-error *ngIf=\"otpWithNewPasswordForm.otp.errors?.required\"\r\n            >otp is reqiured</mat-error\r\n          >\r\n          <mat-error *ngIf=\"otpWithNewPasswordForm.otp.errors?.minlength\"\r\n            >otp must have atleast 6 characters\r\n          </mat-error>\r\n          <mat-error *ngIf=\"otpWithNewPasswordForm.otp.errors?.maxlength\"\r\n            >otp must have less than 40 characters\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n          <mat-label>New Password</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"newPassword\"\r\n            [type]=\"hide ? 'password' : 'text'\"\r\n          />\r\n\r\n          <button\r\n            mat-icon-button\r\n            matSuffix\r\n            (click)=\"hide = !hide\"\r\n            [attr.aria-label]=\"'Hide password'\"\r\n            [attr.aria-pressed]=\"hide\"\r\n          >\r\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n          </button>\r\n          <mat-error *ngIf=\"otpWithNewPasswordForm.newPassword.errors?.required\"\r\n            >password is reqiured</mat-error\r\n          >\r\n          <mat-error\r\n            *ngIf=\"otpWithNewPasswordForm.newPassword.errors?.minlength\"\r\n            >password must have atleast 6 characters\r\n          </mat-error>\r\n          <mat-error\r\n            *ngIf=\"otpWithNewPasswordForm.newPassword.errors?.maxlength\"\r\n            >password must have less than 40 characters\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"field-container\">\r\n        <mat-form-field appearance=\"fill\" color=\"accent\">\r\n          <mat-label>Confirm Password</mat-label>\r\n          <input\r\n            matInput\r\n            formControlName=\"newConfPassword\"\r\n            pattern=\"{{ otpWithNewPasswordForm.newPassword.value }}\"\r\n            [type]=\"hide ? 'password' : 'text'\"\r\n          />\r\n\r\n          <button\r\n            mat-icon-button\r\n            matSuffix\r\n            (click)=\"hide = !hide\"\r\n            [attr.aria-label]=\"'Hide password'\"\r\n            [attr.aria-pressed]=\"hide\"\r\n          >\r\n            <mat-icon>{{ hide ? \"visibility_off\" : \"visibility\" }}</mat-icon>\r\n          </button>\r\n          <mat-error\r\n            *ngIf=\"otpWithNewPasswordForm.newConfPassword.errors?.required\"\r\n            >password is reqiured</mat-error\r\n          >\r\n          <mat-error\r\n            *ngIf=\"otpWithNewPasswordForm.newConfPassword.errors?.minlength\"\r\n            >password must have atleast 6 characters\r\n          </mat-error>\r\n          <mat-error\r\n            *ngIf=\"otpWithNewPasswordForm.newConfPassword.errors?.maxlength\"\r\n            >password must have less than 40 characters\r\n          </mat-error>\r\n          <mat-error\r\n            *ngIf=\"otpWithNewPasswordForm.newConfPassword.errors?.pattern\"\r\n            >confirm password does not match\r\n          </mat-error>\r\n        </mat-form-field>\r\n      </div>\r\n      <div class=\"field-container\">\r\n        <button mat-raised-button color=\"accent\" type=\"submit\">\r\n          Change Password\r\n        </button>\r\n      </div>\r\n    </form>\r\n\r\n    <a\r\n      mat-raised-button\r\n      color=\"accent\"\r\n      style=\"text-decoration: none\"\r\n      routerLink=\"/login\"\r\n      >Go Back</a\r\n    >\r\n  </div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { ForgotPasswordComponent } from './common/components/forgot-password/forgot-password.component';\r\nimport { NotFoundComponent } from './common/components/not-found/not-found.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { UserRegistrationComponent } from './user/user-registration/user-registration.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', redirectTo: 'login',\r\n    pathMatch: 'full'\r\n  },\r\n  {path: 'Admin', loadChildren:() => import('./admin/admin.module').then(m => m.AdminModule)},\r\n  {path : 'login' , component : LoginComponent},\r\n  {path : 'register' , component : UserRegistrationComponent},\r\n  { path: 'forgot-password', component: ForgotPasswordComponent },\r\n  {path: 'User', loadChildren:() => import('./user/user.module').then(m => m.UserModule)},\r\n  { path: '**', component: NotFoundComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { Router } from '@angular/router';\r\nimport { LoadingComponent } from '../common/components/loading/loading.component';\r\nimport { SnackbarComponent } from '../common/components/snackbar/snackbar.component';\r\nimport { getErrorMessage, NO_RESP } from '../common/constants/error-message';\r\nimport { ipl } from '../common/constants/links';\r\nimport { getSnackbarProperties } from '../common/constants/snackbar-properties';\r\nimport { LoginModel } from '../common/model/login/login-model';\r\nimport { LoginStateModel } from '../common/model/login/LoginStateModel';\r\nimport { AuthenticationService } from '../common/service/authentication_service/authentication.service';\r\nimport { LoginstateService } from '../common/service/login_state/loginstate.service';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  @Input() userType!: string;\r\n  loginform!: FormGroup;\r\n  hide = true;\r\n\r\n  iplImage = ipl;\r\n\r\n  isLoggedIn = false;\r\n  // isLoginFailed = false;\r\n\r\n  // errorMessage!: '';\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    public authservice2: AuthenticationService,\r\n    private router: Router,\r\n    private loginStateService: LoginstateService,\r\n    private snackbar: MatSnackBar,\r\n    private dialog: MatDialog,\r\n  ) {\r\n    const loginStateModel: LoginStateModel = this.loginStateService.getLoginState();\r\n    if (loginStateModel !== null) {\r\n      this.router.navigate(['/' + loginStateModel.role + '/home']);\r\n      return;\r\n    }\r\n    this.loginform = this.fb.group({\r\n      username: ['', [Validators.required, Validators.minLength(4)]],\r\n      password: ['', [Validators.required, Validators.minLength(5)]],\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    // if (localStorage.getItem('token')) {\r\n    //   this.router.navigate(['/adminHome']);\r\n    // }\r\n  }\r\n\r\n  get form() {\r\n    return this.loginform.controls;\r\n  }\r\n\r\n  reset(field: string) {\r\n    this.form[field].setValue('');\r\n  }\r\n\r\n  async login() {\r\n    if (this.loginform.valid) {\r\n      let panelClass = 'green';\r\n      let snackbarMsg = '';\r\n      let snackbarRef = null;\r\n      let loginStateModel: LoginStateModel;\r\n      const loginModel: LoginModel = new LoginModel(this.form.username.value, this.form.password.value);\r\n      this.snackbar.dismiss();\r\n      const dialogRef = this.dialog.open(LoadingComponent, { disableClose: true });\r\n      try {\r\n        const resp = await this.authservice2.login(loginModel);\r\n        loginStateModel = resp.body;\r\n        if (loginStateModel != null) {\r\n          if (loginStateModel.role === 'Admin' || loginStateModel.status) {\r\n            this.loginStateService.createSession(loginStateModel);\r\n            // localStorage.setItem('token', resp.body.token);\r\n            // localStorage.setItem('userId', resp.body.data.userId);\r\n            const url: any = ['/' + this.loginStateService.getLoginState().role + '/home'];\r\n            this.router.navigate(url);\r\n          } else {\r\n            if (this.loginStateService.role === 'User') {\r\n              snackbarMsg = 'sorry you are not verified yet or you have been blocked! please contact the admin';\r\n            } else {\r\n              snackbarMsg = 'sorry you have been blocked! please contact the admin';\r\n            }\r\n            panelClass = 'red';\r\n          }\r\n        } else {\r\n          snackbarMsg = NO_RESP;\r\n          panelClass = 'red';\r\n        }\r\n      } catch (ex) {\r\n        snackbarMsg = getErrorMessage(ex, 'login');\r\n        panelClass = 'red';\r\n      } finally {\r\n        dialogRef.close();\r\n      }\r\n      if (snackbarMsg) {\r\n        snackbarRef = this.snackbar.openFromComponent(SnackbarComponent,\r\n          getSnackbarProperties(snackbarMsg, panelClass));\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n}\r\n","<div\r\n  class=\"section\"\r\n  fxLayoutAlign=\"center center\"\r\n  fxFlexFill\r\n  *ngIf=\"!authservice2.isLoggedIn()\"\r\n>\r\n  <div class=\"container\">\r\n    <div class=\"row no-gutters\">\r\n      <div class=\"col-lg-5\">\r\n        <img src=\"{{iplImage}}\" class=\"img-fluid\" alt=\"\" />\r\n      </div>\r\n      <div class=\"col-lg-7 px-5 pt-5\">\r\n        <form\r\n          class=\"form1\"\r\n          *ngIf=\"!isLoggedIn\"\r\n          (ngSubmit)=\"login()\"\r\n          [formGroup]=\"loginform\"\r\n        >\r\n          <div class=\"form-row\">\r\n            <p class=\"toolbar\">\r\n              Welcome BBDiers, Sign in to start Winning Big\r\n            </p>\r\n            <br />\r\n            <div class=\"col-lg-7\">\r\n              <h6 *ngIf=\"userType === 'User'\" class=\"mat-subheading-2\">\r\n                USER LOGIN\r\n              </h6>\r\n              <p *ngIf=\"userType === 'Admin'\">ADMIN LOGIN</p>\r\n\r\n              <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                <!-- <mat-icon>account_circle</mat-icon> -->\r\n                <mat-label>Username</mat-label>\r\n                <input matInput autocomplete=\"off\" formControlName=\"username\" />\r\n                <mat-error *ngIf=\"form.username.errors?.required\"\r\n                  >username is reqiured</mat-error\r\n                >\r\n                <mat-error *ngIf=\"form.username.errors?.minlength\"\r\n                  >username must have atleast 4 characters\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"col-lg-7\">\r\n              <mat-form-field appearance=\"fill\" color=\"accent\">\r\n                <mat-label>Password</mat-label>\r\n                <input\r\n                  matInput\r\n                  formControlName=\"password\"\r\n                  [type]=\"hide ? 'password' : 'text'\"\r\n                />\r\n\r\n                <!-- <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\" type=\"button\"> -->\r\n                <span\r\n                  class=\"fa fa-fw fa-eye field-icon\"\r\n                  (click)=\"hide = !hide\"\r\n                  [attr.aria-label]=\"'Hide password'\"\r\n                  [attr.aria-pressed]=\"hide\"\r\n                ></span>\r\n                <!-- <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon> -->\r\n                <!-- </button> -->\r\n\r\n                <mat-error *ngIf=\"form.password.errors?.required\"\r\n                  >password is reqiured</mat-error\r\n                >\r\n                <mat-error *ngIf=\"form.password.errors?.minlength\"\r\n                  >password must have atleast 5 characters\r\n                </mat-error>\r\n              </mat-form-field>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"form-row\">\r\n            <div class=\"col-lg-7\">\r\n              <button\r\n                type=\"submit\"\r\n                mat-raised-button\r\n                matRipple\r\n                class=\"btnlog mt-3 mb-5\"\r\n              >\r\n                Login\r\n              </button>\r\n              <!-- [disabled]=\"f.invalid\" -->\r\n            </div>\r\n          </div>\r\n          <hr />\r\n          <a class='forgotPassword' [routerLink]=\"['/forgot-password']\">Forgot Password?</a> <br />\r\n          <p>\r\n            Wanna Start Placing Bets?\r\n            <a mat-icon-button class=\"nav-link\" [routerLink]=\"['/register']\"\r\n              ><i class=\"fas fa-sign-in-alt\"> Hit me to Register</i></a\r\n            >\r\n          </p>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","export class ChangeForgotPassword{\r\n    otp!:number;\r\n    userId!:any;\r\n    password!:any;\r\n}","import { ViewChild } from '@angular/core';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact-us',\r\n  templateUrl: './contact-us.component.html',\r\n  styleUrls: ['./contact-us.component.css']\r\n})\r\nexport class ContactUsComponent implements OnInit {\r\n\r\n  lat: number = -60.612604 ;\r\n  lng: number = -44.817546;\r\n\r\n  @ViewChild('map') mapElement: any;\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n\r\n  onChoseLocation(event:any){\r\n     this.lat = event.coords.lat;\r\n      this.lng = event.coords.lng;\r\n  }\r\n  onNavigate(){\r\n    window.open(\"https://www.google.com/maps/place/54%C2%B028'50.5%22S+36%C2%B023'33.1%22W/@-54.480704,-36.3947017,17z/data=!3m1!4b1!4m9!1m2!2m1!1slone+island!3m5!1s0x0:0x0!7e2!8m2!3d-54.4807043!4d-36.3925134\");\r\n  }\r\n\r\n\r\n}\r\n","<body>\r\n    <div class=\"section\">\r\n        <div class=\"container\">\r\n            <div class=\"content-section\">\r\n                <div class=\"title\">\r\n                    <h1>Contact Us</h1>\r\n                </div>\r\n                <div class=\"content\">\r\n                    <h3>BBD IPL (Online Fantasy Cricket Game)</h3>\r\n                    <p>\r\n                        Email : info.sportgeek@gmail.com\r\n                    </p>\r\n                    <p>\r\n                        Mobile : 9033481597\r\n                    </p>\r\n                    <!-- <div class=\"button\">\r\n                        <a routerLink>Read More</a>\r\n                    </div> -->\r\n                </div>\r\n                <div class=\"social\">\r\n                    <a href=\"\"><i class=\"fab fa-facebook-f\"></i></a>\r\n                    <a href=\"\"><i class=\"fab fa-twitter\"></i></a>\r\n                    <a href=\"\"><i class=\"fab fa-instagram\"></i></a>\r\n                </div>\r\n            </div>\r\n            <div class=\"image-section\">\r\n                <p class=\"nav_url\" (click)=\"onNavigate()\">Click here to see in Google Maps</p>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-rules',\r\n  templateUrl: './rules.component.html',\r\n  styleUrls: ['./rules.component.css']\r\n})\r\nexport class RulesComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n\r\n    <div class=\"container\">\r\n        <h1> <u>Rules</u> </h1>\r\n        <h4>1. Register by putting Rs 100.</h4>\r\n        <h4>2. You will get Rs 100 X 5 = 500 points.</h4>\r\n        <h4>3. On each match, you can bet minimum 10 points on any team (few matches have higher minimum points).</h4>\r\n        <h4>4. If you do not bet on any match, your bet will be put automatically on the losing team of 10 points.</h4>\r\n        <h4>5. Simple principle \"Winners win what losers lose in that match, in the same proportion of their bet\".</h4>\r\n        <h4>6. Losers do not get anything from losing match.</h4>\r\n        <h4>7. Your total points will be visible in the Profile Tab.</h4>\r\n        <h4>8. You can bet anytime, update any number of times and any amount until the match has started.</h4>\r\n\r\n        <hr>\r\n\r\n        <p><u><b> Distribution among winners at the end of IPL Season</b></u></p>\r\n        <h4> Once all the matches are over, the top 3 winners will get amount divided in the proportion of their winning shares. The amount to be divided will be the total collection for this season. If there are 30 participants, then the total amount will\r\n            be = Rs 100 X 30 = 3000. If the top 3 winners have points as 2800, 1000, 700, then the top winner would get = (2800 / (2800 + 1000 + 700)) * 3000 = (2800 / 4500) * 3000 = 1866</h4>\r\n        <p><u><b> Note :</b></u></p>\r\n        The final few matches may have bet restriction to 20 % of their balance amount.\r\n\r\n        <hr>\r\n\r\n        <p> <u><b> Terms and Conditions</b></u></p>\r\n        <h4> All the players would be bound by the terms and conditions of the game. In case of any discrepancy or dispute, the organizer's decision will be final and binding </h4>\r\n    </div>\r\n\r\n</body>","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n.then(() => {\r\n  if ('serviceWorker' in navigator && environment.production) {\r\n    navigator.serviceWorker.register('ngsw-worker.js');\r\n  }\r\n})\r\n.catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}